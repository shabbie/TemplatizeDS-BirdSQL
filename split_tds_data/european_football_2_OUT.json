[{"db_id": "european_football_2", "question": "Which player has the highest overall rating? Indicate the player's api id.", "evidence": "highest overall rating refers to MAX(overall_rating);", "SQL": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1", "question_toks": ["Which", "player", "has", "the", "highest", "overall", "rating", "?", "Indicate", "the", "player", "'s", "api", "id", "."], "SQL_toks": ["SELECT", "player_api_id", "FROM", "Player_Attributes", "ORDER", "BY", "overall_rating", "DESC", "LIMIT", "1"], "evidence_toks": ["highest", "overall", "rating", "refers", "to", "MAX", "(", "overall_rating", ")", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?", "evidence": "percentage refers to DIVIDE(COUNT(height < 180 AND overall_rating > 70),COUNT(id)) * 100%", "SQL": "SELECT CAST(COUNT(CASE WHEN t2.overall_rating > 70 THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height < 180", "question_toks": ["What", "is", "the", "percentage", "of", "players", "that", "are", "under", "180", "cm", "who", "have", "an", "overall", "strength", "of", "more", "than", "70", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "t2.overall_rating", ">", "70", "THEN", "t1.id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "t1.id", ")", "percent", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.height", "<", "180"], "evidence_toks": ["percentage", "refers", "to", "DIVIDE", "(", "COUNT", "(", "height", "<", "180", "AND", "overall_rating", ">", "70", ")", ",", "COUNT", "(", "id", ")", ")", "*", "100", "%"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "What is the preferred foot when attacking of the player with the lowest potential?", "evidence": "preferred foot when attacking refers to preferred_foot; lowest potential refers to MIN(potential);", "SQL": "SELECT preferred_foot FROM Player_Attributes WHERE penalties IS NOT NULL ORDER BY potential ASC LIMIT 1", "question_toks": ["What", "is", "the", "preferred", "foot", "when", "attacking", "of", "the", "player", "with", "the", "lowest", "potential", "?"], "SQL_toks": ["SELECT", "preferred_foot", "FROM", "Player_Attributes", "WHERE", "penalties", "IS", "NOT", "NULL", "ORDER", "BY", "potential", "ASC", "LIMIT", "1"], "evidence_toks": ["preferred", "foot", "when", "attacking", "refers", "to", "preferred_foot", ";", "lowest", "potential", "refers", "to", "MIN", "(", "potential", ")", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?", "evidence": "overall_rating > = 60 AND overall_rating < 66; players whose going to be in all of your attack moves instead of defensing refers to defensive_work_rate = 'low';", "SQL": "SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'", "question_toks": ["Among", "the", "players", "with", "an", "overall", "rating", "between", "60", "to", "65", ",", "how", "many", "players", "whose", "going", "to", "be", "in", "all", "of", "your", "attack", "moves", "instead", "of", "defensing", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "id", ")", "FROM", "Player_Attributes", "WHERE", "overall_rating", "BETWEEN", "60", "AND", "65", "AND", "defensive_work_rate", "=", "'low", "'"], "evidence_toks": ["overall_rating", ">", "=", "60", "AND", "overall_rating", "<", "66", ";", "players", "whose", "going", "to", "be", "in", "all", "of", "your", "attack", "moves", "instead", "of", "defensing", "refers", "to", "defensive_work_rate", "=", "'low", "'", ";"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Which league had the most goals in the 2016 season?", "evidence": "league that had the most goals refers to MAX(SUM(home_team_goal, away_team_goal)); 2016 season refers to season = '2015/2016';", "SQL": "SELECT t2.name FROM Match AS t1 INNER JOIN League AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' ORDER BY t1.home_team_goal + t1.away_team_goal DESC LIMIT 1", "question_toks": ["Which", "league", "had", "the", "most", "goals", "in", "the", "2016", "season", "?"], "SQL_toks": ["SELECT", "t2.name", "FROM", "Match", "AS", "t1", "INNER", "JOIN", "League", "AS", "t2", "ON", "t1.league_id", "=", "t2.id", "WHERE", "t1.season", "=", "'2015/2016", "'", "ORDER", "BY", "t1.home_team_goal", "+", "t1.away_team_goal", "DESC", "LIMIT", "1"], "evidence_toks": ["league", "that", "had", "the", "most", "goals", "refers", "to", "MAX", "(", "SUM", "(", "home_team_goal", ",", "away_team_goal", ")", ")", ";", "2016", "season", "refers", "to", "season", "=", "'2015/2016", "'", ";"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Indicate the full names of the top 10 players with the highest number of penalties.", "evidence": "full name refers to player_name; players with highest number of penalties refers to MAX(penalties);", "SQL": "SELECT t2.player_name FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.id = t2.id ORDER BY t1.penalties DESC LIMIT 10", "question_toks": ["Indicate", "the", "full", "names", "of", "the", "top", "10", "players", "with", "the", "highest", "number", "of", "penalties", "."], "SQL_toks": ["SELECT", "t2.player_name", "FROM", "Player_Attributes", "AS", "t1", "INNER", "JOIN", "Player", "AS", "t2", "ON", "t1.id", "=", "t2.id", "ORDER", "BY", "t1.penalties", "DESC", "LIMIT", "10"], "evidence_toks": ["full", "name", "refers", "to", "player_name", ";", "players", "with", "highest", "number", "of", "penalties", "refers", "to", "MAX", "(", "penalties", ")", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "In Scotland Premier League, which away team won the most during the 2010 season?", "evidence": "Scotland Premier League refers to League.name = 'Scotland Premier League'; away team refers to away_team_api_id; away team that won the most refers to MAX(SUBTRACT(away_team_goal, home_team_goal)) > 0; 2010 season refers to season = '2009/2010';", "SQL": "SELECT t2.away_team_api_id, t3.team_long_name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id INNER JOIN Team AS t3 ON t2.away_team_api_id = t3.team_api_id WHERE t1.name = 'ScotlAND Premier League' AND t2.season = '2009/2010' AND t2.away_team_goal - t2.home_team_goal > 0 ORDER BY t2.away_team_goal - t2.home_team_goal DESC LIMIT 1", "question_toks": ["In", "Scotland", "Premier", "League", ",", "which", "away", "team", "won", "the", "most", "during", "the", "2010", "season", "?"], "SQL_toks": ["SELECT", "t2.away_team_api_id", ",", "t3.team_long_name", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "INNER", "JOIN", "Team", "AS", "t3", "ON", "t2.away_team_api_id", "=", "t3.team_api_id", "WHERE", "t1.name", "=", "'ScotlAND", "Premier", "League", "'", "AND", "t2.season", "=", "'2009/2010", "'", "AND", "t2.away_team_goal", "-", "t2.home_team_goal", ">", "0", "ORDER", "BY", "t2.away_team_goal", "-", "t2.home_team_goal", "DESC", "LIMIT", "1"], "evidence_toks": ["Scotland", "Premier", "League", "refers", "to", "League.name", "=", "'Scotland", "Premier", "League", "'", ";", "away", "team", "refers", "to", "away_team_api_id", ";", "away", "team", "that", "won", "the", "most", "refers", "to", "MAX", "(", "SUBTRACT", "(", "away_team_goal", ",", "home_team_goal", ")", ")", ">", "0", ";", "2010", "season", "refers", "to", "season", "=", "'2009/2010", "'", ";"], "difficulty": "challenging"}, {"db_id": "european_football_2", "question": "What are the speed in which attacks are put together of the top 4 teams with the highest build Up Play Speed and whose tendency/ frequency of dribbling is little?", "evidence": "speed in which attacks are put together refers to buildUpPlaySpeed;highest build up play speed refers to MAX(buildUpPlaySpeed); tendency/ frequency of dribbling is little refers to buildUpPlayDribblingClass = 'Little';", "SQL": "SELECT t1.buildUpPlaySpeed FROM Team_Attributes AS t1 INNER JOIN Team AS t2 ON t1.team_api_id = t2.team_api_id ORDER BY t1.buildUpPlayDribbling ASC LIMIT 4", "question_toks": ["What", "are", "the", "speed", "in", "which", "attacks", "are", "put", "together", "of", "the", "top", "4", "teams", "with", "the", "highest", "build", "Up", "Play", "Speed", "and", "whose", "tendency/", "frequency", "of", "dribbling", "is", "little", "?"], "SQL_toks": ["SELECT", "t1.buildUpPlaySpeed", "FROM", "Team_Attributes", "AS", "t1", "INNER", "JOIN", "Team", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "ORDER", "BY", "t1.buildUpPlayDribbling", "ASC", "LIMIT", "4"], "evidence_toks": ["speed", "in", "which", "attacks", "are", "put", "together", "refers", "to", "buildUpPlaySpeed", ";", "highest", "build", "up", "play", "speed", "refers", "to", "MAX", "(", "buildUpPlaySpeed", ")", ";", "tendency/", "frequency", "of", "dribbling", "is", "little", "refers", "to", "buildUpPlayDribblingClass", "=", "'Little", "'", ";"], "difficulty": "challenging"}, {"db_id": "european_football_2", "question": "What is the average height of players born between 1990 and 1995?", "evidence": "average height = DIVIDE(SUM(height), COUNT(id)); players born between 1990 and 1995 refers to birthday > = '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';", "SQL": "SELECT SUM(height) / COUNT(id) FROM Player WHERE SUBSTR(birthday, 1, 4) BETWEEN '1990' AND '1995'", "question_toks": ["What", "is", "the", "average", "height", "of", "players", "born", "between", "1990", "and", "1995", "?"], "SQL_toks": ["SELECT", "SUM", "(", "height", ")", "/", "COUNT", "(", "id", ")", "FROM", "Player", "WHERE", "SUBSTR", "(", "birthday", ",", "1", ",", "4", ")", "BETWEEN", "'1990", "'", "AND", "'1995", "'"], "evidence_toks": ["average", "height", "=", "DIVIDE", "(", "SUM", "(", "height", ")", ",", "COUNT", "(", "id", ")", ")", ";", "players", "born", "between", "1990", "and", "1995", "refers", "to", "birthday", ">", "=", "'1990-01-01", "00:00:00", "'", "AND", "birthday", "<", "'1996-01-01", "00:00:00", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "List the players' api id who had the highest above average overall ratings in 2010.", "evidence": "highest above average overall ratings refers to MAX(overall_rating); in 2010 refers to substr(date,1,4) = '2010';", "SQL": "SELECT player_api_id FROM Player_Attributes WHERE SUBSTR(`date`, 1, 4) = '2010' ORDER BY overall_rating DESC LIMIT 1", "question_toks": ["List", "the", "players", "'", "api", "id", "who", "had", "the", "highest", "above", "average", "overall", "ratings", "in", "2010", "."], "SQL_toks": ["SELECT", "player_api_id", "FROM", "Player_Attributes", "WHERE", "SUBSTR", "(", "`", "date", "`", ",", "1", ",", "4", ")", "=", "'2010", "'", "ORDER", "BY", "overall_rating", "DESC", "LIMIT", "1"], "evidence_toks": ["highest", "above", "average", "overall", "ratings", "refers", "to", "MAX", "(", "overall_rating", ")", ";", "in", "2010", "refers", "to", "substr", "(", "date,1,4", ")", "=", "'2010", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "List the top 5 leagues in ascending order of the number of goals made in all seasons combined.", "evidence": "number of goals made in all seasons combine = SUM(home_team_goal, away_team_goal);", "SQL": "SELECT t1.name, SUM(t2.home_team_goal) + SUM(t2.away_team_goal) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id GROUP BY t1.name ORDER BY SUM(t2.home_team_goal) + SUM(t2.away_team_goal) DESC LIMIT 5", "question_toks": ["List", "the", "top", "5", "leagues", "in", "ascending", "order", "of", "the", "number", "of", "goals", "made", "in", "all", "seasons", "combined", "."], "SQL_toks": ["SELECT", "t1.name", ",", "SUM", "(", "t2.home_team_goal", ")", "+", "SUM", "(", "t2.away_team_goal", ")", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "GROUP", "BY", "t1.name", "ORDER", "BY", "SUM", "(", "t2.home_team_goal", ")", "+", "SUM", "(", "t2.away_team_goal", ")", "DESC", "LIMIT", "5"], "evidence_toks": ["number", "of", "goals", "made", "in", "all", "seasons", "combine", "=", "SUM", "(", "home_team_goal", ",", "away_team_goal", ")", ";"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Find the average number of long-shot done by Ahmed Samir Farag.", "evidence": "average number of long shot = DIVIDE(SUM(long_shots), COUNT(player_fifa_api_id));", "SQL": "SELECT CAST(SUM(t2.long_shots) AS REAL) / COUNT(t2.`date`) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Ahmed Samir Farag'", "question_toks": ["Find", "the", "average", "number", "of", "long-shot", "done", "by", "Ahmed", "Samir", "Farag", "."], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "t2.long_shots", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t2.", "`", "date", "`", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Ahmed", "Samir", "Farag", "'"], "evidence_toks": ["average", "number", "of", "long", "shot", "=", "DIVIDE", "(", "SUM", "(", "long_shots", ")", ",", "COUNT", "(", "player_fifa_api_id", ")", ")", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.", "evidence": "normal build-up play dribbling class refers to buildUpPlayDribblingClass = 'normal'; in 2014 refers to date > = '2014-01-01 00:00:00' AND date < = '2014-01-31 00:00:00'; names of the teams refers to team_long_name; less than average chance creation passing = DIVIDE(SUM(chanceCreationPassing), COUNT(id)) > chanceCreationPassing;", "SQL": "SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014' AND t2.`date` <= '2014-01-31 00:00:00' )", "question_toks": ["For", "the", "teams", "with", "normal", "build-up", "play", "dribbling", "class", "in", "2014", ",", "List", "the", "names", "of", "the", "teams", "with", "less", "than", "average", "chance", "creation", "passing", ",", "in", "descending", "order", "of", "chance", "creation", "passing", "."], "SQL_toks": ["SELECT", "t3.team_long_name", "FROM", "Team", "AS", "t3", "INNER", "JOIN", "Team_Attributes", "AS", "t4", "ON", "t3.team_api_id", "=", "t4.team_api_id", "WHERE", "t4.chanceCreationPassing", "<", "(", "SELECT", "CAST", "(", "SUM", "(", "t2.chanceCreationPassing", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t1.id", ")", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t2.buildUpPlayDribblingClass", "=", "'Normal", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "4", ")", "=", "'2014", "'", "AND", "t2.", "`", "date", "`", "<", "=", "'2014-01-31", "00:00:00", "'", ")"], "evidence_toks": ["normal", "build-up", "play", "dribbling", "class", "refers", "to", "buildUpPlayDribblingClass", "=", "'normal", "'", ";", "in", "2014", "refers", "to", "date", ">", "=", "'2014-01-01", "00:00:00", "'", "AND", "date", "<", "=", "'2014-01-31", "00:00:00", "'", ";", "names", "of", "the", "teams", "refers", "to", "team_long_name", ";", "less", "than", "average", "chance", "creation", "passing", "=", "DIVIDE", "(", "SUM", "(", "chanceCreationPassing", ")", ",", "COUNT", "(", "id", ")", ")", ">", "chanceCreationPassing", ";"], "difficulty": "challenging"}, {"db_id": "european_football_2", "question": "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.", "evidence": "name of league refers to League.name; average goals by the home team is higher than the away team = AVG(home_team_goal) > AVG(away_team_goal);", "SQL": "SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0", "question_toks": ["List", "the", "name", "of", "leagues", "in", "which", "the", "average", "goals", "by", "the", "home", "team", "is", "higher", "than", "the", "away", "team", "in", "the", "2009/2010", "season", "."], "SQL_toks": ["SELECT", "t1.name", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "WHERE", "t2.season", "=", "'2009/2010", "'", "GROUP", "BY", "t1.name", "HAVING", "(", "CAST", "(", "SUM", "(", "t2.home_team_goal", ")", "AS", "REAL", ")", "/", "COUNT", "(", "DISTINCT", "t2.id", ")", ")", "-", "(", "CAST", "(", "SUM", "(", "t2.away_team_goal", ")", "AS", "REAL", ")", "/", "COUNT", "(", "DISTINCT", "t2.id", ")", ")", ">", "0"], "evidence_toks": ["name", "of", "league", "refers", "to", "League.name", ";", "average", "goals", "by", "the", "home", "team", "is", "higher", "than", "the", "away", "team", "=", "AVG", "(", "home_team_goal", ")", ">", "AVG", "(", "away_team_goal", ")", ";"], "difficulty": "challenging"}, {"db_id": "european_football_2", "question": "What is the short name of the football team Queens Park Rangers?", "evidence": "short name of the football team refers to team_short_name; Queens Park Rangers refers to team_long_name = 'Queens Park Rangers';", "SQL": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'", "question_toks": ["What", "is", "the", "short", "name", "of", "the", "football", "team", "Queens", "Park", "Rangers", "?"], "SQL_toks": ["SELECT", "team_short_name", "FROM", "Team", "WHERE", "team_long_name", "=", "'Queens", "Park", "Rangers", "'"], "evidence_toks": ["short", "name", "of", "the", "football", "team", "refers", "to", "team_short_name", ";", "Queens", "Park", "Rangers", "refers", "to", "team_long_name", "=", "'Queens", "Park", "Rangers", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What is the attacking work rate of the football playerr Franco Zennaro?", "evidence": "", "SQL": "SELECT DISTINCT t2.attacking_work_rate FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Franco Zennaro'", "question_toks": ["What", "is", "the", "attacking", "work", "rate", "of", "the", "football", "playerr", "Franco", "Zennaro", "?"], "SQL_toks": ["SELECT", "DISTINCT", "t2.attacking_work_rate", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Franco", "Zennaro", "'"], "evidence_toks": [], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "How many matches in the 2015/2016 season were held in Scotland Premier League\n?", "evidence": "Scotland Premier League refers to League.name = 'Scotland Premier League';", "SQL": "SELECT COUNT(t2.id) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2015/2016' AND t1.name = 'ScotlAND Premier League'", "question_toks": ["How", "many", "matches", "in", "the", "2015/2016", "season", "were", "held", "in", "Scotland", "Premier", "League", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "t2.id", ")", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "WHERE", "t2.season", "=", "'2015/2016", "'", "AND", "t1.name", "=", "'ScotlAND", "Premier", "League", "'"], "evidence_toks": ["Scotland", "Premier", "League", "refers", "to", "League.name", "=", "'Scotland", "Premier", "League", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "List 10 football teams that has a chance creation passing class of Risky. Inidcate its short name only.", "evidence": "chance creation passing class refers to chanceCreationPassingClass; chanceCreationPassingClass = 'Risky'; short name refers to team_short_name;", "SQL": "SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.chanceCreationPassingClass = 'Risky'", "question_toks": ["List", "10", "football", "teams", "that", "has", "a", "chance", "creation", "passing", "class", "of", "Risky", ".", "Inidcate", "its", "short", "name", "only", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.team_short_name", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t2.chanceCreationPassingClass", "=", "'Risky", "'"], "evidence_toks": ["chance", "creation", "passing", "class", "refers", "to", "chanceCreationPassingClass", ";", "chanceCreationPassingClass", "=", "'Risky", "'", ";", "short", "name", "refers", "to", "team_short_name", ";"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "When is the birthday of the football player who has the highest overall rating?", "evidence": "football player who has the highest overall rating refers to MAX(overall_rating);", "SQL": "SELECT t1.birthday FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t2.overall_rating DESC LIMIT 1", "question_toks": ["When", "is", "the", "birthday", "of", "the", "football", "player", "who", "has", "the", "highest", "overall", "rating", "?"], "SQL_toks": ["SELECT", "t1.birthday", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "ORDER", "BY", "t2.overall_rating", "DESC", "LIMIT", "1"], "evidence_toks": ["football", "player", "who", "has", "the", "highest", "overall", "rating", "refers", "to", "MAX", "(", "overall_rating", ")", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What is the name of the football league in the country of Netherlands?", "evidence": "name of the football league refers to League.name;", "SQL": "SELECT t2.name FROM Country AS t1 INNER JOIN League AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Netherlands'", "question_toks": ["What", "is", "the", "name", "of", "the", "football", "league", "in", "the", "country", "of", "Netherlands", "?"], "SQL_toks": ["SELECT", "t2.name", "FROM", "Country", "AS", "t1", "INNER", "JOIN", "League", "AS", "t2", "ON", "t1.id", "=", "t2.country_id", "WHERE", "t1.name", "=", "'Netherlands", "'"], "evidence_toks": ["name", "of", "the", "football", "league", "refers", "to", "League.name", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Which players had an overall rating of over 80 from 2008 to 2010? Please list player names.", "evidence": "overall_rating > 80; from 2008 to 2010 refers to strftime('%Y', date) BETWEEN '2008' AND '2010';", "SQL": "SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating > 80 AND SUBSTR(t2.`date`, 1, 4) BETWEEN '2008' AND '2010'", "question_toks": ["Which", "players", "had", "an", "overall", "rating", "of", "over", "80", "from", "2008", "to", "2010", "?", "Please", "list", "player", "names", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t2.overall_rating", ">", "80", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "4", ")", "BETWEEN", "'2008", "'", "AND", "'2010", "'"], "evidence_toks": ["overall_rating", ">", "80", ";", "from", "2008", "to", "2010", "refers", "to", "strftime", "(", "'", "%", "Y", "'", ",", "date", ")", "BETWEEN", "'2008", "'", "AND", "'2010", "'", ";"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Please list all team names which the speed class is fast.", "evidence": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';", "SQL": "SELECT DISTINCT t1.team_long_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeedClass = 'Fast'", "question_toks": ["Please", "list", "all", "team", "names", "which", "the", "speed", "class", "is", "fast", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.team_long_name", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t2.buildUpPlaySpeedClass", "=", "'Fast", "'"], "evidence_toks": ["team", "names", "refers", "to", "team_long_name", ";", "speed", "class", "refers", "to", "buildUpPlaySpeedClass", ";", "buildUpPlaySpeedClass", "=", "'Fast", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What is the passing class of CLB team?", "evidence": "passing class refers to buildUpPlayPassingClass; CLB refers to team_short_name = 'CLB';", "SQL": "SELECT DISTINCT t2.buildUpPlayPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'CLB'", "question_toks": ["What", "is", "the", "passing", "class", "of", "CLB", "team", "?"], "SQL_toks": ["SELECT", "DISTINCT", "t2.buildUpPlayPassingClass", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t1.team_short_name", "=", "'CLB", "'"], "evidence_toks": ["passing", "class", "refers", "to", "buildUpPlayPassingClass", ";", "CLB", "refers", "to", "team_short_name", "=", "'CLB", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Which teams have build up play passing more than 70? Please list their short names.", "evidence": "build up play passing refers to buildUpPlayPassing; buildUpPlayPassing > 70; short names refers to team_short_name;", "SQL": "SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayPassing > 70", "question_toks": ["Which", "teams", "have", "build", "up", "play", "passing", "more", "than", "70", "?", "Please", "list", "their", "short", "names", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.team_short_name", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t2.buildUpPlayPassing", ">", "70"], "evidence_toks": ["build", "up", "play", "passing", "refers", "to", "buildUpPlayPassing", ";", "buildUpPlayPassing", ">", "70", ";", "short", "names", "refers", "to", "team_short_name", ";"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Which football player has the shortest height?", "evidence": "shortest height refers to MIN(height);", "SQL": "SELECT player_name FROM player ORDER BY height ASC LIMIT 1", "question_toks": ["Which", "football", "player", "has", "the", "shortest", "height", "?"], "SQL_toks": ["SELECT", "player_name", "FROM", "player", "ORDER", "BY", "height", "ASC", "LIMIT", "1"], "evidence_toks": ["shortest", "height", "refers", "to", "MIN", "(", "height", ")", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "List all the short name of the football team that had a home team goal of 10?", "evidence": "short name of the football team refers to team_short_name; home team goal refers to home_team_goal; home_team_goal = 10;", "SQL": "SELECT t1.team_short_name FROM Team AS t1 INNER JOIN Match AS t2 ON t1.team_api_id = t2.home_team_api_id WHERE t2.home_team_goal = 10", "question_toks": ["List", "all", "the", "short", "name", "of", "the", "football", "team", "that", "had", "a", "home", "team", "goal", "of", "10", "?"], "SQL_toks": ["SELECT", "t1.team_short_name", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.home_team_api_id", "WHERE", "t2.home_team_goal", "=", "10"], "evidence_toks": ["short", "name", "of", "the", "football", "team", "refers", "to", "team_short_name", ";", "home", "team", "goal", "refers", "to", "home_team_goal", ";", "home_team_goal", "=", "10", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What is the difference of the average ball control score between Aaron Meijers and Lukas Hinterseer\n?", "evidence": "difference of the average ball control = SUBTRACT(AVG(ball_control WHERE player_name = 'Aaron Meijers'),\u00a0AVG(ball_control WHERE player_name = 'Lukas Hinterseer'));", "SQL": "SELECT CAST(SUM(CASE WHEN t1.player_name = 'Aaron Meijers' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Meijers' THEN t2.id ELSE NULL END) AaronBallContr_sum , CAST(SUM(CASE WHEN t1.player_name = 'LukAS Hinterseer' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'LukAS Hinterseer' THEN t2.id ELSE NULL END) LukasBallCountr_sum FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id", "question_toks": ["What", "is", "the", "difference", "of", "the", "average", "ball", "control", "score", "between", "Aaron", "Meijers", "and", "Lukas", "Hinterseer", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "t1.player_name", "=", "'Aaron", "Meijers", "'", "THEN", "t2.ball_control", "ELSE", "0", "END", ")", "AS", "REAL", ")", "/", "COUNT", "(", "CASE", "WHEN", "t1.player_name", "=", "'Aaron", "Meijers", "'", "THEN", "t2.id", "ELSE", "NULL", "END", ")", "AaronBallContr_sum", ",", "CAST", "(", "SUM", "(", "CASE", "WHEN", "t1.player_name", "=", "'LukAS", "Hinterseer", "'", "THEN", "t2.ball_control", "ELSE", "0", "END", ")", "AS", "REAL", ")", "/", "COUNT", "(", "CASE", "WHEN", "t1.player_name", "=", "'LukAS", "Hinterseer", "'", "THEN", "t2.id", "ELSE", "NULL", "END", ")", "LukasBallCountr_sum", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id"], "evidence_toks": ["difference", "of", "the", "average", "ball", "control", "=", "SUBTRACT", "(", "AVG", "(", "ball_control", "WHERE", "player_name", "=", "'Aaron", "Meijers", "'", ")", ",", "AVG", "(", "ball_control", "WHERE", "player_name", "=", "'Lukas", "Hinterseer", "'", ")", ")", ";"], "difficulty": "challenging"}, {"db_id": "european_football_2", "question": "What's the long name for the team GEN?", "evidence": "long name for the team refers to team_long_name; team_short_name = 'GEN';", "SQL": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'", "question_toks": ["What", "'s", "the", "long", "name", "for", "the", "team", "GEN", "?"], "SQL_toks": ["SELECT", "team_long_name", "FROM", "Team", "WHERE", "team_short_name", "=", "'GEN", "'"], "evidence_toks": ["long", "name", "for", "the", "team", "refers", "to", "team_long_name", ";", "team_short_name", "=", "'GEN", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Which player is the tallest?", "evidence": "tallest player refers to MAX(height);", "SQL": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1", "question_toks": ["Which", "player", "is", "the", "tallest", "?"], "SQL_toks": ["SELECT", "player_name", "FROM", "Player", "ORDER", "BY", "height", "DESC", "LIMIT", "1"], "evidence_toks": ["tallest", "player", "refers", "to", "MAX", "(", "height", ")", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?", "evidence": "preferred foot when attacking refers to preferred foot; preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';", "SQL": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'", "question_toks": ["Among", "the", "players", "whose", "preferred", "foot", "was", "the", "left", "foot", "when", "attacking", ",", "how", "many", "of", "them", "would", "remain", "in", "his", "position", "when", "the", "team", "attacked", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "player_api_id", ")", "FROM", "Player_Attributes", "WHERE", "preferred_foot", "=", "'left", "'", "AND", "attacking_work_rate", "=", "'low", "'"], "evidence_toks": ["preferred", "foot", "when", "attacking", "refers", "to", "preferred", "foot", ";", "preferred_foot", "=", "'left", "'", ";", "players", "who", "would", "remain", "in", "his", "position", "when", "the", "team", "attacked", "refers", "to", "attacking_work_rate", "=", "'low", "'", ";"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Which country is the Belgium Jupiler League from?", "evidence": "Belgium Jupiler League refers to League.name = 'Belgium Jupiler League';", "SQL": "SELECT t1.name FROM Country AS t1 INNER JOIN League AS t2 ON t1.id = t2.country_id WHERE t2.name = 'Belgium Jupiler League'", "question_toks": ["Which", "country", "is", "the", "Belgium", "Jupiler", "League", "from", "?"], "SQL_toks": ["SELECT", "t1.name", "FROM", "Country", "AS", "t1", "INNER", "JOIN", "League", "AS", "t2", "ON", "t1.id", "=", "t2.country_id", "WHERE", "t2.name", "=", "'Belgium", "Jupiler", "League", "'"], "evidence_toks": ["Belgium", "Jupiler", "League", "refers", "to", "League.name", "=", "'Belgium", "Jupiler", "League", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Please list the leagues from Germany.", "evidence": "Germany refers to Country.name = 'Germany';", "SQL": "SELECT t2.name FROM Country AS t1 INNER JOIN League AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Germany'", "question_toks": ["Please", "list", "the", "leagues", "from", "Germany", "."], "SQL_toks": ["SELECT", "t2.name", "FROM", "Country", "AS", "t1", "INNER", "JOIN", "League", "AS", "t2", "ON", "t1.id", "=", "t2.country_id", "WHERE", "t1.name", "=", "'Germany", "'"], "evidence_toks": ["Germany", "refers", "to", "Country.name", "=", "'Germany", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?", "evidence": "players born before the year 1986 refers to strftime('%Y', birthday)<'1986'; players who would remain in his position and defense while the team attacked refers to defensive_work_rate = 'high';", "SQL": "SELECT COUNT(DISTINCT t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday, 1, 4) < '1986' AND t2.attacking_work_rate = 'low'", "question_toks": ["Among", "the", "players", "born", "before", "the", "year", "1986", ",", "how", "many", "of", "them", "would", "remain", "in", "his", "position", "and", "defense", "while", "the", "team", "attacked", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.player_name", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "SUBSTR", "(", "t1.birthday", ",", "1", ",", "4", ")", "<", "'1986", "'", "AND", "t2.attacking_work_rate", "=", "'low", "'"], "evidence_toks": ["players", "born", "before", "the", "year", "1986", "refers", "to", "strftime", "(", "'", "%", "Y", "'", ",", "birthday", ")", "<", "'1986", "'", ";", "players", "who", "would", "remain", "in", "his", "position", "and", "defense", "while", "the", "team", "attacked", "refers", "to", "defensive_work_rate", "=", "'high", "'", ";"], "difficulty": "challenging"}, {"db_id": "european_football_2", "question": "How many matches in the 2008/2009 season were held in Belgium?", "evidence": "Belgium refers to Country.name = 'Belgium';", "SQL": "SELECT COUNT(t2.id) FROM Country AS t1 INNER JOIN Match AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Belgium' AND t2.season = '2008/2009'", "question_toks": ["How", "many", "matches", "in", "the", "2008/2009", "season", "were", "held", "in", "Belgium", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "t2.id", ")", "FROM", "Country", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.country_id", "WHERE", "t1.name", "=", "'Belgium", "'", "AND", "t2.season", "=", "'2008/2009", "'"], "evidence_toks": ["Belgium", "refers", "to", "Country.name", "=", "'Belgium", "'", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "How many matches were held in the Belgium Jupiler League in April, 2009?", "evidence": "Belgium Jupiler League refers to League.name = 'Belgium Jupiler League';\u00a0in April, 2009 refers to strftime('%Y', date) = '2009' AND strftime('%m', date) = '04';", "SQL": "SELECT COUNT(t2.id) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND SUBSTR(t2.`date`, 1, 4) = '2009'", "question_toks": ["How", "many", "matches", "were", "held", "in", "the", "Belgium", "Jupiler", "League", "in", "April", ",", "2009", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "t2.id", ")", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "WHERE", "t1.name", "=", "'Belgium", "Jupiler", "League", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "4", ")", "=", "'2009", "'"], "evidence_toks": ["Belgium", "Jupiler", "League", "refers", "to", "League.name", "=", "'Belgium", "Jupiler", "League", "'", ";", "in", "April", ",", "2009", "refers", "to", "strftime", "(", "'", "%", "Y", "'", ",", "date", ")", "=", "'2009", "'", "AND", "strftime", "(", "'", "%", "m", "'", ",", "date", ")", "=", "'04", "'", ";"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Which league had the most matches in the 2008/2009 season?", "evidence": "league that had the most matches in the 2008/2009 season refers to MAX(league_id WHERE season = '2008/2009');", "SQL": "SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2008/2009' GROUP BY t1.name ORDER BY COUNT(t2.id) DESC LIMIT 1", "question_toks": ["Which", "league", "had", "the", "most", "matches", "in", "the", "2008/2009", "season", "?"], "SQL_toks": ["SELECT", "t1.name", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "WHERE", "t2.season", "=", "'2008/2009", "'", "GROUP", "BY", "t1.name", "ORDER", "BY", "COUNT", "(", "t2.id", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["league", "that", "had", "the", "most", "matches", "in", "the", "2008/2009", "season", "refers", "to", "MAX", "(", "league_id", "WHERE", "season", "=", "'2008/2009", "'", ")", ";"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What is the average overall rating of the players born before the year 1986?", "evidence": "average overall rating = DIVIDE(SUM(overall_rating), COUNT(id)); born before the year 1986 refers to strftime('%Y', birthday) < '1986';", "SQL": "SELECT SUM(t2.overall_rating) / COUNT(t1.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday, 1, 4) < '1986'", "question_toks": ["What", "is", "the", "average", "overall", "rating", "of", "the", "players", "born", "before", "the", "year", "1986", "?"], "SQL_toks": ["SELECT", "SUM", "(", "t2.overall_rating", ")", "/", "COUNT", "(", "t1.id", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "SUBSTR", "(", "t1.birthday", ",", "1", ",", "4", ")", "<", "'1986", "'"], "evidence_toks": ["average", "overall", "rating", "=", "DIVIDE", "(", "SUM", "(", "overall_rating", ")", ",", "COUNT", "(", "id", ")", ")", ";", "born", "before", "the", "year", "1986", "refers", "to", "strftime", "(", "'", "%", "Y", "'", ",", "birthday", ")", "<", "'1986", "'", ";"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "How much is the average build up play speed of the Heart of Midlothian team?", "evidence": "Heart of Midlothian refers to team_long_name = 'Heart of Midlothian'; average build up play speed refers to\u00a0 AVG(buildUpPlaySpeed)", "SQL": "SELECT CAST(SUM(t2.buildUpPlaySpeed) AS REAL) / COUNT(t2.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Heart of Midlothian'", "question_toks": ["How", "much", "is", "the", "average", "build", "up", "play", "speed", "of", "the", "Heart", "of", "Midlothian", "team", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "t2.buildUpPlaySpeed", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t2.id", ")", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t1.team_long_name", "=", "'Heart", "of", "Midlothian", "'"], "evidence_toks": ["Heart", "of", "Midlothian", "refers", "to", "team_long_name", "=", "'Heart", "of", "Midlothian", "'", ";", "average", "build", "up", "play", "speed", "refers", "to", "AVG", "(", "buildUpPlaySpeed", ")"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "What is Aaron Lennox's total crossing score?", "evidence": "Aaron Lennox's refers to T2.player_name = 'Aaron Lennox'; total crossing score refers to SUM(crossing)", "SQL": "SELECT SUM(t2.crossing) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Aaron Lennox'", "question_toks": ["What", "is", "Aaron", "Lennox", "'s", "total", "crossing", "score", "?"], "SQL_toks": ["SELECT", "SUM", "(", "t2.crossing", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Aaron", "Lennox", "'"], "evidence_toks": ["Aaron", "Lennox", "'s", "refers", "to", "T2.player_name", "=", "'Aaron", "Lennox", "'", ";", "total", "crossing", "score", "refers", "to", "SUM", "(", "crossing", ")"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What is the average number of goals made by Parma as the away team while playing in Italy?", "evidence": "Parma refers to team_long_name = 'Parma'; average number of goals refers to AVG(away_team_goal)", "SQL": "SELECT CAST(SUM(T1.away_team_goal) AS REAL) / COUNT(T1.id) FROM \"Match\" AS T1 INNER JOIN TEAM AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN Country AS T3 ON T1.country_id = T3.id WHERE T2.team_long_name = 'Parma' AND T3.name = 'Italy'", "question_toks": ["What", "is", "the", "average", "number", "of", "goals", "made", "by", "Parma", "as", "the", "away", "team", "while", "playing", "in", "Italy", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "T1.away_team_goal", ")", "AS", "REAL", ")", "/", "COUNT", "(", "T1.id", ")", "FROM", "``", "Match", "''", "AS", "T1", "INNER", "JOIN", "TEAM", "AS", "T2", "ON", "T1.away_team_api_id", "=", "T2.team_api_id", "INNER", "JOIN", "Country", "AS", "T3", "ON", "T1.country_id", "=", "T3.id", "WHERE", "T2.team_long_name", "=", "'Parma", "'", "AND", "T3.name", "=", "'Italy", "'"], "evidence_toks": ["Parma", "refers", "to", "team_long_name", "=", "'Parma", "'", ";", "average", "number", "of", "goals", "refers", "to", "AVG", "(", "away_team_goal", ")"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.", "evidence": "77 points overall rating refers to overall_rating = 77; on 2016/6/23; oldest refers to MIN(birthday)", "SQL": "SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2016-06-23' AND t2.overall_rating = 77 ORDER BY t1.birthday ASC LIMIT 1", "question_toks": ["For", "the", "players", "who", "had", "a", "77", "points", "overall", "rating", "on", "2016/6/23", ",", "who", "was", "the", "oldest", "?", "Give", "the", "name", "of", "the", "player", "."], "SQL_toks": ["SELECT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2016-06-23", "'", "AND", "t2.overall_rating", "=", "77", "ORDER", "BY", "t1.birthday", "ASC", "LIMIT", "1"], "evidence_toks": ["77", "points", "overall", "rating", "refers", "to", "overall_rating", "=", "77", ";", "on", "2016/6/23", ";", "oldest", "refers", "to", "MIN", "(", "birthday", ")"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "What was the overall rating for Aaron Mooy on 2016/2/4?", "evidence": "Aaron Mooy refers to player_name = 'Aaron Mooy'; on 2016/2/4 refers to date = '2016-02-04 00:00:00'", "SQL": "SELECT t2.overall_rating FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2016-02-04' AND t1.player_name = 'Aaron Mooy'", "question_toks": ["What", "was", "the", "overall", "rating", "for", "Aaron", "Mooy", "on", "2016/2/4", "?"], "SQL_toks": ["SELECT", "t2.overall_rating", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2016-02-04", "'", "AND", "t1.player_name", "=", "'Aaron", "Mooy", "'"], "evidence_toks": ["Aaron", "Mooy", "refers", "to", "player_name", "=", "'Aaron", "Mooy", "'", ";", "on", "2016/2/4", "refers", "to", "date", "=", "'2016-02-04", "00:00:00", "'"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "When was the first time did Kevin Constant have his highest crossing score? Give the date.", "evidence": "Kevin Constant refers to player_name = 'Kevin Constant'; highest crossing score refers to MAX(crossing)", "SQL": "SELECT `date` FROM ( SELECT t2.crossing, t2.`date` FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Kevin Constant' ORDER BY t2.crossing DESC LIMIT 3 )ORDER BY date DESC LIMIT 1", "question_toks": ["When", "was", "the", "first", "time", "did", "Kevin", "Constant", "have", "his", "highest", "crossing", "score", "?", "Give", "the", "date", "."], "SQL_toks": ["SELECT", "`", "date", "`", "FROM", "(", "SELECT", "t2.crossing", ",", "t2.", "`", "date", "`", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_fifa_api_id", "=", "t2.player_fifa_api_id", "WHERE", "t1.player_name", "=", "'Kevin", "Constant", "'", "ORDER", "BY", "t2.crossing", "DESC", "LIMIT", "3", ")", "ORDER", "BY", "date", "DESC", "LIMIT", "1"], "evidence_toks": ["Kevin", "Constant", "refers", "to", "player_name", "=", "'Kevin", "Constant", "'", ";", "highest", "crossing", "score", "refers", "to", "MAX", "(", "crossing", ")"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "What was the build up play speed class for \"Willem II\" on 2011/2/22?", "evidence": "\"Willem II\" refers to team_long_name = 'Willem II'; on 2011/2/22 refers to date = '2012-02-22 00:00:00'", "SQL": "SELECT t2.buildUpPlaySpeedClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Willem II' AND SUBSTR(t2.`date`, 1, 10) = '2011-02-22'", "question_toks": ["What", "was", "the", "build", "up", "play", "speed", "class", "for", "``", "Willem", "II", "''", "on", "2011/2/22", "?"], "SQL_toks": ["SELECT", "t2.buildUpPlaySpeedClass", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t1.team_long_name", "=", "'Willem", "II", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2011-02-22", "'"], "evidence_toks": ["``", "Willem", "II", "''", "refers", "to", "team_long_name", "=", "'Willem", "II", "'", ";", "on", "2011/2/22", "refers", "to", "date", "=", "'2012-02-22", "00:00:00", "'"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "How was the build up play dribbling class for \"LEI\" on 2015/9/10?", "evidence": "\"LEI\" refers to team_short_name = 'LEI'; on 2015/9/10 refers to\u00a0 date = '2015-09-10 00:00:00'", "SQL": "SELECT t2.buildUpPlayDribblingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'LEI' AND SUBSTR(t2.`date`, 1, 10) = '2015-09-10'", "question_toks": ["How", "was", "the", "build", "up", "play", "dribbling", "class", "for", "``", "LEI", "''", "on", "2015/9/10", "?"], "SQL_toks": ["SELECT", "t2.buildUpPlayDribblingClass", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t1.team_short_name", "=", "'LEI", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2015-09-10", "'"], "evidence_toks": ["``", "LEI", "''", "refers", "to", "team_short_name", "=", "'LEI", "'", ";", "on", "2015/9/10", "refers", "to", "date", "=", "'2015-09-10", "00:00:00", "'"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22.", "evidence": "\"FC Lorient\" refers to team_long_name = 'FC Lorient'; on 2010/2/22\u00a0 refers to date = '2010-02-22", "SQL": "SELECT t2.buildUpPlayPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'FC Lorient' AND SUBSTR(t2.`date`, 1, 10) = '2010-02-22'", "question_toks": ["Tell", "the", "build", "Up", "play", "passing", "class", "for", "``", "FC", "Lorient", "''", "on", "2010/2/22", "."], "SQL_toks": ["SELECT", "t2.buildUpPlayPassingClass", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t1.team_long_name", "=", "'FC", "Lorient", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2010-02-22", "'"], "evidence_toks": ["``", "FC", "Lorient", "''", "refers", "to", "team_long_name", "=", "'FC", "Lorient", "'", ";", "on", "2010/2/22", "refers", "to", "date", "=", "'2010-02-22"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.", "evidence": "\"PEC Zwolle\" refers to team_long_name = 'PEC Zwolle'; on 2013/9/20 refers to date = '2013-09-20 00:00:00'", "SQL": "SELECT t2.chanceCreationPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'PEC Zwolle' AND SUBSTR(t2.`date`, 1, 10) = '2013-09-20'", "question_toks": ["State", "the", "chance", "creation", "passing", "class", "for", "``", "PEC", "Zwolle", "''", "on", "2013/9/20", "."], "SQL_toks": ["SELECT", "t2.chanceCreationPassingClass", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t1.team_long_name", "=", "'PEC", "Zwolle", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2013-09-20", "'"], "evidence_toks": ["``", "PEC", "Zwolle", "''", "refers", "to", "team_long_name", "=", "'PEC", "Zwolle", "'", ";", "on", "2013/9/20", "refers", "to", "date", "=", "'2013-09-20", "00:00:00", "'"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?", "evidence": "average overall rating refers to avg(overall_rating); Marko Arnautovic refers to player_name = 'Marko Arnautovic'; from 2007/2/22 to 2016/4/21 refers to date BETWEEN '2007-02-22 00:00:00' and '2016-04-21 00:00:00'", "SQL": "SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'", "question_toks": ["What", "was", "the", "average", "overall", "rating", "for", "Marko", "Arnautovic", "from", "2007/2/22", "to", "2016/4/21", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "t2.overall_rating", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t2.id", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_fifa_api_id", "=", "t2.player_fifa_api_id", "WHERE", "t1.player_name", "=", "'Marko", "Arnautovic", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "BETWEEN", "'2007-02-22", "'", "AND", "'2016-04-21", "'"], "evidence_toks": ["average", "overall", "rating", "refers", "to", "avg", "(", "overall_rating", ")", ";", "Marko", "Arnautovic", "refers", "to", "player_name", "=", "'Marko", "Arnautovic", "'", ";", "from", "2007/2/22", "to", "2016/4/21", "refers", "to", "date", "BETWEEN", "'2007-02-22", "00:00:00", "'", "and", "'2016-04-21", "00:00:00", "'"], "difficulty": "challenging"}, {"db_id": "european_football_2", "question": "Sum up the away team goal scored by both Daan Smith and Filipe Ferreira.", "evidence": "Daan Smith refers to player_name = 'Daan Smith'; Filipe Ferreira refers to player_name = 'Filipe Ferreira'", "SQL": "SELECT SUM(t2.away_team_goal) FROM Player AS t1 INNER JOIN match AS t2 ON t1.player_api_id = t2.away_player_5 WHERE t1.player_name IN ('Daan Smith', 'Filipe Ferreira')", "question_toks": ["Sum", "up", "the", "away", "team", "goal", "scored", "by", "both", "Daan", "Smith", "and", "Filipe", "Ferreira", "."], "SQL_toks": ["SELECT", "SUM", "(", "t2.away_team_goal", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "match", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.away_player_5", "WHERE", "t1.player_name", "IN", "(", "'Daan", "Smith", "'", ",", "'Filipe", "Ferreira", "'", ")"], "evidence_toks": ["Daan", "Smith", "refers", "to", "player_name", "=", "'Daan", "Smith", "'", ";", "Filipe", "Ferreira", "refers", "to", "player_name", "=", "'Filipe", "Ferreira", "'"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Calculate the total home team goal scored by players whose age are 30 years old and below.", "evidence": "age are 30 years old and below refers to SUBTRACT(datetime(CURRENT_TIMESTAMP,'localtime'), datetime(birthday) < 31)", "SQL": "SELECT SUM(t2.home_team_goal) FROM Player AS t1 INNER JOIN match AS t2 ON t1.player_api_id = t2.away_player_1 WHERE datetime(CURRENT_TIMESTAMP, 'localtime') - datetime(T1.birthday) < 31", "question_toks": ["Calculate", "the", "total", "home", "team", "goal", "scored", "by", "players", "whose", "age", "are", "30", "years", "old", "and", "below", "."], "SQL_toks": ["SELECT", "SUM", "(", "t2.home_team_goal", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "match", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.away_player_1", "WHERE", "datetime", "(", "CURRENT_TIMESTAMP", ",", "'localtime", "'", ")", "-", "datetime", "(", "T1.birthday", ")", "<", "31"], "evidence_toks": ["age", "are", "30", "years", "old", "and", "below", "refers", "to", "SUBTRACT", "(", "datetime", "(", "CURRENT_TIMESTAMP", ",", "'localtime", "'", ")", ",", "datetime", "(", "birthday", ")", "<", "31", ")"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "What is the name of players with the highest potential?", "evidence": "highest potential refers to MAX(potential)", "SQL": "SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t2.potential DESC LIMIT 1", "question_toks": ["What", "is", "the", "name", "of", "players", "with", "the", "highest", "potential", "?"], "SQL_toks": ["SELECT", "DISTINCT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "ORDER", "BY", "t2.potential", "DESC", "LIMIT", "1"], "evidence_toks": ["highest", "potential", "refers", "to", "MAX", "(", "potential", ")"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "State the name of players who came from Belgium.", "evidence": "name of players refers to player_name; Belgium is name of country", "SQL": "SELECT t3.player_name FROM Country AS t1 INNER JOIN Match AS t2 ON t1.id = t2.country_id INNER JOIN Player AS t3 ON t2.home_player_1 = t3.player_api_id WHERE t1.name = 'Belgium'", "question_toks": ["State", "the", "name", "of", "players", "who", "came", "from", "Belgium", "."], "SQL_toks": ["SELECT", "t3.player_name", "FROM", "Country", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.country_id", "INNER", "JOIN", "Player", "AS", "t3", "ON", "t2.home_player_1", "=", "t3.player_api_id", "WHERE", "t1.name", "=", "'Belgium", "'"], "evidence_toks": ["name", "of", "players", "refers", "to", "player_name", ";", "Belgium", "is", "name", "of", "country"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Locate players with vision scores of 90 and above, state the country of these players.", "evidence": "vision scores of 90 and above refers to vision > 89", "SQL": "SELECT DISTINCT t4.name FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id INNER JOIN Match AS t3 ON t2.player_api_id = t3.home_player_8 INNER JOIN Country AS t4 ON t3.country_id = t4.id WHERE t1.vision > 89", "question_toks": ["Locate", "players", "with", "vision", "scores", "of", "90", "and", "above", ",", "state", "the", "country", "of", "these", "players", "."], "SQL_toks": ["SELECT", "DISTINCT", "t4.name", "FROM", "Player_Attributes", "AS", "t1", "INNER", "JOIN", "Player", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "INNER", "JOIN", "Match", "AS", "t3", "ON", "t2.player_api_id", "=", "t3.home_player_8", "INNER", "JOIN", "Country", "AS", "t4", "ON", "t3.country_id", "=", "t4.id", "WHERE", "t1.vision", ">", "89"], "evidence_toks": ["vision", "scores", "of", "90", "and", "above", "refers", "to", "vision", ">", "89"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "List down the long name for slow speed class team.", "evidence": "slow speed class refers to buildUpPlaySpeedClass = 'Slow'; long name refers to team_long_name", "SQL": "SELECT DISTINCT t1.team_long_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeedClass = 'Slow'", "question_toks": ["List", "down", "the", "long", "name", "for", "slow", "speed", "class", "team", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.team_long_name", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t2.buildUpPlaySpeedClass", "=", "'Slow", "'"], "evidence_toks": ["slow", "speed", "class", "refers", "to", "buildUpPlaySpeedClass", "=", "'Slow", "'", ";", "long", "name", "refers", "to", "team_long_name"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What is the average heights of Italy players?", "evidence": "average heights refers to Avg(height); Italy is name of country", "SQL": "SELECT CAST(SUM(T1.height) AS REAL) / COUNT(T1.id) FROM Player AS T1 INNER JOIN Match AS T2 ON T1.id = T2.id INNER JOIN Country AS T3 ON T2.country_id = T3.ID WHERE T3.NAME = 'Italy'", "question_toks": ["What", "is", "the", "average", "heights", "of", "Italy", "players", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "T1.height", ")", "AS", "REAL", ")", "/", "COUNT", "(", "T1.id", ")", "FROM", "Player", "AS", "T1", "INNER", "JOIN", "Match", "AS", "T2", "ON", "T1.id", "=", "T2.id", "INNER", "JOIN", "Country", "AS", "T3", "ON", "T2.country_id", "=", "T3.ID", "WHERE", "T3.NAME", "=", "'Italy", "'"], "evidence_toks": ["average", "heights", "refers", "to", "Avg", "(", "height", ")", ";", "Italy", "is", "name", "of", "country"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Please provide the names of any three football players who are over 180 cm tall.", "evidence": "over 180 cm tall refers to height > 180; name of football player refers to player_name", "SQL": "SELECT player_name FROM Player WHERE height > 180 LIMIT 3", "question_toks": ["Please", "provide", "the", "names", "of", "any", "three", "football", "players", "who", "are", "over", "180", "cm", "tall", "."], "SQL_toks": ["SELECT", "player_name", "FROM", "Player", "WHERE", "height", ">", "180", "LIMIT", "3"], "evidence_toks": ["over", "180", "cm", "tall", "refers", "to", "height", ">", "180", ";", "name", "of", "football", "player", "refers", "to", "player_name"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What is the difference between players 6 and 23's jumping scores?", "evidence": "difference between players 6 and 23's jumping scores refers to SUBTRACT(jumping AND id = 6,jumping AND id = 32)", "SQL": "SELECT SUM(CASE WHEN t1.id = 6 THEN t1.jumping ELSE 0 END) - SUM(CASE WHEN t1.id = 23 THEN t1.jumping ELSE 0 END) FROM Player_Attributes AS t1", "question_toks": ["What", "is", "the", "difference", "between", "players", "6", "and", "23", "'s", "jumping", "scores", "?"], "SQL_toks": ["SELECT", "SUM", "(", "CASE", "WHEN", "t1.id", "=", "6", "THEN", "t1.jumping", "ELSE", "0", "END", ")", "-", "SUM", "(", "CASE", "WHEN", "t1.id", "=", "23", "THEN", "t1.jumping", "ELSE", "0", "END", ")", "FROM", "Player_Attributes", "AS", "t1"], "evidence_toks": ["difference", "between", "players", "6", "and", "23", "'s", "jumping", "scores", "refers", "to", "SUBTRACT", "(", "jumping", "AND", "id", "=", "6", ",", "jumping", "AND", "id", "=", "32", ")"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Please provide any three football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.", "evidence": "lowest potential players refers to MIN(potential); prefer to use the right foot refers to preferred_foot = 'right'", "SQL": "SELECT id FROM Player_Attributes WHERE preferred_foot = 'left' ORDER BY potential DESC LIMIT 3", "question_toks": ["Please", "provide", "any", "three", "football", "players", "'", "IDs", "who", "are", "among", "the", "lowest", "potential", "players", "and", "prefer", "to", "use", "the", "right", "foot", "when", "attacking", "."], "SQL_toks": ["SELECT", "id", "FROM", "Player_Attributes", "WHERE", "preferred_foot", "=", "'left", "'", "ORDER", "BY", "potential", "DESC", "LIMIT", "3"], "evidence_toks": ["lowest", "potential", "players", "refers", "to", "MIN", "(", "potential", ")", ";", "prefer", "to", "use", "the", "right", "foot", "refers", "to", "preferred_foot", "=", "'right", "'"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "What percentage of players have a strength and stamina score of more than 80?", "evidence": "strength and stamina score of more than 80 refers to stamina > 80 and strength > 80", "SQL": "SELECT CAST(COUNT(CASE WHEN strength > 80 AND stamina > 80 THEN id ELSE NULL END) AS REAL) * 100 / COUNT(id) FROM Player_Attributes t", "question_toks": ["What", "percentage", "of", "players", "have", "a", "strength", "and", "stamina", "score", "of", "more", "than", "80", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "strength", ">", "80", "AND", "stamina", ">", "80", "THEN", "id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "id", ")", "FROM", "Player_Attributes", "t"], "evidence_toks": ["strength", "and", "stamina", "score", "of", "more", "than", "80", "refers", "to", "stamina", ">", "80", "and", "strength", ">", "80"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "What are Alexis Blin's sprint speed, agility, and acceleration scores?", "evidence": "Alexis Blin's refers to player_name = 'Alexis Blin'", "SQL": "SELECT acceleration, sprint_speed, agility FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin' )", "question_toks": ["What", "are", "Alexis", "Blin", "'s", "sprint", "speed", ",", "agility", ",", "and", "acceleration", "scores", "?"], "SQL_toks": ["SELECT", "acceleration", ",", "sprint_speed", ",", "agility", "FROM", "Player_Attributes", "WHERE", "player_api_id", "IN", "(", "SELECT", "player_api_id", "FROM", "Player", "WHERE", "player_name", "=", "'Alexis", "Blin", "'", ")"], "evidence_toks": ["Alexis", "Blin", "'s", "refers", "to", "player_name", "=", "'Alexis", "Blin", "'"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Does the KSV Cercle Brugge team have a slow, balanced or fast speed class?", "evidence": "KSV Cercle Brugge refers to team_long_name = 'KSV Cercle Brugge'; speed class refers to buildUpPlaySpeedClass", "SQL": "SELECT DISTINCT t1.buildUpPlaySpeedClass FROM Team_Attributes AS t1 INNER JOIN Team AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.team_long_name = 'KSV Cercle Brugge'", "question_toks": ["Does", "the", "KSV", "Cercle", "Brugge", "team", "have", "a", "slow", ",", "balanced", "or", "fast", "speed", "class", "?"], "SQL_toks": ["SELECT", "DISTINCT", "t1.buildUpPlaySpeedClass", "FROM", "Team_Attributes", "AS", "t1", "INNER", "JOIN", "Team", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t2.team_long_name", "=", "'KSV", "Cercle", "Brugge", "'"], "evidence_toks": ["KSV", "Cercle", "Brugge", "refers", "to", "team_long_name", "=", "'KSV", "Cercle", "Brugge", "'", ";", "speed", "class", "refers", "to", "buildUpPlaySpeedClass"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "In the 2015\u20132016 season, how many games were played in the Italian Serie A league?", "evidence": "In the 2015\u20132016 season refers to season = '2015/2016'", "SQL": "SELECT COUNT(t2.id) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Italy Serie A' AND t2.season = '2015/2016'", "question_toks": ["In", "the", "2015\u20132016", "season", ",", "how", "many", "games", "were", "played", "in", "the", "Italian", "Serie", "A", "league", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "t2.id", ")", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "WHERE", "t1.name", "=", "'Italy", "Serie", "A", "'", "AND", "t2.season", "=", "'2015/2016", "'"], "evidence_toks": ["In", "the", "2015\u20132016", "season", "refers", "to", "season", "=", "'2015/2016", "'"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Please state the finishing rate and curve score of the player who has the heaviest weight.", "evidence": "heaviest weight refers to MAX(weight)", "SQL": "SELECT id, finishing, curve FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 1 ) LIMIT 1", "question_toks": ["Please", "state", "the", "finishing", "rate", "and", "curve", "score", "of", "the", "player", "who", "has", "the", "heaviest", "weight", "."], "SQL_toks": ["SELECT", "id", ",", "finishing", ",", "curve", "FROM", "Player_Attributes", "WHERE", "player_api_id", "=", "(", "SELECT", "player_api_id", "FROM", "Player", "ORDER", "BY", "weight", "DESC", "LIMIT", "1", ")", "LIMIT", "1"], "evidence_toks": ["heaviest", "weight", "refers", "to", "MAX", "(", "weight", ")"], "difficulty": "simple"}, {"db_id": "european_football_2", "question": "Please provide the full name of the away team that scored the most goals.", "evidence": "full name refers to team_long_name; away team refers to away_team_api_id; scored the most goals refers to MAX(COUNT(away_team_goal))", "SQL": "SELECT t2.team_long_name FROM Match AS t1 INNER JOIN Team AS t2 ON t1.away_team_api_id = t2.team_api_id ORDER BY t1.away_team_goal DESC LIMIT 1", "question_toks": ["Please", "provide", "the", "full", "name", "of", "the", "away", "team", "that", "scored", "the", "most", "goals", "."], "SQL_toks": ["SELECT", "t2.team_long_name", "FROM", "Match", "AS", "t1", "INNER", "JOIN", "Team", "AS", "t2", "ON", "t1.away_team_api_id", "=", "t2.team_api_id", "ORDER", "BY", "t1.away_team_goal", "DESC", "LIMIT", "1"], "evidence_toks": ["full", "name", "refers", "to", "team_long_name", ";", "away", "team", "refers", "to", "away_team_api_id", ";", "scored", "the", "most", "goals", "refers", "to", "MAX", "(", "COUNT", "(", "away_team_goal", ")", ")"], "difficulty": "moderate"}, {"db_id": "european_football_2", "question": "Please name one player whose overall strength is the greatest.", "evidence": "overall strength is the greatest refers to MAX(overall_rating)", "SQL": "SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes)", "question_toks": ["Please", "name", "one", "player", "whose", "overall", "strength", "is", "the", "greatest", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t2.overall_rating", "=", "(", "SELECT", "MAX", "(", "overall_rating", ")", "FROM", "Player_Attributes", ")"], "evidence_toks": ["overall", "strength", "is", "the", "greatest", "refers", "to", "MAX", "(", "overall_rating", ")"], "difficulty": "simple"}]