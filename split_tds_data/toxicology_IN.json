[{"db_id": "toxicology", "question": "Calculate the average number of oxygen atoms in single-bonded molecules.", "evidence": "single-bonded molecules refers to bond_type = '-' ; average number of oxygen atom = AVG(element = 'o')", "SQL": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'o' THEN T1.molecule_id ELSE NULL END) AS REAL) / COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'", "question_toks": ["Calculate", "the", "average", "number", "of", "oxygen", "atoms", "in", "single-bonded", "molecules", "."], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "DISTINCT", "CASE", "WHEN", "T1.element", "=", "'", "o", "'", "THEN", "T1.molecule_id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "/", "COUNT", "(", "DISTINCT", "T1.molecule_id", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "bond", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.bond_type", "=", "'-", "'"], "evidence_toks": ["single-bonded", "molecules", "refers", "to", "bond_type", "=", "'-", "'", ";", "average", "number", "of", "oxygen", "atom", "=", "AVG", "(", "element", "=", "'", "o", "'", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'single-bonded molecules' refers to bond.bond_type = '-'", "'average number of oxygen atoms in single-bonded molecules' refers to CAST(COUNT(DISTINCT CASE WHEN atom.element = 'o' THEN atom.molecule_id ELSE NULL END) AS REAL) / COUNT(DISTINCT atom.molecule_id)"]}, {"db_id": "toxicology", "question": "In the molecule containing sodium atoms, how many are non-carcinogenic?", "evidence": "non-carcinogenic refers to label = '-'; sodium atoms refers to element = 'na'", "SQL": "SELECT COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'", "question_toks": ["In", "the", "molecule", "containing", "sodium", "atoms", ",", "how", "many", "are", "non-carcinogenic", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "T2.molecule_id", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.element", "=", "'na", "'", "AND", "T2.label", "=", "'-", "'"], "evidence_toks": ["non-carcinogenic", "refers", "to", "label", "=", "'-", "'", ";", "sodium", "atoms", "refers", "to", "element", "=", "'na", "'"], "difficulty": "simple", "templatized_domain_statements": ["'non-carcinogenic' refers to molecule.label = '-'", "'sodium atoms' refers to atom.element = 'na'"]}, {"db_id": "toxicology", "question": "Find the triple-bonded molecules which are carcinogenic.", "evidence": "triple-bonded molecules refers to bond_type = '#'; carcinogenic refers to label = '+'", "SQL": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'", "question_toks": ["Find", "the", "triple-bonded", "molecules", "which", "are", "carcinogenic", "."], "SQL_toks": ["SELECT", "DISTINCT", "T2.molecule_id", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.bond_type", "=", "'", "#", "'", "AND", "T2.label", "=", "'+", "'"], "evidence_toks": ["triple-bonded", "molecules", "refers", "to", "bond_type", "=", "'", "#", "'", ";", "carcinogenic", "refers", "to", "label", "=", "'+", "'"], "difficulty": "simple", "templatized_domain_statements": ["'triple-bonded molecules' refers to bond.bond_type = '#'", "'carcinogenic' refers to molecule.label = '+'"]}, {"db_id": "toxicology", "question": "What is the percentage of carbon in double-bond molecules?", "evidence": "carbon refers to element = 'c'; double-bond molecules refers to bond_type = ' = '; percentage = DIVIDE(SUM(element = 'c'), COUNT(atom_id))", "SQL": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'c' THEN T1.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '='", "question_toks": ["What", "is", "the", "percentage", "of", "carbon", "in", "double-bond", "molecules", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "DISTINCT", "CASE", "WHEN", "T1.element", "=", "'", "c", "'", "THEN", "T1.atom_id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "DISTINCT", "T1.atom_id", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "bond", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.bond_type", "=", "'=", "'"], "evidence_toks": ["carbon", "refers", "to", "element", "=", "'", "c", "'", ";", "double-bond", "molecules", "refers", "to", "bond_type", "=", "'", "=", "'", ";", "percentage", "=", "DIVIDE", "(", "SUM", "(", "element", "=", "'", "c", "'", ")", ",", "COUNT", "(", "atom_id", ")", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'carbon' refers to atom.element = 'c'", "'double-bond molecules' refers to bond.bond_type = ' = '", "'percentage of carbon in double-bond molecules' refers to CAST(COUNT(DISTINCT CASE WHEN atom.element = 'c' THEN atom.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT atom.atom_id)"]}, {"db_id": "toxicology", "question": "Of the first 100 molecules in number order, how many are carcinogenic?", "evidence": "first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic", "SQL": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND T.label = '+'", "question_toks": ["Of", "the", "first", "100", "molecules", "in", "number", "order", ",", "how", "many", "are", "carcinogenic", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T.molecule_id", ")", "FROM", "molecule", "AS", "T", "WHERE", "molecule_id", "BETWEEN", "'TR000", "'", "AND", "'TR099", "'", "AND", "T.label", "=", "'+", "'"], "evidence_toks": ["first", "100", "molecules", "in", "number", "order", "refers", "to", "molecule_id", "between", "'TR000", "'", "and", "'TR099", "'", ";", "label", "=", "'+", "'", "means", "molecules", "are", "carcinogenic"], "difficulty": "simple", "templatized_domain_statements": ["'first 100 molecules in number order' refers to molecule.molecule_id BETWEEN 'TR000' and 'TR099'", "'carcinogenic' refers to molecule.label = '+'"]}, {"db_id": "toxicology", "question": "What elements are in the TR004_8_9 bond atoms?", "evidence": "TR004_8_9 bond atoms refers to bond_id = 'TR004_8_9'; element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'", "question_toks": ["What", "elements", "are", "in", "the", "TR004_8_9", "bond", "atoms", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.element", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "WHERE", "T2.bond_id", "=", "'TR004_8_9", "'"], "evidence_toks": ["TR004_8_9", "bond", "atoms", "refers", "to", "bond_id", "=", "'TR004_8_9", "'", ";", "element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["'bond atoms with X' refers to connected.bond_id = 'X'", "'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "Which type of label is the most numerous in atoms with hydrogen?", "evidence": "with hydrogen refers to element = 'h'; label most numerous in atoms refers to MAX(COUNT(label)); label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic", "SQL": "SELECT T.label FROM ( SELECT T2.label, COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY COUNT(T2.molecule_id) DESC LIMIT 1 ) t", "question_toks": ["Which", "type", "of", "label", "is", "the", "most", "numerous", "in", "atoms", "with", "hydrogen", "?"], "SQL_toks": ["SELECT", "T.label", "FROM", "(", "SELECT", "T2.label", ",", "COUNT", "(", "T2.molecule_id", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.element", "=", "'", "h", "'", "GROUP", "BY", "T2.label", "ORDER", "BY", "COUNT", "(", "T2.molecule_id", ")", "DESC", "LIMIT", "1", ")", "t"], "evidence_toks": ["with", "hydrogen", "refers", "to", "element", "=", "'", "h", "'", ";", "label", "most", "numerous", "in", "atoms", "refers", "to", "MAX", "(", "COUNT", "(", "label", ")", ")", ";", "label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic"], "difficulty": "moderate", "templatized_domain_statements": ["'atoms with hydrogen' refers to atom.element = 'h'", "'the most numerous label' refers to MAX(COUNT(molecule.label))", "'carcinogenic' refers to molecule.label = '+'", "'non-carcinogenic' refers to molecule.label = '-'"]}, {"db_id": "toxicology", "question": "Tellurium is in what type of bond?", "evidence": "type of bond refers to bond_type; Tellurium refers to element = 'te'", "SQL": "SELECT DISTINCT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'te'", "question_toks": ["Tellurium", "is", "in", "what", "type", "of", "bond", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.bond_type", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.bond_id", "=", "T2.bond_id", "INNER", "JOIN", "atom", "AS", "T3", "ON", "T2.atom_id", "=", "T3.atom_id", "WHERE", "T3.element", "=", "'te", "'"], "evidence_toks": ["type", "of", "bond", "refers", "to", "bond_type", ";", "Tellurium", "refers", "to", "element", "=", "'te", "'"], "difficulty": "simple", "templatized_domain_statements": ["'type of bond' refers to bond.bond_type", "'Tellurium' refers to atom.element = 'te'"]}, {"db_id": "toxicology", "question": "Indicate which atoms are connected in non-carcinogenic type molecules.", "evidence": "label = '-' means molecules are non-carcinogenic", "SQL": "SELECT DISTINCT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.label = '-'", "question_toks": ["Indicate", "which", "atoms", "are", "connected", "in", "non-carcinogenic", "type", "molecules", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.atom_id", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "INNER", "JOIN", "connected", "AS", "T3", "ON", "T1.atom_id", "=", "T3.atom_id", "WHERE", "T2.label", "=", "'-", "'"], "evidence_toks": ["label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic"], "difficulty": "simple", "templatized_domain_statements": ["'non-carcinogenic type molecules' refers to molecules with molecule.label = '-'"]}, {"db_id": "toxicology", "question": "What type of bond is there between the atoms TR004_8 and TR004_20?", "evidence": "type of bond refers to bond_type; between the atoms TR004_8 and TR004_20 refers to atom_id between atom_id = 'TR004_8' and atom_id = 'TR004_20';", "SQL": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20' OR T2.atom_id2 = 'TR004_8' AND T2.atom_id = 'TR004_20'", "question_toks": ["What", "type", "of", "bond", "is", "there", "between", "the", "atoms", "TR004_8", "and", "TR004_20", "?"], "SQL_toks": ["SELECT", "T1.bond_type", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.bond_id", "=", "T2.bond_id", "WHERE", "T2.atom_id", "=", "'TR004_8", "'", "AND", "T2.atom_id2", "=", "'TR004_20", "'", "OR", "T2.atom_id2", "=", "'TR004_8", "'", "AND", "T2.atom_id", "=", "'TR004_20", "'"], "evidence_toks": ["type", "of", "bond", "refers", "to", "bond_type", ";", "between", "the", "atoms", "TR004_8", "and", "TR004_20", "refers", "to", "atom_id", "between", "atom_id", "=", "'TR004_8", "'", "and", "atom_id", "=", "'TR004_20", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'type of bond' refers to bond.bond_type", " between the atoms TR004_8 and TR004_20 refers to atom_id between atom_id = 'TR004_8' and atom_id = 'TR004_20'"]}, {"db_id": "toxicology", "question": "How many atoms with iodine and sulfur type elements are there in single bond molecules?", "evidence": "with iodine element refer to element = 'i'; with sulfur element refers to element = 's'; single type bond refers to bond_type = '-';", "SQL": "SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'", "question_toks": ["How", "many", "atoms", "with", "iodine", "and", "sulfur", "type", "elements", "are", "there", "in", "single", "bond", "molecules", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "CASE", "WHEN", "T1.element", "=", "'", "i", "'", "THEN", "T1.atom_id", "ELSE", "NULL", "END", ")", "AS", "iodine_nums", ",", "COUNT", "(", "DISTINCT", "CASE", "WHEN", "T1.element", "=", "'s", "'", "THEN", "T1.atom_id", "ELSE", "NULL", "END", ")", "AS", "sulfur_nums", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "INNER", "JOIN", "bond", "AS", "T3", "ON", "T2.bond_id", "=", "T3.bond_id", "WHERE", "T3.bond_type", "=", "'-", "'"], "evidence_toks": ["with", "iodine", "element", "refer", "to", "element", "=", "'", "i", "'", ";", "with", "sulfur", "element", "refers", "to", "element", "=", "'s", "'", ";", "single", "type", "bond", "refers", "to", "bond_type", "=", "'-", "'", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'atoms with iodine element' refers to atom.element = 'i'", "'atoms with sulfur element' refers to atom.element = 's'", "'single bond molecules' refers to bond.bond_type = '-'"]}, {"db_id": "toxicology", "question": "Identify all connected atoms with a triple bond.", "evidence": "triple bond refers to bond_type = '#';", "SQL": "SELECT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#'", "question_toks": ["Identify", "all", "connected", "atoms", "with", "a", "triple", "bond", "."], "SQL_toks": ["SELECT", "T2.atom_id", ",", "T2.atom_id2", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.bond_id", "=", "T2.bond_id", "WHERE", "T1.bond_type", "=", "'", "#", "'"], "evidence_toks": ["triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'triple bond' refers to bond.bond_type = '#'"]}, {"db_id": "toxicology", "question": "What percentage of carcinogenic-type molecules does not contain fluorine?", "evidence": "label = '+' mean molecules are carcinogenic; contain fluorine refers to element = 'f'; percentage = DIVIDE(SUM(element = 'f'), COUNT(molecule_id)) as percent where label = '+'", "SQL": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'", "question_toks": ["What", "percentage", "of", "carcinogenic-type", "molecules", "does", "not", "contain", "fluorine", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "DISTINCT", "CASE", "WHEN", "T1.element", "<", ">", "'", "f", "'", "THEN", "T2.molecule_id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "DISTINCT", "T2.molecule_id", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.label", "=", "'+", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "contain", "fluorine", "refers", "to", "element", "=", "'", "f", "'", ";", "percentage", "=", "DIVIDE", "(", "SUM", "(", "element", "=", "'", "f", "'", ")", ",", "COUNT", "(", "molecule_id", ")", ")", "as", "percent", "where", "label", "=", "'+", "'"], "difficulty": "challenging", "templatized_domain_statements": ["'carcinogenic-type molecules' refers to molecules with molecule.label = '+'", " 'contain fluorine' refers to atom.element = 'f'", "'percentage of molecules does not contain fluorine' refers to DIVIDE(COUNT(DISTINCT CASE WHEN element <> 'f' THEN molecule_id ELSE NULL END), COUNT(DISTINCT molecule_id)) * 100"]}, {"db_id": "toxicology", "question": "Please list any three elements of the toxicology of the molecule TR000.", "evidence": "TR000 is the molecule id; element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000'", "question_toks": ["Please", "list", "any", "three", "elements", "of", "the", "toxicology", "of", "the", "molecule", "TR000", "."], "SQL_toks": ["SELECT", "DISTINCT", "T.element", "FROM", "atom", "AS", "T", "WHERE", "T.molecule_id", "=", "'TR000", "'"], "evidence_toks": ["TR000", "is", "the", "molecule", "id", ";", "element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "What are the atom IDs of the bond TR_000_2_5?", "evidence": "TR_000_2_5 is the bond id", "SQL": "SELECT T.atom_id FROM connected AS T WHERE T.bond_id = 'TR000_2_5'", "question_toks": ["What", "are", "the", "atom", "IDs", "of", "the", "bond", "TR_000_2_5", "?"], "SQL_toks": ["SELECT", "T.atom_id", "FROM", "connected", "AS", "T", "WHERE", "T.bond_id", "=", "'TR000_2_5", "'"], "evidence_toks": ["TR_000_2_5", "is", "the", "bond", "id"], "difficulty": "simple", "templatized_domain_statements": ["'TR_000_2_5' refers to column connected.bond_id"]}, {"db_id": "toxicology", "question": "Please list any five molecules that have double bonds.", "evidence": "double bond refers to bond_type = ' = ';", "SQL": "SELECT DISTINCT T.molecule_id FROM bond AS T WHERE T.bond_type = '=' LIMIT 5", "question_toks": ["Please", "list", "any", "five", "molecules", "that", "have", "double", "bonds", "."], "SQL_toks": ["SELECT", "DISTINCT", "T.molecule_id", "FROM", "bond", "AS", "T", "WHERE", "T.bond_type", "=", "'=", "'", "LIMIT", "5"], "evidence_toks": ["double", "bond", "refers", "to", "bond_type", "=", "'", "=", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'molecules that have double bonds' refers to bond.bond_type = '='"]}, {"db_id": "toxicology", "question": "What is the percentage of molecules that are carcinogenic?", "evidence": "label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+'), COUNT(molecule_id)) as percent", "SQL": "SELECT CAST(COUNT(CASE WHEN T.label = '+' THEN T.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T.molecule_id) FROM molecule t", "question_toks": ["What", "is", "the", "percentage", "of", "molecules", "that", "are", "carcinogenic", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T.label", "=", "'+", "'", "THEN", "T.molecule_id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T.molecule_id", ")", "FROM", "molecule", "t"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "percentage", "=", "DIVIDE", "(", "SUM", "(", "label", "=", "'+", "'", ")", ",", "COUNT", "(", "molecule_id", ")", ")", "as", "percent"], "difficulty": "simple", "templatized_domain_statements": ["'molecules that are carcinogenic' refers to molecule.label = '+'", "'count of molecules that are carcinogenic' refers to COUNT(CASE WHEN T.label = '+' THEN T.molecule_id ELSE NULL END)"]}, {"db_id": "toxicology", "question": "What are the elements of the toxicology and label of molecule TR060?", "evidence": "TR060 is the molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'", "question_toks": ["What", "are", "the", "elements", "of", "the", "toxicology", "and", "label", "of", "molecule", "TR060", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.element", ",", "T2.label", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.molecule_id", "=", "'TR060", "'"], "evidence_toks": ["TR060", "is", "the", "molecule", "id", ";", "label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic", ";", "element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["molecule TR060 refers to molecule.molecule_id = 'TR060'", "'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "How many bonds which involved atom 12 does molecule TR009 have?", "evidence": "TR009 is the molecule id; molecule_id = 'TR009' means the bond_id LIKE 'TR009_%'; involved atom 12 refers to atom_id = 'TR009_12' or atom_id2 = 'TR009_12'", "SQL": "SELECT COUNT(T2.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND T2.atom_id = T1.molecule_id || '_1' AND T2.atom_id2 = T1.molecule_id || '_2'", "question_toks": ["How", "many", "bonds", "which", "involved", "atom", "12", "does", "molecule", "TR009", "have", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.bond_id", ")", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.bond_id", "=", "T2.bond_id", "WHERE", "T1.molecule_id", "=", "'TR009", "'", "AND", "T2.atom_id", "=", "T1.molecule_id", "||", "'_1", "'", "AND", "T2.atom_id2", "=", "T1.molecule_id", "||", "'_2", "'"], "evidence_toks": ["TR009", "is", "the", "molecule", "id", ";", "molecule_id", "=", "'TR009", "'", "means", "the", "bond_id", "LIKE", "'TR009_", "%", "'", ";", "involved", "atom", "12", "refers", "to", "atom_id", "=", "'TR009_12", "'", "or", "atom_id2", "=", "'TR009_12", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'molecule TR009' refers to molecule.molecule_id = 'TR009'", "'involved atom 12' refers to connected.atom_id = 'TR009_12' or connected.atom_id2 = 'TR009_12'"]}, {"db_id": "toxicology", "question": "What are the bond type and the atoms of the bond ID of TR001_6_9?", "evidence": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#'; atoms refer to atom_id or atom_id2", "SQL": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR001_6_9'", "question_toks": ["What", "are", "the", "bond", "type", "and", "the", "atoms", "of", "the", "bond", "ID", "of", "TR001_6_9", "?"], "SQL_toks": ["SELECT", "T1.bond_type", ",", "T2.atom_id", ",", "T2.atom_id2", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.bond_id", "=", "T2.bond_id", "WHERE", "T2.bond_id", "=", "'TR001_6_9", "'"], "evidence_toks": ["double", "bond", "refers", "to", "bond_type", "=", "'", "=", "'", ";", "single", "bond", "refers", "to", "bond_type", "=", "'-", "'", ";", "triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";", "atoms", "refer", "to", "atom_id", "or", "atom_id2"], "difficulty": "moderate", "templatized_domain_statements": ["double bond refers to bond.bond_type = ' = '", " single bond refers to bond.bond_type = '-'", " triple bond refers to bond.bond_type = '#'", "'atoms' refers to atom.atom_id OR connected.atom_id OR connected.atom_id2"]}, {"db_id": "toxicology", "question": "Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not.", "evidence": "TR001_10 is the atom id; label = '+' mean molecules are carcinogenic", "SQL": "SELECT T2.molecule_id , IIF(T2.label = '+', 'YES', 'NO') AS flag_carcinogenic FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'", "question_toks": ["Which", "molecule", "does", "the", "atom", "TR001_10", "belong", "to", "?", "Please", "state", "whether", "this", "molecule", "is", "carcinogenic", "or", "not", "."], "SQL_toks": ["SELECT", "T2.molecule_id", ",", "IIF", "(", "T2.label", "=", "'+", "'", ",", "'YES", "'", ",", "'NO", "'", ")", "AS", "flag_carcinogenic", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.atom_id", "=", "'TR001_10", "'"], "evidence_toks": ["TR001_10", "is", "the", "atom", "id", ";", "label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic"], "difficulty": "moderate", "templatized_domain_statements": ["'atom TR001_10' refers to atom.atom_id = 'TR001_10'", " molecules is carcinogenic refers to molecule.label = '+'"]}, {"db_id": "toxicology", "question": "How many molecules have a triple bond type?", "evidence": "triple bond refers to bond_type = '#';", "SQL": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.bond_type = '#'", "question_toks": ["How", "many", "molecules", "have", "a", "triple", "bond", "type", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "T.molecule_id", ")", "FROM", "bond", "AS", "T", "WHERE", "T.bond_type", "=", "'", "#", "'"], "evidence_toks": ["triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'molecules with a triple bond type' refers to bond.bond_type = '#'"]}, {"db_id": "toxicology", "question": "List all the elements of the toxicology of the molecule \"TR004\".", "evidence": "TR004 is the molecule id; element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'", "question_toks": ["List", "all", "the", "elements", "of", "the", "toxicology", "of", "the", "molecule", "``", "TR004", "''", "."], "SQL_toks": ["SELECT", "DISTINCT", "T.element", "FROM", "atom", "AS", "T", "WHERE", "T.molecule_id", "=", "'TR004", "'"], "evidence_toks": ["TR004", "is", "the", "molecule", "id", ";", "element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["'TR004' refers to molecule.molecule_id = 'TR004'", "'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "How many of the molecules are not carcinogenic?", "evidence": "label = '-' means molecules are non-carcinogenic", "SQL": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '-'", "question_toks": ["How", "many", "of", "the", "molecules", "are", "not", "carcinogenic", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T.molecule_id", ")", "FROM", "molecule", "AS", "T", "WHERE", "T.label", "=", "'-", "'"], "evidence_toks": ["label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic"], "difficulty": "simple", "templatized_domain_statements": ["'molecules are not carcinogenic' refers to molecule.label = '-'"]}, {"db_id": "toxicology", "question": "What are the bonds that have phosphorus and nitrogen as their atom elements?", "evidence": "have phosphorus as atom elements refers to element = 'p'; have nitrogen as atom elements refers to element = 'n'", "SQL": "SELECT T2.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IN ( SELECT T3.bond_id FROM connected AS T3 INNER JOIN atom AS T4 ON T3.atom_id = T4.atom_id WHERE T4.element = 'p' ) AND T1.element = 'n'", "question_toks": ["What", "are", "the", "bonds", "that", "have", "phosphorus", "and", "nitrogen", "as", "their", "atom", "elements", "?"], "SQL_toks": ["SELECT", "T2.bond_id", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "WHERE", "T2.bond_id", "IN", "(", "SELECT", "T3.bond_id", "FROM", "connected", "AS", "T3", "INNER", "JOIN", "atom", "AS", "T4", "ON", "T3.atom_id", "=", "T4.atom_id", "WHERE", "T4.element", "=", "'", "p", "'", ")", "AND", "T1.element", "=", "'", "n", "'"], "evidence_toks": ["have", "phosphorus", "as", "atom", "elements", "refers", "to", "element", "=", "'", "p", "'", ";", "have", "nitrogen", "as", "atom", "elements", "refers", "to", "element", "=", "'", "n", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'have phosphorus as atom elements' refers to atom.element = 'p'", "'have nitrogen as atom elements' refers to atom.element = 'n'"]}, {"db_id": "toxicology", "question": "What is the average number of bonds the atoms with the element iodine have?", "evidence": "atoms with the element iodine refers to element = 'i'; average = DIVIDE(COUND(bond_id), COUNT(atom_id)) where element = 'i'", "SQL": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'", "question_toks": ["What", "is", "the", "average", "number", "of", "bonds", "the", "atoms", "with", "the", "element", "iodine", "have", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "T2.bond_id", ")", "AS", "REAL", ")", "/", "COUNT", "(", "T1.atom_id", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "WHERE", "T1.element", "=", "'", "i", "'"], "evidence_toks": ["atoms", "with", "the", "element", "iodine", "refers", "to", "element", "=", "'", "i", "'", ";", "average", "=", "DIVIDE", "(", "COUND", "(", "bond_id", ")", ",", "COUNT", "(", "atom_id", ")", ")", "where", "element", "=", "'", "i", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'atoms with the element iodine' refers to atom.element = 'i'", "'average number of bonds the atoms have' refers to CAST(COUNT(connected.bond_id) AS REAL) / COUNT(atom.atom_id)"]}, {"db_id": "toxicology", "question": "List all the elements of atoms that can not bond with any other atoms.", "evidence": "element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium; atoms cannot bond with other atoms means atom_id NOT in connected table;", "SQL": "SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id )", "question_toks": ["List", "all", "the", "elements", "of", "atoms", "that", "can", "not", "bond", "with", "any", "other", "atoms", "."], "SQL_toks": ["SELECT", "DISTINCT", "T.element", "FROM", "atom", "AS", "T", "WHERE", "T.element", "NOT", "IN", "(", "SELECT", "DISTINCT", "T1.element", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", ")"], "evidence_toks": ["element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium", ";", "atoms", "can", "not", "bond", "with", "other", "atoms", "means", "atom_id", "NOT", "in", "connected", "table", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "What are the atoms of the triple bond with the molecule \"TR447\"?", "evidence": "TR447 is the molecule id; triple bond refers to bond_type = '#';", "SQL": "SELECT T2.atom_id, T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#' AND T3.molecule_id = 'TR447'", "question_toks": ["What", "are", "the", "atoms", "of", "the", "triple", "bond", "with", "the", "molecule", "``", "TR447", "''", "?"], "SQL_toks": ["SELECT", "T2.atom_id", ",", "T2.atom_id2", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "INNER", "JOIN", "bond", "AS", "T3", "ON", "T2.bond_id", "=", "T3.bond_id", "WHERE", "T3.bond_type", "=", "'", "#", "'", "AND", "T3.molecule_id", "=", "'TR447", "'"], "evidence_toks": ["TR447", "is", "the", "molecule", "id", ";", "triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'TR447' refers to the molecule_id = TR447", "'triple bond' refers to bond.bond_type = '#'"]}, {"db_id": "toxicology", "question": "What are the elements of the atoms of TR144_8_19?", "evidence": "TR144_8_19 is the bond id; element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19'", "question_toks": ["What", "are", "the", "elements", "of", "the", "atoms", "of", "TR144_8_19", "?"], "SQL_toks": ["SELECT", "T2.element", "FROM", "connected", "AS", "T1", "INNER", "JOIN", "atom", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "WHERE", "T1.bond_id", "=", "'TR144_8_19", "'"], "evidence_toks": ["TR144_8_19", "is", "the", "bond", "id", ";", "element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["'atoms of TR144_8_19' refers to connected.bond_id", "'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "What is the least common element of all carcinogenic molecules?", "evidence": "label = '+' mean molecules are carcinogenic", "SQL": "SELECT T.element FROM ( SELECT T2.element, COUNT(DISTINCT T2.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T2.element ORDER BY COUNT(DISTINCT T2.molecule_id) LIMIT 1 ) t", "question_toks": ["What", "is", "the", "least", "common", "element", "of", "all", "carcinogenic", "molecules", "?"], "SQL_toks": ["SELECT", "T.element", "FROM", "(", "SELECT", "T2.element", ",", "COUNT", "(", "DISTINCT", "T2.molecule_id", ")", "FROM", "molecule", "AS", "T1", "INNER", "JOIN", "atom", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.label", "=", "'+", "'", "GROUP", "BY", "T2.element", "ORDER", "BY", "COUNT", "(", "DISTINCT", "T2.molecule_id", ")", "LIMIT", "1", ")", "t"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic"], "difficulty": "moderate", "templatized_domain_statements": ["'carcinogenic molecules' refers to molecules with molecule.label = '+'"]}, {"db_id": "toxicology", "question": "What are the bond type for atoms with element Tin?", "evidence": "element Tin refers to element = 'Sn'; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#'", "SQL": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T1.element = 'sn'", "question_toks": ["What", "are", "the", "bond", "type", "for", "atoms", "with", "element", "Tin", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T3.bond_type", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "INNER", "JOIN", "bond", "AS", "T3", "ON", "T3.bond_id", "=", "T2.bond_id", "WHERE", "T1.element", "=", "'sn", "'"], "evidence_toks": ["element", "Tin", "refers", "to", "element", "=", "'Sn", "'", ";", "double", "bond", "refers", "to", "bond_type", "=", "'", "=", "'", ";", "single", "bond", "refers", "to", "bond_type", "=", "'-", "'", ";", "triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'atoms with element Tin' refers to atom.element = 'Sn'"]}, {"db_id": "toxicology", "question": "How many elements are there for single bond molecules?", "evidence": "single bond refers to bond_type = '-';", "SQL": "SELECT COUNT(DISTINCT T.element) FROM ( SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T", "question_toks": ["How", "many", "elements", "are", "there", "for", "single", "bond", "molecules", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "T.element", ")", "FROM", "(", "SELECT", "DISTINCT", "T2.molecule_id", ",", "T1.element", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "INNER", "JOIN", "bond", "AS", "T3", "ON", "T2.molecule_id", "=", "T3.molecule_id", "WHERE", "T3.bond_type", "=", "'-", "'", ")", "AS", "T"], "evidence_toks": ["single", "bond", "refers", "to", "bond_type", "=", "'-", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'single bond molecules' refers to bond.bond_type = '-'"]}, {"db_id": "toxicology", "question": "Write down bond id for molecules that are carcinogenic.", "evidence": "label = '+' mean molecules are carcinogenic", "SQL": "SELECT DISTINCT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'", "question_toks": ["Write", "down", "bond", "id", "for", "molecules", "that", "are", "carcinogenic", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.bond_id", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.label", "=", "'+", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic"], "difficulty": "simple", "templatized_domain_statements": ["'molecules that are carcinogenic' refers to molecules with molecule.label = '+'"]}, {"db_id": "toxicology", "question": "Among the single bond molecule id, which molecules are not carcinogenic?", "evidence": "label = '-' means molecules are non-carcinogenic; single bond refers to bond_type = '-';", "SQL": "SELECT DISTINCT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.bond_type = '-'", "question_toks": ["Among", "the", "single", "bond", "molecule", "id", ",", "which", "molecules", "are", "not", "carcinogenic", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.molecule_id", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.label", "=", "'-", "'", "AND", "T1.bond_type", "=", "'-", "'"], "evidence_toks": ["label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic", ";", "single", "bond", "refers", "to", "bond_type", "=", "'-", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'molecules are not carcinogenic' refers to molecule.label = '-'", "'single bond molecule' refers to bond.bond_type = '-'"]}, {"db_id": "toxicology", "question": "What is the composition of element chlorine in percentage among the single bond molecules?", "evidence": "element chlorine refers to element = 'cl'; single bond refers to bond_type = '-'; percentage = DIVIDE(SUM(element = 'cl'), COUNT(atom_id)) as percent where bond_type = '-'", "SQL": "SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T", "question_toks": ["What", "is", "the", "composition", "of", "element", "chlorine", "in", "percentage", "among", "the", "single", "bond", "molecules", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T.element", "=", "'cl", "'", "THEN", "T.atom_id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T.atom_id", ")", "FROM", "(", "SELECT", "T1.atom_id", ",", "T1.element", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "INNER", "JOIN", "bond", "AS", "T3", "ON", "T2.molecule_id", "=", "T3.molecule_id", "WHERE", "T3.bond_type", "=", "'-", "'", ")", "AS", "T"], "evidence_toks": ["element", "chlorine", "refers", "to", "element", "=", "'cl", "'", ";", "single", "bond", "refers", "to", "bond_type", "=", "'-", "'", ";", "percentage", "=", "DIVIDE", "(", "SUM", "(", "element", "=", "'cl", "'", ")", ",", "COUNT", "(", "atom_id", ")", ")", "as", "percent", "where", "bond_type", "=", "'-", "'"], "difficulty": "challenging", "templatized_domain_statements": ["'element chlorine' refers to atom.element = 'cl'", "'single bond molecules' refers to bond.bond_type = '-'", "'composition of element chlorine in percentage among all molecules' refers to CAST(COUNT(CASE WHEN atom.element = 'cl' THEN atom.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(atom.atom_id)"]}, {"db_id": "toxicology", "question": "Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic?", "evidence": "calcium refers to element = 'ca'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; MAX(label)", "SQL": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca' GROUP BY T2.label ORDER BY COUNT(T2.label) DESC LIMIT 1", "question_toks": ["Among", "the", "molecules", "with", "element", "Calcium", ",", "are", "they", "mostly", "carcinogenic", "or", "non", "carcinogenic", "?"], "SQL_toks": ["SELECT", "T2.label", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.element", "=", "'ca", "'", "GROUP", "BY", "T2.label", "ORDER", "BY", "COUNT", "(", "T2.label", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["calcium", "refers", "to", "element", "=", "'ca", "'", ";", "label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic", ";", "MAX", "(", "label", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'molecules with element Calcium' refers to atom.element = 'ca'", "'carcinogenic' refers to molecule.label = '+'", "'non carcinogenic' refers to molecule.label = '-'"]}, {"db_id": "toxicology", "question": "Does bond id TR001_1_8 have both element of chlorine and carbon?", "evidence": "chlorine refers to element = 'cl'; carbon refers to element = 'c'", "SQL": "SELECT T2.bond_id, T2.atom_id2, T1.element AS flag_have_CaCl FROM atom AS T1 INNER JOIN connected AS T2 ON T2.atom_id = T1.atom_id WHERE T2.bond_id = 'TR001_1_8' AND (T1.element = 'c1' OR T1.element = 'c')", "question_toks": ["Does", "bond", "id", "TR001_1_8", "have", "both", "element", "of", "chlorine", "and", "carbon", "?"], "SQL_toks": ["SELECT", "T2.bond_id", ",", "T2.atom_id2", ",", "T1.element", "AS", "flag_have_CaCl", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T2.atom_id", "=", "T1.atom_id", "WHERE", "T2.bond_id", "=", "'TR001_1_8", "'", "AND", "(", "T1.element", "=", "'c1", "'", "OR", "T1.element", "=", "'", "c", "'", ")"], "evidence_toks": ["chlorine", "refers", "to", "element", "=", "'cl", "'", ";", "carbon", "refers", "to", "element", "=", "'", "c", "'"], "difficulty": "simple", "templatized_domain_statements": ["'chlorine' refers to atom.element = 'cl'", "'carbon' refers to atom.element = 'c'"]}, {"db_id": "toxicology", "question": "What is the percentage of element lead in carcinogenic molecules?", "evidence": "lead refers to element = 'pb'; label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(element = 'pb'); COUNT(molecule_id)) as percentage where label = '+'", "SQL": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'pb' THEN T1.element ELSE NULL END) AS REAL) * 100 / COUNT(T1.element) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'", "question_toks": ["What", "is", "the", "percentage", "of", "element", "lead", "in", "carcinogenic", "molecules", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "DISTINCT", "CASE", "WHEN", "T1.element", "=", "'pb", "'", "THEN", "T1.element", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.element", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.label", "=", "'+", "'"], "evidence_toks": ["lead", "refers", "to", "element", "=", "'pb", "'", ";", "label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "percentage", "=", "DIVIDE", "(", "SUM", "(", "element", "=", "'pb", "'", ")", ";", "COUNT", "(", "molecule_id", ")", ")", "as", "percentage", "where", "label", "=", "'+", "'"], "difficulty": "moderate", "templatized_domain_statements": ["lead refers to atom.element = 'pb'", "'carcinogenic molecules' refer to label = '+'", "'percentage of element lead in molecules' refers to CAST(COUNT(DISTINCT CASE WHEN atom.element = 'pb' THEN atom.element ELSE NULL END) AS REAL) * 100 / COUNT(atom.element)"]}, {"db_id": "toxicology", "question": "What is the label for bond ID TR001_10_11?", "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic", "SQL": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'", "question_toks": ["What", "is", "the", "label", "for", "bond", "ID", "TR001_10_11", "?"], "SQL_toks": ["SELECT", "T2.label", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.bond_id", "=", "'TR001_10_11", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic"], "difficulty": "simple", "templatized_domain_statements": ["carcinogenic molecules refers to molecule.label = '+'", "non-carcinogenic molecules refers to molecule.label = '-'"]}, {"db_id": "toxicology", "question": "What is the ratio of Hydrogen elements in molecule ID TR006? Please indicate its label.", "evidence": "hydrogen refers to element = 'h'; ratio = DIVIDE(SUM(element = 'h'), count(element)) where molecule_id = 'TR006' ; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic", "SQL": "SELECT CAST(COUNT(CASE WHEN T.element = 'h' THEN T.atom_id ELSE NULL END) AS REAL) / COUNT(T.atom_id) FROM ( SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006' ) AS T UNION ALL SELECT DISTINCT T3.label FROM ( SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006' ) AS T3", "question_toks": ["What", "is", "the", "ratio", "of", "Hydrogen", "elements", "in", "molecule", "ID", "TR006", "?", "Please", "indicate", "its", "label", "."], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T.element", "=", "'", "h", "'", "THEN", "T.atom_id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "/", "COUNT", "(", "T.atom_id", ")", "FROM", "(", "SELECT", "DISTINCT", "T1.atom_id", ",", "T1.element", ",", "T1.molecule_id", ",", "T2.label", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.molecule_id", "=", "'TR006", "'", ")", "AS", "T", "UNION", "ALL", "SELECT", "DISTINCT", "T3.label", "FROM", "(", "SELECT", "DISTINCT", "T1.atom_id", ",", "T1.element", ",", "T1.molecule_id", ",", "T2.label", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.molecule_id", "=", "'TR006", "'", ")", "AS", "T3"], "evidence_toks": ["hydrogen", "refers", "to", "element", "=", "'", "h", "'", ";", "ratio", "=", "DIVIDE", "(", "SUM", "(", "element", "=", "'", "h", "'", ")", ",", "count", "(", "element", ")", ")", "where", "molecule_id", "=", "'TR006", "'", ";", "label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic"], "difficulty": "challenging", "templatized_domain_statements": ["'Hydrogen elements in molecule ID TR006' refers to atom.element = 'h' where atom.molecule_id = 'TR006'", "'ratio of Hydrogen elements in molecule ID TR006' refers to DIVIDE(SUM(element = 'h'), count(element)) where atom.molecule_id = 'TR006'", "carcinogenic molecules refers to molecule.label = '+'", "non-carcinogenic molecules refers to molecule.label = '-'"]}, {"db_id": "toxicology", "question": "Name chemical elements that form a bond TR001_10_11.", "evidence": "element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium; TR001_10_11 is the bond id; molecule id refers to SUBSTR(bond_id, 1, 5); atom 1 refers to SUBSTR(bond_id, 7, 2); atom 2 refers to SUBSTR(bond_id, 10, 2)", "SQL": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11'", "question_toks": ["Name", "chemical", "elements", "that", "form", "a", "bond", "TR001_10_11", "."], "SQL_toks": ["SELECT", "T1.element", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "INNER", "JOIN", "bond", "AS", "T3", "ON", "T2.bond_id", "=", "T3.bond_id", "WHERE", "T3.bond_id", "=", "'TR001_10_11", "'"], "evidence_toks": ["element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium", ";", "TR001_10_11", "is", "the", "bond", "id", ";", "molecule", "id", "refers", "to", "SUBSTR", "(", "bond_id", ",", "1", ",", "5", ")", ";", "atom", "1", "refers", "to", "SUBSTR", "(", "bond_id", ",", "7", ",", "2", ")", ";", "atom", "2", "refers", "to", "SUBSTR", "(", "bond_id", ",", "10", ",", "2", ")"], "difficulty": "challenging", "templatized_domain_statements": ["'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'", "'bond TR001_10_11' refers to connected.bond_id = 'TR001_10_11'"]}, {"db_id": "toxicology", "question": "Among all chemical compounds identified in the database, what percent of compounds form a triple-bond.", "evidence": "triple bond refers to bond_type = '#';", "SQL": "SELECT CAST(COUNT(CASE WHEN T.bond_type = '#' THEN T.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T.bond_id) FROM bond AS T", "question_toks": ["Among", "all", "chemical", "compounds", "identified", "in", "the", "database", ",", "what", "percent", "of", "compounds", "form", "a", "triple-bond", "."], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T.bond_type", "=", "'", "#", "'", "THEN", "T.bond_id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T.bond_id", ")", "FROM", "bond", "AS", "T"], "evidence_toks": ["triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'triple bond' refers to bond.bond_type = '#'"]}, {"db_id": "toxicology", "question": "Is molecule TR151 carcinogenic?", "evidence": "label = '+' mean molecules are carcinogenic;", "SQL": "SELECT T.label FROM molecule AS T WHERE T.molecule_id = 'TR151'", "question_toks": ["Is", "molecule", "TR151", "carcinogenic", "?"], "SQL_toks": ["SELECT", "T.label", "FROM", "molecule", "AS", "T", "WHERE", "T.molecule_id", "=", "'TR151", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";"], "difficulty": "simple", "templatized_domain_statements": ["'molecule TR151 carcinogenic' refers to molecule.label = '+'"]}, {"db_id": "toxicology", "question": "Which toxic element can be found in the molecule TR151?", "evidence": "element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'", "question_toks": ["Which", "toxic", "element", "can", "be", "found", "in", "the", "molecule", "TR151", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T.element", "FROM", "atom", "AS", "T", "WHERE", "T.molecule_id", "=", "'TR151", "'"], "evidence_toks": ["element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "How many chemical compounds in the database are identified as carcinogenic.", "evidence": "label = '+' mean molecules are carcinogenic;", "SQL": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'", "question_toks": ["How", "many", "chemical", "compounds", "in", "the", "database", "are", "identified", "as", "carcinogenic", "."], "SQL_toks": ["SELECT", "COUNT", "(", "T.molecule_id", ")", "FROM", "molecule", "AS", "T", "WHERE", "T.label", "=", "'+", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";"], "difficulty": "simple", "templatized_domain_statements": ["identified as carcinogenic molecules refers to molecule.label = '+'"]}, {"db_id": "toxicology", "question": "How many atoms belong to the molecule labeled with carcinogenic compounds?", "evidence": "label = '+' mean molecules are carcinogenic;", "SQL": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'", "question_toks": ["How", "many", "atoms", "belong", "to", "the", "molecule", "labeled", "with", "carcinogenic", "compounds", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.atom_id", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.label", "=", "'+", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";"], "difficulty": "simple", "templatized_domain_statements": ["'molecule labeled with carcinogenic compounds' refers to molecules with molecule.label = '+'"]}, {"db_id": "toxicology", "question": "Which bond ids are double-bond with carcinogenic compound?", "evidence": "label = '+' mean molecules are carcinogenic; double bond refers to bond_type = ' = ';", "SQL": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.bond_type = '='", "question_toks": ["Which", "bond", "ids", "are", "double-bond", "with", "carcinogenic", "compound", "?"], "SQL_toks": ["SELECT", "T1.bond_id", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.label", "=", "'+", "'", "AND", "T1.bond_type", "=", "'=", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "double", "bond", "refers", "to", "bond_type", "=", "'", "=", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'carcinogenic compound' refers to molecules with molecule.label = '+'", "'double-bond' refers to bond.bond_type = '='"]}, {"db_id": "toxicology", "question": "How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound?", "evidence": "label = '+' mean molecules are carcinogenic; hydrogen refers to element = h'", "SQL": "SELECT COUNT(T1.atom_id) AS atomnums_h FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'h'", "question_toks": ["How", "many", "atoms", "belong", "to", "the", "molecule", "that", "element", "is", "hydrogen", "and", "labeled", "with", "carcinogenic", "compound", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.atom_id", ")", "AS", "atomnums_h", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.label", "=", "'+", "'", "AND", "T1.element", "=", "'", "h", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "hydrogen", "refers", "to", "element", "=", "h", "'"], "difficulty": "simple", "templatized_domain_statements": ["'carcinogenic compound' refers to molecules with molecule.label = '+'", "'element is hydrogen' refers to atom.element = 'h'"]}, {"db_id": "toxicology", "question": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.", "evidence": "hydrogen refers to element = 'h'; label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+' and element = 'h'), COUNT(molecule_id)) * 100.0", "SQL": "SELECT CAST(COUNT(CASE WHEN T1.element = 'h' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'", "question_toks": ["Calculate", "the", "percentage", "of", "molecules", "containing", "carcinogenic", "compounds", "that", "element", "is", "hydrogen", "."], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T1.element", "=", "'", "h", "'", "THEN", "T2.molecule_id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T2.molecule_id", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.label", "=", "'+", "'"], "evidence_toks": ["hydrogen", "refers", "to", "element", "=", "'", "h", "'", ";", "label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "percentage", "=", "DIVIDE", "(", "SUM", "(", "label", "=", "'+", "'", "and", "element", "=", "'", "h", "'", ")", ",", "COUNT", "(", "molecule_id", ")", ")", "*", "100.0"], "difficulty": "moderate", "templatized_domain_statements": ["'element is hydrogen' refers to atom.element = 'h'", "'molecules containing carcinogenic compounds' refers to molecules with molecule.label = '+'", "'percentage of molecules containing hydrogen' refers to CAST(COUNT(CASE WHEN atom.element = 'h' THEN molecule.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(molecule.molecule_id)"]}, {"db_id": "toxicology", "question": "Is molecule TR124 carcinogenic?", "evidence": "label = '+' mean molecules are carcinogenic;", "SQL": "SELECT T.label FROM molecule AS T WHERE T.molecule_id = 'TR124'", "question_toks": ["Is", "molecule", "TR124", "carcinogenic", "?"], "SQL_toks": ["SELECT", "T.label", "FROM", "molecule", "AS", "T", "WHERE", "T.molecule_id", "=", "'TR124", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";"], "difficulty": "simple", "templatized_domain_statements": ["'carcinogenic' refers to molecule.label = '+'"]}, {"db_id": "toxicology", "question": "What atoms comprise TR186?", "evidence": "TR186 is a molecule id", "SQL": "SELECT T.atom_id FROM atom AS T WHERE T.molecule_id = 'TR186'", "question_toks": ["What", "atoms", "comprise", "TR186", "?"], "SQL_toks": ["SELECT", "T.atom_id", "FROM", "atom", "AS", "T", "WHERE", "T.molecule_id", "=", "'TR186", "'"], "evidence_toks": ["TR186", "is", "a", "molecule", "id"], "difficulty": "simple", "templatized_domain_statements": ["'TR186' refers to atom.molecule_id"]}, {"db_id": "toxicology", "question": "How many double bonds does TR006 have and is it carcinogenic?", "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; double bond refers to bond_type = ' = ';", "SQL": "SELECT COUNT(T1.bond_id), T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.molecule_id = 'TR006' GROUP BY T2.label", "question_toks": ["How", "many", "double", "bonds", "does", "TR006", "have", "and", "is", "it", "carcinogenic", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.bond_id", ")", ",", "T2.label", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.bond_type", "=", "'=", "'", "AND", "T2.molecule_id", "=", "'TR006", "'", "GROUP", "BY", "T2.label"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic", ";", "double", "bond", "refers", "to", "bond_type", "=", "'", "=", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'carcinogenic' refers to molecule.label = '+'", "'non-carcinogenic' refers to molecule.label = '-'", " 'double bonds' refers to bond.bond_type = ' = '"]}, {"db_id": "toxicology", "question": "Name all bonds with single bond types and what atoms are connected to the molecules.", "evidence": "single bond refers to bond_type = '-';", "SQL": "SELECT T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'", "question_toks": ["Name", "all", "bonds", "with", "single", "bond", "types", "and", "what", "atoms", "are", "connected", "to", "the", "molecules", "."], "SQL_toks": ["SELECT", "T1.bond_id", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.bond_id", "=", "T2.bond_id", "WHERE", "T1.bond_type", "=", "'-", "'"], "evidence_toks": ["single", "bond", "refers", "to", "bond_type", "=", "'-", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'single bond types' refers to bond.bond_type = '-'"]}, {"db_id": "toxicology", "question": "Which molecules have triple bonds and list all the elements they contain.", "evidence": "triple bond refers to bond_type = '#'; element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'", "question_toks": ["Which", "molecules", "have", "triple", "bonds", "and", "list", "all", "the", "elements", "they", "contain", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.molecule_id", ",", "T2.element", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "atom", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.bond_type", "=", "'", "#", "'"], "evidence_toks": ["triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";", "element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["'molecules with triple bonds' refers to bond.bond_type = '#'", "'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "Name the atoms' elements that form bond TR000_2_3.", "evidence": "element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3'", "question_toks": ["Name", "the", "atoms", "'", "elements", "that", "form", "bond", "TR000_2_3", "."], "SQL_toks": ["SELECT", "T2.element", "FROM", "connected", "AS", "T1", "INNER", "JOIN", "atom", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "WHERE", "T1.bond_id", "=", "'TR000_2_3", "'"], "evidence_toks": ["element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "How many bonds are created by bonding atoms with chlorine element?", "evidence": "chlorine refers to element = 'c'", "SQL": "SELECT COUNT(T1.bond_id) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'cl'", "question_toks": ["How", "many", "bonds", "are", "created", "by", "bonding", "atoms", "with", "chlorine", "element", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.bond_id", ")", "FROM", "connected", "AS", "T1", "INNER", "JOIN", "atom", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "WHERE", "T2.element", "=", "'cl", "'"], "evidence_toks": ["chlorine", "refers", "to", "element", "=", "'", "c", "'"], "difficulty": "simple", "templatized_domain_statements": ["'chlorine' refers to atom.element = 'cl'"]}, {"db_id": "toxicology", "question": "How many molecules without sulphur element is not having double bond?", "evidence": "double bond refers to bond_type = ' = '; bond_type ! = ' = '; sulphur refers to element = 's'", "SQL": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element <> 's' AND T2.bond_type <> '='", "question_toks": ["How", "many", "molecules", "without", "sulphur", "element", "is", "not", "having", "double", "bond", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "T1.molecule_id", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "bond", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.element", "<", ">", "'s", "'", "AND", "T2.bond_type", "<", ">", "'=", "'"], "evidence_toks": ["double", "bond", "refers", "to", "bond_type", "=", "'", "=", "'", ";", "bond_type", "!", "=", "'", "=", "'", ";", "sulphur", "refers", "to", "element", "=", "'s", "'"], "difficulty": "simple", "templatized_domain_statements": ["'double bond' refers to bond.bond_type = ' = '", "'not having double bond' refers to bond_type <> '='", "'molecules without sulphur element' refers to atom.element <= 's'"]}, {"db_id": "toxicology", "question": "What is the carcinogenic label for bond TR001_2_4?", "evidence": "label = '+' mean molecules are carcinogenic", "SQL": "SELECT DISTINCT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_id = 'TR001_2_4'", "question_toks": ["What", "is", "the", "carcinogenic", "label", "for", "bond", "TR001_2_4", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T2.label", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "INNER", "JOIN", "bond", "AS", "T3", "ON", "T2.molecule_id", "=", "T3.molecule_id", "WHERE", "T3.bond_id", "=", "'TR001_2_4", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic"], "difficulty": "simple", "templatized_domain_statements": ["'carcinogenic label' refers to molecule.label = '+'"]}, {"db_id": "toxicology", "question": "How many atoms belong to molecule id TR005?", "evidence": "", "SQL": "SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.molecule_id = 'TR005'", "question_toks": ["How", "many", "atoms", "belong", "to", "molecule", "id", "TR005", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T.atom_id", ")", "FROM", "atom", "AS", "T", "WHERE", "T.molecule_id", "=", "'TR005", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": []}, {"db_id": "toxicology", "question": "Among the molecules which contain \"cl\" element, which of them are carcinogenic?", "evidence": "label = '+' mean molecules are carcinogenic;", "SQL": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'", "question_toks": ["Among", "the", "molecules", "which", "contain", "``", "cl", "''", "element", ",", "which", "of", "them", "are", "carcinogenic", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.molecule_id", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.element", "=", "'cl", "'", "AND", "T2.label", "=", "'+", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";"], "difficulty": "simple", "templatized_domain_statements": ["'carcinogenic' refers to molecule.label = '+'"]}, {"db_id": "toxicology", "question": "How many elements are contained in bond_id TR001_3_4?", "evidence": "element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4'", "question_toks": ["How", "many", "elements", "are", "contained", "in", "bond_id", "TR001_3_4", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "T1.element", ")", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.atom_id", "=", "T2.atom_id", "WHERE", "T2.bond_id", "=", "'TR001_3_4", "'"], "evidence_toks": ["element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["'bond_id TR001_3_4' refers to connected.bond_id = 'TR001_3_4'", "'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "What is the type of the bond which is presenting the connection between two atoms TR000_1 and TR000_2?", "evidence": "type of bond refers to bond_type; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';", "SQL": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_1' AND T2.atom_id2 = 'TR000_2'", "question_toks": ["What", "is", "the", "type", "of", "the", "bond", "which", "is", "presenting", "the", "connection", "between", "two", "atoms", "TR000_1", "and", "TR000_2", "?"], "SQL_toks": ["SELECT", "T1.bond_type", "FROM", "bond", "AS", "T1", "INNER", "JOIN", "connected", "AS", "T2", "ON", "T1.bond_id", "=", "T2.bond_id", "WHERE", "T2.atom_id", "=", "'TR000_1", "'", "AND", "T2.atom_id2", "=", "'TR000_2", "'"], "evidence_toks": ["type", "of", "bond", "refers", "to", "bond_type", ";", "double", "bond", "refers", "to", "bond_type", "=", "'", "=", "'", ";", "single", "bond", "refers", "to", "bond_type", "=", "'-", "'", ";", "triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'type of bond' refers to value of column bond.bond_type"]}, {"db_id": "toxicology", "question": "Is molecule TR000 is carcinogenic or not?", "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic", "SQL": "SELECT label FROM molecule AS T WHERE T.molecule_id = 'TR000'", "question_toks": ["Is", "molecule", "TR000", "is", "carcinogenic", "or", "not", "?"], "SQL_toks": ["SELECT", "label", "FROM", "molecule", "AS", "T", "WHERE", "T.molecule_id", "=", "'TR000", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic"], "difficulty": "simple", "templatized_domain_statements": ["'carcinogenic' refers to molecule.label = '+'", "'not carcinogenic' refers to molecule.label = '-'"]}, {"db_id": "toxicology", "question": "How many carcinogenic molecules that consisted of Nitrogen?", "evidence": "nitrogen refers to element = 'n'; label = '+' mean molecules are carcinogenic;", "SQL": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'n' AND T1.label = '+'", "question_toks": ["How", "many", "carcinogenic", "molecules", "that", "consisted", "of", "Nitrogen", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "T1.molecule_id", ")", "FROM", "molecule", "AS", "T1", "INNER", "JOIN", "atom", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.element", "=", "'", "n", "'", "AND", "T1.label", "=", "'+", "'"], "evidence_toks": ["nitrogen", "refers", "to", "element", "=", "'", "n", "'", ";", "label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";"], "difficulty": "simple", "templatized_domain_statements": ["nitrogen refers to atom.element = 'n'", "'carcinogenic molecules' refers to molecules with molecule.label = '+'"]}, {"db_id": "toxicology", "question": "Which non-carcinogenic molecules consisted more than 5 atoms?", "evidence": "label = '-' means molecules are non-carcinogenic; molecules consisted more than 5 atoms refers to COUNT(molecule_id) > 5", "SQL": "SELECT T.molecule_id FROM ( SELECT T1.molecule_id, COUNT(T2.atom_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5 ) t", "question_toks": ["Which", "non-carcinogenic", "molecules", "consisted", "more", "than", "5", "atoms", "?"], "SQL_toks": ["SELECT", "T.molecule_id", "FROM", "(", "SELECT", "T1.molecule_id", ",", "COUNT", "(", "T2.atom_id", ")", "FROM", "molecule", "AS", "T1", "INNER", "JOIN", "atom", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.label", "=", "'-", "'", "GROUP", "BY", "T1.molecule_id", "HAVING", "COUNT", "(", "T2.atom_id", ")", ">", "5", ")", "t"], "evidence_toks": ["label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic", ";", "molecules", "consisted", "more", "than", "5", "atoms", "refers", "to", "COUNT", "(", "molecule_id", ")", ">", "5"], "difficulty": "moderate", "templatized_domain_statements": ["'non-carcinogenic molecules' refers to molecule.label = '-'", "'molecules consisted more than {100} atoms' refers to COUNT(molecule.molecule_id) > 100"]}, {"db_id": "toxicology", "question": "List all the elements with triple bond, consisted in molecule TR024.", "evidence": "triple bond refers to bond_type = '#'; element = \u2018cl\u2019 means Chlorine; element = \u2018c\u2019 means Carbon; element = \u2018h\u2019 means Hydrogen; element = \u2018o\u2019 means Oxygen, element = \u2019s\u2019 means Sulfur; element = \u2019n\u2019 means Nitrogen, element = \u2018p\u2019 means Phosphorus, element = \u2018na\u2019 means Sodium, element = \u2018br\u2019 means Bromine, element = \u2018f\u2019 means Fluorine; element = \u2018i\u2019 means Iodine; element = \u2018sn\u2019 means Tin; element = \u2018pb\u2019 means Lead; element = \u2018te\u2019 means Tellurium; element = \u2018ca\u2019 means Calcium", "SQL": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '#'", "question_toks": ["List", "all", "the", "elements", "with", "triple", "bond", ",", "consisted", "in", "molecule", "TR024", "."], "SQL_toks": ["SELECT", "T1.element", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "bond", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.molecule_id", "=", "'TR024", "'", "AND", "T2.bond_type", "=", "'", "#", "'"], "evidence_toks": ["triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";", "element", "=", "\u2018", "cl", "\u2019", "means", "Chlorine", ";", "element", "=", "\u2018", "c", "\u2019", "means", "Carbon", ";", "element", "=", "\u2018", "h", "\u2019", "means", "Hydrogen", ";", "element", "=", "\u2018", "o", "\u2019", "means", "Oxygen", ",", "element", "=", "\u2019", "s", "\u2019", "means", "Sulfur", ";", "element", "=", "\u2019", "n", "\u2019", "means", "Nitrogen", ",", "element", "=", "\u2018", "p", "\u2019", "means", "Phosphorus", ",", "element", "=", "\u2018", "na", "\u2019", "means", "Sodium", ",", "element", "=", "\u2018", "br", "\u2019", "means", "Bromine", ",", "element", "=", "\u2018", "f", "\u2019", "means", "Fluorine", ";", "element", "=", "\u2018", "i", "\u2019", "means", "Iodine", ";", "element", "=", "\u2018", "sn", "\u2019", "means", "Tin", ";", "element", "=", "\u2018", "pb", "\u2019", "means", "Lead", ";", "element", "=", "\u2018", "te", "\u2019", "means", "Tellurium", ";", "element", "=", "\u2018", "ca", "\u2019", "means", "Calcium"], "difficulty": "challenging", "templatized_domain_statements": ["'elements with triple bond' refers to bond.bond_type = '#'", "'Chlorine' refers to atom.element = 'cl'", "'Carbon' refers to atom.element = 'c'", "'Hydrogen' refers to atom.element = 'h'", "'Oxygen' refers to atom.element = 'o'", "'Sulfur' refers to atom.element = 's'", "'Nitrogen' refers to atom.element = 'n'", "'Phosphorus' refers to atom.element = 'p'", "'Sodium' refers to atom.element = 'na'", "'Bromine' refers to atom.element = 'br'", "'Fluorine' refers to atom.element = 'f'", "'Iodine' refers to atom.element = 'i'", "'Tin' refers to atom.element = 'sn'", "'Lead' refers to atom.element = 'pb'", "'Tellurium' refers to atom.element = 'te'", "'Calcium' refers to atom.element = 'ca'"]}, {"db_id": "toxicology", "question": "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.", "evidence": "hydrogen refers to element = 'h'; label = '+' mean molecules are carcinogenic; triple bond refers to bond_type = '#'; percentage = DIVIDE(SUM(label = '+'), COUNT(molecule_id)) * 100.0 where element = 'h' AND bond_type = '#';", "SQL": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h'", "question_toks": ["Calculate", "the", "percentage", "of", "carcinogenic", "molecules", "with", "triple", "bonded", "Hidrogen", "atoms", "."], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "T1.label", "=", "'+", "'", "THEN", "1", "ELSE", "0", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "DISTINCT", "T1.molecule_id", ")", "FROM", "molecule", "AS", "T1", "INNER", "JOIN", "atom", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "INNER", "JOIN", "bond", "AS", "T3", "ON", "T1.molecule_id", "=", "T3.molecule_id", "WHERE", "T3.bond_type", "=", "'", "#", "'", "AND", "T2.element", "=", "'", "h", "'"], "evidence_toks": ["hydrogen", "refers", "to", "element", "=", "'", "h", "'", ";", "label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";", "percentage", "=", "DIVIDE", "(", "SUM", "(", "label", "=", "'+", "'", ")", ",", "COUNT", "(", "molecule_id", ")", ")", "*", "100.0", "where", "element", "=", "'", "h", "'", "AND", "bond_type", "=", "'", "#", "'", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'hydrogen atoms' refers to atom.element = 'h'", "'carcinogenic molecules' refers to molecule.label = '+'", "'triple bonded atoms' refers to bond.bond_type = '#'", "'percentage of carcinogenic molecules' refers to CAST(SUM(CASE WHEN molecule.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT molecule.molecule_id)"]}, {"db_id": "toxicology", "question": "How many of the molecules are carcinogenic?", "evidence": "label = '+' mean molecules are carcinogenic;", "SQL": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'", "question_toks": ["How", "many", "of", "the", "molecules", "are", "carcinogenic", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T.molecule_id", ")", "FROM", "molecule", "AS", "T", "WHERE", "T.label", "=", "'+", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";"], "difficulty": "simple", "templatized_domain_statements": ["'molecules are carcinogenic' refers to molecule.label = '+'"]}, {"db_id": "toxicology", "question": "In the molecule TR008, how many carbons are present?", "evidence": "carbon refers to element = 'c'", "SQL": "SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.molecule_id = 'TR008' AND T.element = 'c'", "question_toks": ["In", "the", "molecule", "TR008", ",", "how", "many", "carbons", "are", "present", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T.atom_id", ")", "FROM", "atom", "AS", "T", "WHERE", "T.molecule_id", "=", "'TR008", "'", "AND", "T.element", "=", "'", "c", "'"], "evidence_toks": ["carbon", "refers", "to", "element", "=", "'", "c", "'"], "difficulty": "simple", "templatized_domain_statements": ["'carbon' refers to atom.element = 'c'"]}, {"db_id": "toxicology", "question": "in molecules with triple bonds, how many of them are not carcinogenic?", "evidence": "triple bond refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic", "SQL": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-'", "question_toks": ["in", "molecules", "with", "triple", "bonds", ",", "how", "many", "of", "them", "are", "not", "carcinogenic", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "T1.molecule_id", ")", "FROM", "molecule", "AS", "T1", "INNER", "JOIN", "bond", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T2.bond_type", "=", "'", "#", "'", "AND", "T1.label", "=", "'-", "'"], "evidence_toks": ["triple", "bond", "refers", "to", "bond_type", "=", "'", "#", "'", ";", "label", "=", "'-", "'", "means", "molecules", "are", "non-carcinogenic"], "difficulty": "simple", "templatized_domain_statements": ["'molecules with triple bonds' refers to bond.bond_type = '#'", "'not carcinogenic' refers to molecule.label = '-'"]}, {"db_id": "toxicology", "question": "What is the atom ID of double bonded carbon in TR012 molecule?", "evidence": "carbon refers to element = 'c'; double bond refers to bond_type = ' = ';", "SQL": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.molecule_id = 'TR012' AND T3.bond_type = '=' AND T1.element = 'c'", "question_toks": ["What", "is", "the", "atom", "ID", "of", "double", "bonded", "carbon", "in", "TR012", "molecule", "?"], "SQL_toks": ["SELECT", "T1.atom_id", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "INNER", "JOIN", "bond", "AS", "T3", "ON", "T2.molecule_id", "=", "T3.molecule_id", "WHERE", "T2.molecule_id", "=", "'TR012", "'", "AND", "T3.bond_type", "=", "'=", "'", "AND", "T1.element", "=", "'", "c", "'"], "evidence_toks": ["carbon", "refers", "to", "element", "=", "'", "c", "'", ";", "double", "bond", "refers", "to", "bond_type", "=", "'", "=", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'carbon' refers to atom.element = 'c'", "'double bonded' refers to bond.bond_type = '='"]}, {"db_id": "toxicology", "question": "List the atom ID of the carcinogenic molecule that contains oxygen?", "evidence": "label = '+' mean molecules are carcinogenic; oxygen refers to element = 'o'", "SQL": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'o' AND T2.label = '+'", "question_toks": ["List", "the", "atom", "ID", "of", "the", "carcinogenic", "molecule", "that", "contains", "oxygen", "?"], "SQL_toks": ["SELECT", "T1.atom_id", "FROM", "atom", "AS", "T1", "INNER", "JOIN", "molecule", "AS", "T2", "ON", "T1.molecule_id", "=", "T2.molecule_id", "WHERE", "T1.element", "=", "'", "o", "'", "AND", "T2.label", "=", "'+", "'"], "evidence_toks": ["label", "=", "'+", "'", "mean", "molecules", "are", "carcinogenic", ";", "oxygen", "refers", "to", "element", "=", "'", "o", "'"], "difficulty": "simple", "templatized_domain_statements": ["'carcinogenic molecule' refers to molecule.label = '+'", "'oxygen' refers to atom.element = 'o'"]}]