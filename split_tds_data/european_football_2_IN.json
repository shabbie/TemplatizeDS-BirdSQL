[{"db_id": "european_football_2", "question": "What is the height of the tallest player? Indicate his name.", "evidence": "tallest player refers to MAX(height);", "SQL": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1", "question_toks": ["What", "is", "the", "height", "of", "the", "tallest", "player", "?", "Indicate", "his", "name", "."], "SQL_toks": ["SELECT", "player_name", "FROM", "Player", "ORDER", "BY", "height", "DESC", "LIMIT", "1"], "evidence_toks": ["tallest", "player", "refers", "to", "MAX", "(", "height", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'percentage of players that who have an overall strength of more than {100}' refers to CAST(COUNT(CASE WHEN Player_Attributes.overall_rating > 100 THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(Player.id)"]}, {"db_id": "european_football_2", "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.", "evidence": "perform better in crossing actions refers to MAX(crossing); player id refers to player_fifa_api_id;", "SQL": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5", "question_toks": ["Who", "are", "the", "top", "5", "players", "who", "perform", "better", "in", "crossing", "actions", "?", "Indicate", "their", "player", "id", "."], "SQL_toks": ["SELECT", "id", "FROM", "Player_Attributes", "ORDER", "BY", "crossing", "DESC", "LIMIT", "5"], "evidence_toks": ["perform", "better", "in", "crossing", "actions", "refers", "to", "MAX", "(", "crossing", ")", ";", "player", "id", "refers", "to", "player_fifa_api_id", ";"], "difficulty": "simple", "templatized_domain_statements": ["'height of the tallest player' refers to ORDER BY Player.height DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Which home team had lost the fewest matches in the 2016 season?", "evidence": "home team that had lost the fewest matches refers to MIN(SUBTRACT(home_team_goal, away_team_goal)); 2016 season refers to season = '2015/2016';", "SQL": "SELECT t2.name FROM Match AS t1 INNER JOIN League AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' AND t1.home_team_goal - t1.away_team_goal < 0 ORDER BY t1.home_team_goal - t1.away_team_goal DESC LIMIT 1", "question_toks": ["Which", "home", "team", "had", "lost", "the", "fewest", "matches", "in", "the", "2016", "season", "?"], "SQL_toks": ["SELECT", "t2.name", "FROM", "Match", "AS", "t1", "INNER", "JOIN", "League", "AS", "t2", "ON", "t1.league_id", "=", "t2.id", "WHERE", "t1.season", "=", "'2015/2016", "'", "AND", "t1.home_team_goal", "-", "t1.away_team_goal", "<", "0", "ORDER", "BY", "t1.home_team_goal", "-", "t1.away_team_goal", "DESC", "LIMIT", "1"], "evidence_toks": ["home", "team", "that", "had", "lost", "the", "fewest", "matches", "refers", "to", "MIN", "(", "SUBTRACT", "(", "home_team_goal", ",", "away_team_goal", ")", ")", ";", "2016", "season", "refers", "to", "season", "=", "'2015/2016", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'highest overall rating' refers to ORDER BY Player_Attributes.overall_rating DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Which League had the most matches end as draw in the 2016 season?", "evidence": "most matches end as draw refers to MAX(SUM(home_team_goal = away_team_goal)); 2016 season refers to season = '2015/2016';", "SQL": "SELECT t2.name, COUNT(t1.id) FROM Match AS t1 INNER JOIN League AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' AND t1.home_team_goal = t1.away_team_goal GROUP BY t2.name ORDER BY COUNT(t1.id) DESC LIMIT 1", "question_toks": ["Which", "League", "had", "the", "most", "matches", "end", "as", "draw", "in", "the", "2016", "season", "?"], "SQL_toks": ["SELECT", "t2.name", ",", "COUNT", "(", "t1.id", ")", "FROM", "Match", "AS", "t1", "INNER", "JOIN", "League", "AS", "t2", "ON", "t1.league_id", "=", "t2.id", "WHERE", "t1.season", "=", "'2015/2016", "'", "AND", "t1.home_team_goal", "=", "t1.away_team_goal", "GROUP", "BY", "t2.name", "ORDER", "BY", "COUNT", "(", "t1.id", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["most", "matches", "end", "as", "draw", "refers", "to", "MAX", "(", "SUM", "(", "home_team_goal", "=", "away_team_goal", ")", ")", ";", "2016", "season", "refers", "to", "season", "=", "'2015/2016", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'home team that had lost the fewest matches' refers to Match.home_team_goal - Match.away_team_goal < 0 ORDER BY Match.home_team_goal - Match.away_team_goal DESC LIMIT 1", "'the 2016 season' refers to Match.season = '2015/2016'"]}, {"db_id": "european_football_2", "question": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.", "evidence": "players age at present = SUBTRACT((DATETIME(), birthday)); sprint_speed > = 97; between 2013 to 2015 refers to date > = '2013-01-01 00:00:00' AND date < = '2015-12-31 00:00:00';", "SQL": "SELECT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.`date`, 1, 10) BETWEEN '2013-01-01' AND '2015-12-31' AND t1.sprint_speed >= 97", "question_toks": ["At", "present", ",", "calculate", "for", "the", "player", "'s", "age", "who", "have", "a", "sprint", "speed", "of", "no", "less", "than", "97", "between", "2013", "to", "2015", "."], "SQL_toks": ["SELECT", "DATETIME", "(", ")", "-", "T2.birthday", "age", "FROM", "Player_Attributes", "AS", "t1", "INNER", "JOIN", "Player", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "SUBSTR", "(", "t1.", "`", "date", "`", ",", "1", ",", "10", ")", "BETWEEN", "'2013-01-01", "'", "AND", "'2015-12-31", "'", "AND", "t1.sprint_speed", ">", "=", "97"], "evidence_toks": ["players", "age", "at", "present", "=", "SUBTRACT", "(", "(", "DATETIME", "(", ")", ",", "birthday", ")", ")", ";", "sprint_speed", ">", "=", "97", ";", "between", "2013", "to", "2015", "refers", "to", "date", ">", "=", "'2013-01-01", "00:00:00", "'", "AND", "date", "<", "=", "'2015-12-31", "00:00:00", "'", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'Scotland Premier League' refers to League.name = 'Scotland Premier League'", "'which away team' refers to Match.away_team_api_id", "'away team won the most' refers to Match.away_team_goal - Match.home_team_goal > 0 ORDER BY Match.away_team_goal - Match.home_team_goal DESC LIMIT 1", "'2010 season' refers to Match.season = '2009/2010'"]}, {"db_id": "european_football_2", "question": "Give the name of the league with the highest matches of all time and how many matches were played in the said league.", "evidence": "name of the league refers to League.name; league with highest matches of all time refers to MAX(COUNT(league_id));", "SQL": "SELECT t2.name, COUNT(t1.id) FROM Match AS t1 INNER JOIN League AS t2 ON t1.league_id = t2.id GROUP BY t2.name ORDER BY COUNT(t1.id) DESC LIMIT 1", "question_toks": ["Give", "the", "name", "of", "the", "league", "with", "the", "highest", "matches", "of", "all", "time", "and", "how", "many", "matches", "were", "played", "in", "the", "said", "league", "."], "SQL_toks": ["SELECT", "t2.name", ",", "COUNT", "(", "t1.id", ")", "FROM", "Match", "AS", "t1", "INNER", "JOIN", "League", "AS", "t2", "ON", "t1.league_id", "=", "t2.id", "GROUP", "BY", "t2.name", "ORDER", "BY", "COUNT", "(", "t1.id", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["name", "of", "the", "league", "refers", "to", "League.name", ";", "league", "with", "highest", "matches", "of", "all", "time", "refers", "to", "MAX", "(", "COUNT", "(", "league_id", ")", ")", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'The speed in which attacks are put together' refers to Team_Attributes.buildUpPlaySpeed.", "top 4 teams with the highest build up play speed refers to ORDER BY Team_Attributes.buildUpPlayDribbling ASC LIMIT 4", "'whose tendency/ frequency of dribbling is little' refers to Team_Attributes.buildUpPlayDribblingClass = 'Little'"]}, {"db_id": "european_football_2", "question": "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.", "evidence": "teams with more than 50 but less than 60 build-up play speed refers to buildUpPlaySpeed BETWEEN 51 AND 59;", "SQL": "SELECT DISTINCT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60", "question_toks": ["Give", "the", "team_fifa_api_id", "of", "teams", "with", "more", "than", "50", "but", "less", "than", "60", "build-up", "play", "speed", "."], "SQL_toks": ["SELECT", "DISTINCT", "team_fifa_api_id", "FROM", "Team_Attributes", "WHERE", "buildUpPlaySpeed", ">", "50", "AND", "buildUpPlaySpeed", "<", "60"], "evidence_toks": ["teams", "with", "more", "than", "50", "but", "less", "than", "60", "build-up", "play", "speed", "refers", "to", "buildUpPlaySpeed", "BETWEEN", "51", "AND", "59", ";"], "difficulty": "simple", "templatized_domain_statements": ["'player's age at present' refers to DATETIME() - Player.birthday", "'sprint speed of no less than {100}' to Player_Attributes.sprint_speed >= 100", "'year between {100} to {100}' refers to SUBSTR(Player_Attributes.`date`, 1, 10) BETWEEN '100-01-01' AND '100-12-31'"]}, {"db_id": "european_football_2", "question": "List the long name of teams with above-average build-up play passing in 2012.", "evidence": "long name of teams refers to team_long_name; build-up play passing refers to buildUpPlayPassing; above-average build-up play passing = DIVIDE(SUM(buildUpPlayPassing), COUNT(team_long_name) WHERE buildUpPlayPassing IS NOT NULL) < buildUpPlayPassing; in 2012 refers to strftime('%Y', date) = '2012';", "SQL": "SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2013' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE SUBSTR(t2.`date`, 1, 4) = '2013' )", "question_toks": ["List", "the", "long", "name", "of", "teams", "with", "above-average", "build-up", "play", "passing", "in", "2012", "."], "SQL_toks": ["SELECT", "DISTINCT", "t4.team_long_name", "FROM", "Team_Attributes", "AS", "t3", "INNER", "JOIN", "Team", "AS", "t4", "ON", "t3.team_api_id", "=", "t4.team_api_id", "WHERE", "SUBSTR", "(", "t3.", "`", "date", "`", ",", "1", ",", "4", ")", "=", "'2013", "'", "AND", "t3.buildUpPlayPassing", ">", "(", "SELECT", "CAST", "(", "SUM", "(", "t2.buildUpPlayPassing", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t1.id", ")", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "4", ")", "=", "'2013", "'", ")"], "evidence_toks": ["long", "name", "of", "teams", "refers", "to", "team_long_name", ";", "build-up", "play", "passing", "refers", "to", "buildUpPlayPassing", ";", "above-average", "build-up", "play", "passing", "=", "DIVIDE", "(", "SUM", "(", "buildUpPlayPassing", ")", ",", "COUNT", "(", "team_long_name", ")", "WHERE", "buildUpPlayPassing", "IS", "NOT", "NULL", ")", "<", "buildUpPlayPassing", ";", "in", "2012", "refers", "to", "strftime", "(", "'", "%", "Y", "'", ",", "date", ")", "=", "'2012", "'", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'the name of the league' refers to League.name", "'league with highest matches of all time' refers to ORDER BY COUNT(Match.id) DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.", "evidence": "players who prefer left foot refers to preferred_foot = 'left'; percentage of players who prefer left foot = DIVIDE(MULTIPLY((SUM(preferred_foot = 'left'), 1.0)), COUNT(player_fifa_api_id)); born between 1987 and 1992 refers to birthday BETWEEN '1987-01-01 00:00:00'AND '1992-12-31 00:00:00';", "SQL": "SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday, 1, 4) BETWEEN '1987' AND '1992'", "question_toks": ["Calculate", "the", "percentage", "of", "players", "who", "prefer", "left", "foot", ",", "who", "were", "born", "between", "1987", "and", "1992", "."], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "t2.preferred_foot", "=", "'left", "'", "THEN", "t1.id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "t1.id", ")", "percent", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "SUBSTR", "(", "t1.birthday", ",", "1", ",", "4", ")", "BETWEEN", "'1987", "'", "AND", "'1992", "'"], "evidence_toks": ["players", "who", "prefer", "left", "foot", "refers", "to", "preferred_foot", "=", "'left", "'", ";", "percentage", "of", "players", "who", "prefer", "left", "foot", "=", "DIVIDE", "(", "MULTIPLY", "(", "(", "SUM", "(", "preferred_foot", "=", "'left", "'", ")", ",", "1.0", ")", ")", ",", "COUNT", "(", "player_fifa_api_id", ")", ")", ";", "born", "between", "1987", "and", "1992", "refers", "to", "birthday", "BETWEEN", "'1987-01-01", "00:00:00'AND", "'1992-12-31", "00:00:00", "'", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'average height of players' refers to SUM(Player.height) / COUNT(Player.id)", "'players born between the year {1000} and {1000}' refers to SUBSTR(Player.birthday, 1, 4) BETWEEN '1000' AND '1000'"]}, {"db_id": "european_football_2", "question": "List the top 10 players' names whose heights are below 180 and above 180 in descending order of average heading accuracy.", "evidence": "height > 180 OR height < 180; average heading accuracy = DIVIDE(SUM(heading_accuracy), COUNT(player_fifa_api_id));", "SQL": "SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height != 180 GROUP BY t1.id ORDER BY CAST(SUM(t2.heading_accuracy) AS REAL) / COUNT(t2.`date`) DESC LIMIT 10", "question_toks": ["List", "the", "top", "10", "players", "'", "names", "whose", "heights", "are", "below", "180", "and", "above", "180", "in", "descending", "order", "of", "average", "heading", "accuracy", "."], "SQL_toks": ["SELECT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.height", "!", "=", "180", "GROUP", "BY", "t1.id", "ORDER", "BY", "CAST", "(", "SUM", "(", "t2.heading_accuracy", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t2.", "`", "date", "`", ")", "DESC", "LIMIT", "10"], "evidence_toks": ["height", ">", "180", "OR", "height", "<", "180", ";", "average", "heading", "accuracy", "=", "DIVIDE", "(", "SUM", "(", "heading_accuracy", ")", ",", "COUNT", "(", "player_fifa_api_id", ")", ")", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'teams with more than {100} but less than {100} build-up play speed' refers to Team_Attributes.buildUpPlaySpeed BETWEEN 100 AND 100"]}, {"db_id": "european_football_2", "question": "List the football players with a birthyear of 1970 and a birthmonth of October.", "evidence": "players with a birthyear of 1970 and a birthmonth of October refers to substr(birthday,1,4) AS year, substr(birthday,6,2) AS month WHERE year = '1970' AND month = '10';", "SQL": "SELECT player_name FROM Player WHERE SUBSTR(birthday, 1, 7) = '1970-10'", "question_toks": ["List", "the", "football", "players", "with", "a", "birthyear", "of", "1970", "and", "a", "birthmonth", "of", "October", "."], "SQL_toks": ["SELECT", "player_name", "FROM", "Player", "WHERE", "SUBSTR", "(", "birthday", ",", "1", ",", "7", ")", "=", "'1970-10", "'"], "evidence_toks": ["players", "with", "a", "birthyear", "of", "1970", "and", "a", "birthmonth", "of", "October", "refers", "to", "substr", "(", "birthday,1,4", ")", "AS", "year", ",", "substr", "(", "birthday,6,2", ")", "AS", "month", "WHERE", "year", "=", "'1970", "'", "AND", "month", "=", "'10", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'List the long name of teams' to Team.team_long_name", "'build-up play passing' refers to Team_Attributes.buildUpPlayPassing ", "'average build-up play passing' refers to CAST(SUM(Team_Attributes.buildUpPlayPassing) AS REAL) / COUNT(Team.id)", "'in year {1000}' refers to SUBSTR(Team_Attributes.`date`, 1, 4) = '1000'"]}, {"db_id": "european_football_2", "question": "What is the ADO Den Haag team freedom of movement in the 1st two thirds of the pitch?", "evidence": "ADO Den Haag refers to team_long_name = 'ADO Den Haag'; freedom of movement in the 1st two thirds of the pitch refers to buildUpPlayPositioningClass;", "SQL": "SELECT DISTINCT t2.buildUpPlayPositioningClass FROM Team AS t1 INNER JOIN Team_attributes AS t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id WHERE t1.team_long_name = 'ADO Den Haag'", "question_toks": ["What", "is", "the", "ADO", "Den", "Haag", "team", "freedom", "of", "movement", "in", "the", "1st", "two", "thirds", "of", "the", "pitch", "?"], "SQL_toks": ["SELECT", "DISTINCT", "t2.buildUpPlayPositioningClass", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_attributes", "AS", "t2", "ON", "t1.team_fifa_api_id", "=", "t2.team_fifa_api_id", "WHERE", "t1.team_long_name", "=", "'ADO", "Den", "Haag", "'"], "evidence_toks": ["ADO", "Den", "Haag", "refers", "to", "team_long_name", "=", "'ADO", "Den", "Haag", "'", ";", "freedom", "of", "movement", "in", "the", "1st", "two", "thirds", "of", "the", "pitch", "refers", "to", "buildUpPlayPositioningClass", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'number of goals made in all seasons combined' refers to SUM(Match.home_team_goal) + SUM(Match.away_team_goal)"]}, {"db_id": "european_football_2", "question": "What is the football player Francois Affolter header's finishing rate on 18/09/2014?", "evidence": "header's finishing rate refers to heading_accuracy; on 18/09/2014 refers to date = '2014-09-18 00:00:00';", "SQL": "SELECT t2.heading_accuracy FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Francois Affolter' AND SUBSTR(t2.`date`, 1, 10) = '2014-09-18'", "question_toks": ["What", "is", "the", "football", "player", "Francois", "Affolter", "header", "'s", "finishing", "rate", "on", "18/09/2014", "?"], "SQL_toks": ["SELECT", "t2.heading_accuracy", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Francois", "Affolter", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2014-09-18", "'"], "evidence_toks": ["header", "'s", "finishing", "rate", "refers", "to", "heading_accuracy", ";", "on", "18/09/2014", "refers", "to", "date", "=", "'2014-09-18", "00:00:00", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'normal build-up play dribbling class' refers to Team_Attributes.buildUpPlayDribblingClass = 'normal'", "'in year {1000}' refers to SUBSTR(Team_Attributes.`date`, 1, 4) = '1000' AND Team_Attributes.`date` <= '1000-01-31 00:00:00' )", "'List the names of the teams' refers to Team.team_long_name", "'less than average chance creation passing' refers to Team_Attributes.chanceCreationPassing < ( SELECT CAST(SUM(Team_Attributes.chanceCreationPassing) AS REAL) / COUNT(Team.id)"]}, {"db_id": "european_football_2", "question": "What is the overall rating of the football player Gabriel Tamas in year 2011?", "evidence": "in year 2011 refers to strftime('%Y', date) = '2011';", "SQL": "SELECT t2.overall_rating FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Gabriel Tamas' AND SUBSTR(t2.`date`, 1, 4) = '2011'", "question_toks": ["What", "is", "the", "overall", "rating", "of", "the", "football", "player", "Gabriel", "Tamas", "in", "year", "2011", "?"], "SQL_toks": ["SELECT", "t2.overall_rating", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Gabriel", "Tamas", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "4", ")", "=", "'2011", "'"], "evidence_toks": ["in", "year", "2011", "refers", "to", "strftime", "(", "'", "%", "Y", "'", ",", "date", ")", "=", "'2011", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["name of league refers to League.name", "'average goals by the home team is higher than the away team' refers to CAST(SUM(Match.home_team_goal) AS REAL) / COUNT(DISTINCT Match.id)) - (CAST(SUM(Match.away_team_goal) AS REAL) / COUNT(DISTINCT Match.id)) > 0"]}, {"db_id": "european_football_2", "question": "What is the preferred foot when attacking of the youngest football player?", "evidence": "preferred foot when attacking refers to preferred_foot; youngest football player refers to latest birthday;", "SQL": "SELECT t2.preferred_foot FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t1.birthday ASC LIMIT 1", "question_toks": ["What", "is", "the", "preferred", "foot", "when", "attacking", "of", "the", "youngest", "football", "player", "?"], "SQL_toks": ["SELECT", "t2.preferred_foot", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "ORDER", "BY", "t1.birthday", "ASC", "LIMIT", "1"], "evidence_toks": ["preferred", "foot", "when", "attacking", "refers", "to", "preferred_foot", ";", "youngest", "football", "player", "refers", "to", "latest", "birthday", ";"], "difficulty": "simple", "templatized_domain_statements": ["ADO Den Haag refers to Team.team_long_name = 'ADO Den Haag'", "'freedom of movement in the 1st two thirds of the pitch' refers to Team_attributes.buildUpPlayPositioningClass"]}, {"db_id": "european_football_2", "question": "List all the football player with the highest potential score.", "evidence": "potential score refers to potential; highest potential score refers to MAX(potential);", "SQL": "SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t2.potential DESC LIMIT 1", "question_toks": ["List", "all", "the", "football", "player", "with", "the", "highest", "potential", "score", "."], "SQL_toks": ["SELECT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "ORDER", "BY", "t2.potential", "DESC", "LIMIT", "1"], "evidence_toks": ["potential", "score", "refers", "to", "potential", ";", "highest", "potential", "score", "refers", "to", "MAX", "(", "potential", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'football player header's finishing rate' refers to Player_Attributes.heading_accuracy", "'on 100/100/100' refers to SUBSTR(Player_Attributes.`date`, 1, 10) = '100-100-100'"]}, {"db_id": "european_football_2", "question": "Among all the players whose weight is under 130, how many of them preferred foot in attacking is left?", "evidence": "weight < 130; preferred foot in attacking refers to preferred_foot; preferred_foot = 'left';", "SQL": "SELECT COUNT(DISTINCT t1.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.weight < 130 AND t2.preferred_foot = 'left'", "question_toks": ["Among", "all", "the", "players", "whose", "weight", "is", "under", "130", ",", "how", "many", "of", "them", "preferred", "foot", "in", "attacking", "is", "left", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.id", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.weight", "<", "130", "AND", "t2.preferred_foot", "=", "'left", "'"], "evidence_toks": ["weight", "<", "130", ";", "preferred", "foot", "in", "attacking", "refers", "to", "preferred_foot", ";", "preferred_foot", "=", "'left", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'overall rating of the football player' refers to Player_Attributes.overall_rating"]}, {"db_id": "european_football_2", "question": "What is the defensive work rate of the football player David Wilson\n?", "evidence": "", "SQL": "SELECT DISTINCT t2.defensive_work_rate FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'David Wilson'", "question_toks": ["What", "is", "the", "defensive", "work", "rate", "of", "the", "football", "player", "David", "Wilson", "?"], "SQL_toks": ["SELECT", "DISTINCT", "t2.defensive_work_rate", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'David", "Wilson", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'football player' refers to ORDER BY Player_Attributes.player_name", "'highest potential score' refers to ORDER BY Player_Attributes.potential DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Calculate the average home team goal in the 2010/2011 season in the country of Poland.", "evidence": "average home team goal = AVG(home_team_goal) WHERE name = 'Poland' and season = '2010/2011';", "SQL": "SELECT CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(t2.id) FROM Country AS t1 INNER JOIN Match AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Poland' AND t2.season = '2010/2011'", "question_toks": ["Calculate", "the", "average", "home", "team", "goal", "in", "the", "2010/2011", "season", "in", "the", "country", "of", "Poland", "."], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "t2.home_team_goal", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t2.id", ")", "FROM", "Country", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.country_id", "WHERE", "t1.name", "=", "'Poland", "'", "AND", "t2.season", "=", "'2010/2011", "'"], "evidence_toks": ["average", "home", "team", "goal", "=", "AVG", "(", "home_team_goal", ")", "WHERE", "name", "=", "'Poland", "'", "and", "season", "=", "'2010/2011", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'chance creation passing class of Risky' refers to t2.chanceCreationPassingClass = 'Risky'", "'football teams short name only' refers to DISTINCT Team.team_short_name"]}, {"db_id": "european_football_2", "question": "Who has the highest average finishing rate between the highest and shortest football player?", "evidence": "finishing rate refers to finishing; highest average finishing rate = MAX(AVG(finishing)); highest football player refers to MAX(height); shortest football player refers to MIN(height);", "SQL": "SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing) result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER BY result DESC LIMIT 1", "question_toks": ["Who", "has", "the", "highest", "average", "finishing", "rate", "between", "the", "highest", "and", "shortest", "football", "player", "?"], "SQL_toks": ["SELECT", "A", "FROM", "(", "SELECT", "AVG", "(", "finishing", ")", "result", ",", "'Max", "'", "A", "FROM", "Player", "AS", "T1", "INNER", "JOIN", "Player_Attributes", "AS", "T2", "ON", "T1.player_api_id", "=", "T2.player_api_id", "WHERE", "T1.height", "=", "(", "SELECT", "MAX", "(", "height", ")", "FROM", "Player", ")", "UNION", "SELECT", "AVG", "(", "finishing", ")", "result", ",", "'Min", "'", "A", "FROM", "Player", "AS", "T1", "INNER", "JOIN", "Player_Attributes", "AS", "T2", "ON", "T1.player_api_id", "=", "T2.player_api_id", "WHERE", "T1.height", "=", "(", "SELECT", "MIN", "(", "height", ")", "FROM", "Player", ")", ")", "ORDER", "BY", "result", "DESC", "LIMIT", "1"], "evidence_toks": ["finishing", "rate", "refers", "to", "finishing", ";", "highest", "average", "finishing", "rate", "=", "MAX", "(", "AVG", "(", "finishing", ")", ")", ";", "highest", "football", "player", "refers", "to", "MAX", "(", "height", ")", ";", "shortest", "football", "player", "refers", "to", "MIN", "(", "height", ")", ";"], "difficulty": "challenging", "templatized_domain_statements": []}, {"db_id": "european_football_2", "question": "Please list player names which are higher than 180.", "evidence": "height>180;", "SQL": "SELECT player_name FROM Player WHERE height > 180", "question_toks": ["Please", "list", "player", "names", "which", "are", "higher", "than", "180", "."], "SQL_toks": ["SELECT", "player_name", "FROM", "Player", "WHERE", "height", ">", "180"], "evidence_toks": ["height", ">", "180", ";"], "difficulty": "simple", "templatized_domain_statements": ["'football league in the country' refers to League.name"]}, {"db_id": "european_football_2", "question": "How many players were born after 1990?", "evidence": "born after 1990 refers to strftime('%Y', birthday) = '1990';", "SQL": "SELECT COUNT(id) FROM Player WHERE birthday < '1990'", "question_toks": ["How", "many", "players", "were", "born", "after", "1990", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "id", ")", "FROM", "Player", "WHERE", "birthday", "<", "'1990", "'"], "evidence_toks": ["born", "after", "1990", "refers", "to", "strftime", "(", "'", "%", "Y", "'", ",", "birthday", ")", "=", "'1990", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'finishing rate' refers to Player_Attributes.finishing", "'highest average finishing rate' refers to ORDER BY AVG(Player.finishing) DESC LIMIT 1", "'highest football player' refers to MAX(Player.height)", "'shortest football player' refers to MIN(Player.height)"]}, {"db_id": "european_football_2", "question": "How many players whose first names are Adam and weigh more than 170?", "evidence": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';", "SQL": "SELECT COUNT(id) FROM Player WHERE weight > 170 AND player_name LIKE 'Adam%'", "question_toks": ["How", "many", "players", "whose", "first", "names", "are", "Adam", "and", "weigh", "more", "than", "170", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "id", ")", "FROM", "Player", "WHERE", "weight", ">", "170", "AND", "player_name", "LIKE", "'Adam", "%", "'"], "evidence_toks": ["team", "names", "refers", "to", "team_long_name", ";", "speed", "class", "refers", "to", "buildUpPlaySpeedClass", ";", "buildUpPlaySpeedClass", "=", "'Fast", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'higher than {100}' refers to Player.height > 100"]}, {"db_id": "european_football_2", "question": "What is Aaron Doran's potential score?", "evidence": "potential score refers to potential;", "SQL": "SELECT t2.potential FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Aaron Doran'", "question_toks": ["What", "is", "Aaron", "Doran", "'s", "potential", "score", "?"], "SQL_toks": ["SELECT", "t2.potential", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Aaron", "Doran", "'"], "evidence_toks": ["potential", "score", "refers", "to", "potential", ";"], "difficulty": "simple", "templatized_domain_statements": ["'overall rating of over {100}' refers to Player_Attributes.overall_rating > 80", "'from year {1000} to {1000}' refers to SUBSTR(Player_Attributes.`date`, 1, 4) BETWEEN '1000' AND '1000'"]}, {"db_id": "european_football_2", "question": "List out of players whose preferred foot is left.", "evidence": "preferred_foot = 'left';", "SQL": "SELECT DISTINCT t1.id, t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.preferred_foot = 'left'", "question_toks": ["List", "out", "of", "players", "whose", "preferred", "foot", "is", "left", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.id", ",", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t2.preferred_foot", "=", "'left", "'"], "evidence_toks": ["preferred_foot", "=", "'left", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'build up play passing' refers to Team_Attributes.buildUpPlayPassing", "'build up play passing more than {100}' refers to Team_Attributes.buildUpPlayPassing > 100", "'list their short names' refers to Team.team_short_name"]}, {"db_id": "european_football_2", "question": "From 2010 to 2015, what was the average overall rating of players who are higher than 170?", "evidence": "from 2010 to 2015 refers to strftime('%Y', date) BETWEEN '2010' AND '2015'; height > 170;", "SQL": "SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 170 AND SUBSTR(t2.`date`, 1, 4) BETWEEN '2010' AND '2015'", "question_toks": ["From", "2010", "to", "2015", ",", "what", "was", "the", "average", "overall", "rating", "of", "players", "who", "are", "higher", "than", "170", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "t2.overall_rating", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t2.id", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.height", ">", "170", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "4", ")", "BETWEEN", "'2010", "'", "AND", "'2015", "'"], "evidence_toks": ["from", "2010", "to", "2015", "refers", "to", "strftime", "(", "'", "%", "Y", "'", ",", "date", ")", "BETWEEN", "'2010", "'", "AND", "'2015", "'", ";", "height", ">", "170", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'From {1000} to {1000}' refers to SUBSTR(Player_Attributes.`date`, 1, 4) BETWEEN '1000' AND '1000'", "'who are higher than {100}' refers to Player.height > 100"]}, {"db_id": "european_football_2", "question": "Which country is the league Italy Serie A from?", "evidence": "Italy Serie A from refers to League.name = 'Italy Serie A';", "SQL": "SELECT t1.name FROM Country AS t1 INNER JOIN League AS t2 ON t1.id = t2.country_id WHERE t2.name = 'Italy Serie A'", "question_toks": ["Which", "country", "is", "the", "league", "Italy", "Serie", "A", "from", "?"], "SQL_toks": ["SELECT", "t1.name", "FROM", "Country", "AS", "t1", "INNER", "JOIN", "League", "AS", "t2", "ON", "t1.id", "=", "t2.country_id", "WHERE", "t2.name", "=", "'Italy", "Serie", "A", "'"], "evidence_toks": ["Italy", "Serie", "A", "from", "refers", "to", "League.name", "=", "'Italy", "Serie", "A", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'shortest height' refers to ORDER BY height ASC LIMIT 1"]}, {"db_id": "european_football_2", "question": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.", "evidence": "build up play speed refers to buildUpPlaySpeed; buildUpPlaySpeed = 31; build up play dribbling refers to buildUpPlayDribbling; buildUpPlayDribbling = 53; build up play passing refers to buildUpPlayPassing; buildUpPlayPassing = 32; short name of the team refers to team_short_name;", "SQL": "SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32", "question_toks": ["List", "the", "football", "team", "that", "has", "a", "build", "up", "play", "speed", "of", "31", ",", "build", "up", "plan", "dribbling", "of", "53", ",", "and", "build", "up", "play", "passing", "of", "32", ".", "Only", "indicate", "the", "short", "name", "of", "the", "team", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.team_short_name", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t2.buildUpPlaySpeed", "=", "31", "AND", "t2.buildUpPlayDribbling", "=", "53", "AND", "t2.buildUpPlayPassing", "=", "32"], "evidence_toks": ["build", "up", "play", "speed", "refers", "to", "buildUpPlaySpeed", ";", "buildUpPlaySpeed", "=", "31", ";", "build", "up", "play", "dribbling", "refers", "to", "buildUpPlayDribbling", ";", "buildUpPlayDribbling", "=", "53", ";", "build", "up", "play", "passing", "refers", "to", "buildUpPlayPassing", ";", "buildUpPlayPassing", "=", "32", ";", "short", "name", "of", "the", "team", "refers", "to", "team_short_name", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'Italy Serie A' refers to League.name = 'Italy Serie A'"]}, {"db_id": "european_football_2", "question": "What is the average overall rating of the football player Aaron Doran?", "evidence": "average overall rating = AVG(overall_rating);", "SQL": "SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Aaron Doran'", "question_toks": ["What", "is", "the", "average", "overall", "rating", "of", "the", "football", "player", "Aaron", "Doran", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "t2.overall_rating", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t2.id", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Aaron", "Doran", "'"], "evidence_toks": ["average", "overall", "rating", "=", "AVG", "(", "overall_rating", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'has a build up play speed of {100}' refers to Team_Attributes.buildUpPlaySpeed = 100", "'has a build up play dribbling of {100}' refers to Team_Attributes.buildUpPlayDribbling = 100", "'has a build up play passing of {100}' refers to Team_Attributes.buildUpPlayPassing = 100", "'indicate the short name of the team' refers to Team.team_short_name"]}, {"db_id": "european_football_2", "question": "How many matches were held in the league Germany 1. Bundesliga\nfrom August to October 2008?", "evidence": "Germany 1. Bundesliga refers to League.name = 'Germany 1. Bundesliga'; from August to October 2008 refers to strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';", "SQL": "SELECT COUNT(t2.id) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Germany 1. Bundesliga' AND SUBSTR(t2.`date`, 1, 7) BETWEEN '2008-08' AND '2008-10'", "question_toks": ["How", "many", "matches", "were", "held", "in", "the", "league", "Germany", "1", ".", "Bundesliga", "from", "August", "to", "October", "2008", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "t2.id", ")", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "WHERE", "t1.name", "=", "'Germany", "1", ".", "Bundesliga", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "7", ")", "BETWEEN", "'2008-08", "'", "AND", "'2008-10", "'"], "evidence_toks": ["Germany", "1", ".", "Bundesliga", "refers", "to", "League.name", "=", "'Germany", "1", ".", "Bundesliga", "'", ";", "from", "August", "to", "October", "2008", "refers", "to", "strftime", "(", "'", "%", "Y-", "%", "m", "'", ",", "date", ")", "BETWEEN", "'2008-08", "'", "AND", "'2008-10", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'short name of the football team' refers to Team.team_short_name", "'team that had a home team goal of {100}' refers to Match.home_team_goal = 100"]}, {"db_id": "european_football_2", "question": "List all the football player with the highest balance score and potential score of 61.", "evidence": "balance score refers to balance; highest balance score refers to MAX(balance); potential score refers to potential; potential = 61;", "SQL": "SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.potential = '61' ORDER BY t2.balance DESC LIMIT 1", "question_toks": ["List", "all", "the", "football", "player", "with", "the", "highest", "balance", "score", "and", "potential", "score", "of", "61", "."], "SQL_toks": ["SELECT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t2.potential", "=", "'61", "'", "ORDER", "BY", "t2.balance", "DESC", "LIMIT", "1"], "evidence_toks": ["balance", "score", "refers", "to", "balance", ";", "highest", "balance", "score", "refers", "to", "MAX", "(", "balance", ")", ";", "potential", "score", "refers", "to", "potential", ";", "potential", "=", "61", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'average ball control score of Aaron Meijers' refers to CAST(SUM(CASE WHEN Player.player_name = 'Aaron Meijers' THEN Player_Attributes.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN Player.player_name = 'Aaron Meijers' THEN Player_Attributes.id ELSE NULL END)"]}, {"db_id": "european_football_2", "question": "Which player is older, Aaron Lennon or Abdelaziz Barrada?", "evidence": "older player refers to older birthday;", "SQL": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1", "question_toks": ["Which", "player", "is", "older", ",", "Aaron", "Lennon", "or", "Abdelaziz", "Barrada", "?"], "SQL_toks": ["SELECT", "player_name", "FROM", "Player", "WHERE", "player_name", "IN", "(", "'Aaron", "Lennon", "'", ",", "'Abdelaziz", "Barrada", "'", ")", "ORDER", "BY", "birthday", "ASC", "LIMIT", "1"], "evidence_toks": ["older", "player", "refers", "to", "older", "birthday", ";"], "difficulty": "simple", "templatized_domain_statements": ["'tallest player' refers to ORDER BY Player.height DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Which player has the strongest overall strength?", "evidence": "overall strength refers to overall_rating; strongest overall strength refers to MAX(overall_rating);", "SQL": "SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t2.overall_rating DESC LIMIT 1", "question_toks": ["Which", "player", "has", "the", "strongest", "overall", "strength", "?"], "SQL_toks": ["SELECT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "ORDER", "BY", "t2.overall_rating", "DESC", "LIMIT", "1"], "evidence_toks": ["overall", "strength", "refers", "to", "overall_rating", ";", "strongest", "overall", "strength", "refers", "to", "MAX", "(", "overall_rating", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'preferred foot was the left foot when attacking' refers to Player_Attributes.preferred_foot = 'left'", "'players who would remain in his position when the team attacked' refers to Player_Attributes.attacking_work_rate = 'low'"]}, {"db_id": "european_football_2", "question": "Which of these players performs the best in crossing actions, Alexis, Ariel Borysiuk or Arouna Kone?", "evidence": "player who perform best in crossing actions refers to MAX(crossing);", "SQL": "SELECT t1.player_name, t2.crossing FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY t2.crossing DESC LIMIT 1", "question_toks": ["Which", "of", "these", "players", "performs", "the", "best", "in", "crossing", "actions", ",", "Alexis", ",", "Ariel", "Borysiuk", "or", "Arouna", "Kone", "?"], "SQL_toks": ["SELECT", "t1.player_name", ",", "t2.crossing", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "IN", "(", "'Alexis", "'", ",", "'Ariel", "Borysiuk", "'", ",", "'Arouna", "Kone", "'", ")", "ORDER", "BY", "t2.crossing", "DESC", "LIMIT", "1"], "evidence_toks": ["player", "who", "perform", "best", "in", "crossing", "actions", "refers", "to", "MAX", "(", "crossing", ")", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'list the leagues' refers to League.name", "'from Germany' refers to Country.name = 'Germany'"]}, {"db_id": "european_football_2", "question": "What's the heading accuracy of Ariel Borysiuk?", "evidence": "", "SQL": "SELECT DISTINCT t1.player_name, t2.heading_accuracy FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Ariel Borysiuk'", "question_toks": ["What", "'s", "the", "heading", "accuracy", "of", "Ariel", "Borysiuk", "?"], "SQL_toks": ["SELECT", "DISTINCT", "t1.player_name", ",", "t2.heading_accuracy", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Ariel", "Borysiuk", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'best in crossing actions' refers to ORDER BY Player_Attributes.crossing DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Among the players whose height is over 180, how many of them have a volley score of over 70?", "evidence": "height > 180; volley score refers to volleys; volleys > 70;", "SQL": "SELECT COUNT(DISTINCT t1.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 180 AND t2.volleys > 70", "question_toks": ["Among", "the", "players", "whose", "height", "is", "over", "180", ",", "how", "many", "of", "them", "have", "a", "volley", "score", "of", "over", "70", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "t1.id", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.height", ">", "180", "AND", "t2.volleys", ">", "70"], "evidence_toks": ["height", ">", "180", ";", "volley", "score", "refers", "to", "volleys", ";", "volleys", ">", "70", ";"], "difficulty": "simple", "templatized_domain_statements": ["'height is over {100}' refers to Player.height > 100", "'volley score of over {100}' refers to Player_Attributes.volleys > 100"]}, {"db_id": "european_football_2", "question": "Please list the names of the players whose volley score and dribbling score are over 70.", "evidence": "volley score refers to volleys; volleys > 70; dribbling score refers to dribbling; dribbling > 70;", "SQL": "SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.volleys > 70 AND t2.dribbling > 70", "question_toks": ["Please", "list", "the", "names", "of", "the", "players", "whose", "volley", "score", "and", "dribbling", "score", "are", "over", "70", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t2.volleys", ">", "70", "AND", "t2.dribbling", ">", "70"], "evidence_toks": ["volley", "score", "refers", "to", "volleys", ";", "volleys", ">", "70", ";", "dribbling", "score", "refers", "to", "dribbling", ";", "dribbling", ">", "70", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'held in Belgium' refers to Country.name = 'Belgium'"]}, {"db_id": "european_football_2", "question": "What is the long passing score of the oldest player?", "evidence": "long passing score refers to long_passing; oldest player refers to oldest birthday;", "SQL": "SELECT t2.long_passing FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t1.birthday ASC LIMIT 1", "question_toks": ["What", "is", "the", "long", "passing", "score", "of", "the", "oldest", "player", "?"], "SQL_toks": ["SELECT", "t2.long_passing", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "ORDER", "BY", "t1.birthday", "ASC", "LIMIT", "1"], "evidence_toks": ["long", "passing", "score", "refers", "to", "long_passing", ";", "oldest", "player", "refers", "to", "oldest", "birthday", ";"], "difficulty": "simple", "templatized_domain_statements": ["'long passing score' refers to Player_Attributes.long_passing", "'oldest player' refers to ORDER BY Player.birthday ASC LIMIT 1"]}, {"db_id": "european_football_2", "question": "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?", "evidence": "how much higher in percentage = MULTIPLY(DIVIDE(SUBTRACT(overall_rating WHERE player_name = 'Ariel Borysiuk', overall_rating WHERE player_name = 'Paulin Puel'), overall_rating WHERE player_name = 'Paulin Puel'), 100);", "SQL": "SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 AvsP_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id", "question_toks": ["How", "much", "higher", "in", "percentage", "is", "Ariel", "Borysiuk", "'s", "overall", "rating", "than", "that", "of", "Paulin", "Puel", "?"], "SQL_toks": ["SELECT", "(", "SUM", "(", "CASE", "WHEN", "t1.player_name", "=", "'Ariel", "Borysiuk", "'", "THEN", "t2.overall_rating", "ELSE", "0", "END", ")", "*", "1.0", "-", "SUM", "(", "CASE", "WHEN", "t1.player_name", "=", "'Paulin", "Puel", "'", "THEN", "t2.overall_rating", "ELSE", "0", "END", ")", ")", "*", "100", "AvsP_percent", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id"], "evidence_toks": ["how", "much", "higher", "in", "percentage", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUBTRACT", "(", "overall_rating", "WHERE", "player_name", "=", "'Ariel", "Borysiuk", "'", ",", "overall_rating", "WHERE", "player_name", "=", "'Paulin", "Puel", "'", ")", ",", "overall_rating", "WHERE", "player_name", "=", "'Paulin", "Puel", "'", ")", ",", "100", ")", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'league had the most matches' refers to League.name ORDER BY COUNT(Match.id) DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Calculate the average overall rating of Pietro Marino.", "evidence": "Pietro Marino refers to player_name = 'Pietro Marino'; average overall rating AVG(T1.overall_rating)", "SQL": "SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Pietro Marino'", "question_toks": ["Calculate", "the", "average", "overall", "rating", "of", "Pietro", "Marino", "."], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "t2.overall_rating", ")", "AS", "REAL", ")", "/", "COUNT", "(", "t2.id", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Pietro", "Marino", "'"], "evidence_toks": ["Pietro", "Marino", "refers", "to", "player_name", "=", "'Pietro", "Marino", "'", ";", "average", "overall", "rating", "AVG", "(", "T1.overall_rating", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'What is Ajax's' refers to Team_Attributes.team_long_name = 'Ajax'", "'highest chance creation passing score' refers to ORDER BY Team_Attributes.chanceCreationPassing DESC LIMIT 1", "'it classified as' refers to Team_Attributes.chanceCreationPassing"]}, {"db_id": "european_football_2", "question": "What is Ajax's highest chance creation passing score and what is it classified as?", "evidence": "Ajax's refers to team_long_name = 'Ajax'; chance creation passing score refers to MAX(chanceCreationPassing); classified as chanceCreationPassingClass", "SQL": "SELECT t2.chanceCreationPassing FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Ajax' ORDER BY t2.chanceCreationPassing DESC LIMIT 1", "question_toks": ["What", "is", "Ajax", "'s", "highest", "chance", "creation", "passing", "score", "and", "what", "is", "it", "classified", "as", "?"], "SQL_toks": ["SELECT", "t2.chanceCreationPassing", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t1.team_long_name", "=", "'Ajax", "'", "ORDER", "BY", "t2.chanceCreationPassing", "DESC", "LIMIT", "1"], "evidence_toks": ["Ajax", "'s", "refers", "to", "team_long_name", "=", "'Ajax", "'", ";", "chance", "creation", "passing", "score", "refers", "to", "MAX", "(", "chanceCreationPassing", ")", ";", "classified", "as", "chanceCreationPassingClass"], "difficulty": "moderate", "templatized_domain_statements": ["'Abdou Diallo' refers to Player.player_name = 'Abdou Diallo'", "'Which foot is preferred' refers to Player_Attributes.preferred_foot"]}, {"db_id": "european_football_2", "question": "Which foot is preferred by Abdou Diallo?", "evidence": "Abdou Diallo refers to player_name = 'Abdou Diallo'; foot is preferred refers to preferred_foot", "SQL": "SELECT DISTINCT t2.preferred_foot FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Abdou Diallo'", "question_toks": ["Which", "foot", "is", "preferred", "by", "Abdou", "Diallo", "?"], "SQL_toks": ["SELECT", "DISTINCT", "t2.preferred_foot", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Abdou", "Diallo", "'"], "evidence_toks": ["Abdou", "Diallo", "refers", "to", "player_name", "=", "'Abdou", "Diallo", "'", ";", "foot", "is", "preferred", "refers", "to", "preferred_foot"], "difficulty": "simple", "templatized_domain_statements": ["'Parma as the away' refers to TEAM.team_long_name = 'Parma'", "'average number of goals made' refers to CAST(SUM(Match.away_team_goal) AS REAL) / COUNT(Match.id)"]}, {"db_id": "european_football_2", "question": "What is the highest overall rating received by Dorlan Pabon?", "evidence": "Dorlan Pabon refers to T2.player_name = 'Dorlan Pabon'; highest overall rating refers to MAX(overall_rating)", "SQL": "SELECT MAX(t2.overall_rating) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Dorlan Pabon'", "question_toks": ["What", "is", "the", "highest", "overall", "rating", "received", "by", "Dorlan", "Pabon", "?"], "SQL_toks": ["SELECT", "MAX", "(", "t2.overall_rating", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t1.player_name", "=", "'Dorlan", "Pabon", "'"], "evidence_toks": ["Dorlan", "Pabon", "refers", "to", "T2.player_name", "=", "'Dorlan", "Pabon", "'", ";", "highest", "overall", "rating", "refers", "to", "MAX", "(", "overall_rating", ")"], "difficulty": "simple", "templatized_domain_statements": ["'{100} points overall rating' refers to ORDER BY Player_Attributes.overall_rating = 100", "'on 100/100/100' refers to SUBSTR(Player_Attributes.`date`, 1, 10) = '100/100/100'", "'who was the oldest player' refers to Player.birthday ASC LIMIT 1"]}, {"db_id": "european_football_2", "question": "What was the potiential for Francesco Parravicini on 2010/8/30?", "evidence": "Francesco Parravicini refers to player_name = 'Francesco Parravicini'; on 2010/8/30 refers to date = '2010-08-30 00:00:00'", "SQL": "SELECT t2.potential FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2010-08-30' AND t1.player_name = 'Francesco Parravicini'", "question_toks": ["What", "was", "the", "potiential", "for", "Francesco", "Parravicini", "on", "2010/8/30", "?"], "SQL_toks": ["SELECT", "t2.potential", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2010-08-30", "'", "AND", "t1.player_name", "=", "'Francesco", "Parravicini", "'"], "evidence_toks": ["Francesco", "Parravicini", "refers", "to", "player_name", "=", "'Francesco", "Parravicini", "'", ";", "on", "2010/8/30", "refers", "to", "date", "=", "'2010-08-30", "00:00:00", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'player name Francesco Parravicini' refers to Player.player_name = 'Francesco Parravicini'", "'What was the potiential' refers to Player_Attributes.potential", "'on 100/100/100' refers to SUBSTR(Player_Attributes.`date`, 1, 10) = '100/100/100'"]}, {"db_id": "european_football_2", "question": "How was Francesco Migliore's attacking work rate on 2015/5/1?", "evidence": "Francesco Migliore's\u00a0 refers to player_name = 'Francesco Migliore'; on 2015/5/1 refers to date = '2015-05-01 00:00:00'", "SQL": "SELECT t2.attacking_work_rate FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2015-05-01' AND t1.player_name = 'Francesco Migliore'", "question_toks": ["How", "was", "Francesco", "Migliore", "'s", "attacking", "work", "rate", "on", "2015/5/1", "?"], "SQL_toks": ["SELECT", "t2.attacking_work_rate", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2015-05-01", "'", "AND", "t1.player_name", "=", "'Francesco", "Migliore", "'"], "evidence_toks": ["Francesco", "Migliore's", "refers", "to", "player_name", "=", "'Francesco", "Migliore", "'", ";", "on", "2015/5/1", "refers", "to", "date", "=", "'2015-05-01", "00:00:00", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'player Kevin Constant' refers to Player.player_name = 'Kevin Constant'", "'his highest crossing score' refers to ORDER BY Player_Attributes.crossing DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Tell the defensive work rate for Kevin Berigaud on 2013/2/22.", "evidence": "Kevin Berigaud refers to player_name = 'Kevin Berigaud'; on 2013/2/22 refers to date = '2013-02-22 00:00:00'", "SQL": "SELECT t2.defensive_work_rate FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-02-22' AND t1.player_name = 'Kevin Berigaud'", "question_toks": ["Tell", "the", "defensive", "work", "rate", "for", "Kevin", "Berigaud", "on", "2013/2/22", "."], "SQL_toks": ["SELECT", "t2.defensive_work_rate", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_fifa_api_id", "=", "t2.player_fifa_api_id", "WHERE", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2013-02-22", "'", "AND", "t1.player_name", "=", "'Kevin", "Berigaud", "'"], "evidence_toks": ["Kevin", "Berigaud", "refers", "to", "player_name", "=", "'Kevin", "Berigaud", "'", ";", "on", "2013/2/22", "refers", "to", "date", "=", "'2013-02-22", "00:00:00", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'for team LEI' refers to Team.team_short_name = 'LEI'", "'build up play dribbling class' refers to Team_Attributes.buildUpPlayDribblingClass"]}, {"db_id": "european_football_2", "question": "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?", "evidence": "\"Hull City\" refers to team_long_name = 'Hull City'; on 2010/2/22 refers to date = '2010-02-22 00:00:00'", "SQL": "SELECT t2.chanceCreationCrossingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hull City' AND SUBSTR(t2.`date`, 1, 10) = '2010-02-22'", "question_toks": ["What", "was", "the", "chance", "creation", "crossing", "class", "for", "``", "Hull", "City", "''", "on", "2010/2/22", "?"], "SQL_toks": ["SELECT", "t2.chanceCreationCrossingClass", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t1.team_long_name", "=", "'Hull", "City", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2010-02-22", "'"], "evidence_toks": ["``", "Hull", "City", "''", "refers", "to", "team_long_name", "=", "'Hull", "City", "'", ";", "on", "2010/2/22", "refers", "to", "date", "=", "'2010-02-22", "00:00:00", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'Team Hull City' on 2010/2/22 refers to Team.team_long_name = 'Hull City'", "'chance creation crossing class' refers to Team_Attributes.chanceCreationCrossingClass"]}, {"db_id": "european_football_2", "question": "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?", "evidence": "\"Hannover 96\" refers to team_long_name = 'Hannover 96'; on 2015/9/10 refers to date = '2015-09-10 00:00:00'", "SQL": "SELECT t2.chanceCreationShootingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hannover 96' AND SUBSTR(t2.`date`, 1, 10) = '2015-09-10'", "question_toks": ["For", "the", "team", "``", "Hannover", "96", "''", ",", "what", "was", "its", "defence", "aggression", "class", "on", "2015/9/10", "?"], "SQL_toks": ["SELECT", "t2.chanceCreationShootingClass", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t1.team_long_name", "=", "'Hannover", "96", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2015-09-10", "'"], "evidence_toks": ["``", "Hannover", "96", "''", "refers", "to", "team_long_name", "=", "'Hannover", "96", "'", ";", "on", "2015/9/10", "refers", "to", "date", "=", "'2015-09-10", "00:00:00", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'For the team \"Hannover 96' refers to t2.chanceCreationShootingClass WHERE t1.team_long_name = 'Hannover 96' AND SUBSTR(t2.`date`, 1, 10) = '2015-09-10'", "'what was its defence aggression class' refers to Team_Attributes.chanceCreationShootingClass"]}, {"db_id": "european_football_2", "question": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?", "evidence": "Landon Donovan's refers to player_name = 'Landon Donovan'; Jordan Bowery refers to player_name = 'Jordan Bowery';\u00a0 percentage refers to DIVIDE(SUBTRACT(player_name = 'Landon Donovan' overall_rating; player_name = 'Jordan Bowery' overall_rating), player_name = 'Landon Donovan' overall_rating)*100", "SQL": "SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'", "question_toks": ["What", "percentage", "is", "Landon", "Donovan", "'s", "overall", "rating", "higher", "than", "Jordan", "Bowery", "on", "2013/7/12", "?"], "SQL_toks": ["SELECT", "(", "SUM", "(", "CASE", "WHEN", "t1.player_name", "=", "'Landon", "Donovan", "'", "THEN", "t2.overall_rating", "ELSE", "0", "END", ")", "*", "1.0", "-", "SUM", "(", "CASE", "WHEN", "t1.player_name", "=", "'Jordan", "Bowery", "'", "THEN", "t2.overall_rating", "ELSE", "0", "END", ")", ")", "*", "100", "/", "SUM", "(", "CASE", "WHEN", "t1.player_name", "=", "'Landon", "Donovan", "'", "THEN", "t2.overall_rating", "ELSE", "0", "END", ")", "LvsJ_percent", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_fifa_api_id", "=", "t2.player_fifa_api_id", "WHERE", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2013-07-12", "'"], "evidence_toks": ["Landon", "Donovan", "'s", "refers", "to", "player_name", "=", "'Landon", "Donovan", "'", ";", "Jordan", "Bowery", "refers", "to", "player_name", "=", "'Jordan", "Bowery", "'", ";", "percentage", "refers", "to", "DIVIDE", "(", "SUBTRACT", "(", "player_name", "=", "'Landon", "Donovan", "'", "overall_rating", ";", "player_name", "=", "'Jordan", "Bowery", "'", "overall_rating", ")", ",", "player_name", "=", "'Landon", "Donovan", "'", "overall_rating", ")", "*100"], "difficulty": "challenging", "templatized_domain_statements": ["'average overall rating' refers to CAST(SUM(Player_Attributes.overall_rating) AS REAL) / COUNT(Player_Attributes.id)", "'for player Marko Arnautovic' refers to Player.player_name = 'Marko Arnautovic'", "'from {100/100/100} to {100/100/100}' refers to SUBSTR(Player_Attributes.date, 1, 10) BETWEEN '100-100-100' AND '100-100-100'"]}, {"db_id": "european_football_2", "question": "List down 5 tallest players' name.", "evidence": "tallest refers to MAX(height)", "SQL": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 5", "question_toks": ["List", "down", "5", "tallest", "players", "'", "name", "."], "SQL_toks": ["SELECT", "player_name", "FROM", "Player", "ORDER", "BY", "height", "DESC", "LIMIT", "5"], "evidence_toks": ["tallest", "refers", "to", "MAX", "(", "height", ")"], "difficulty": "simple", "templatized_domain_statements": ["'{100} heaviest players' refers to ORDER BY Player.weight DESC LIMIT 100"]}, {"db_id": "european_football_2", "question": "What are the player api id of 10 heaviest players?", "evidence": "heaviest refers to MAX(weight)", "SQL": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10", "question_toks": ["What", "are", "the", "player", "api", "id", "of", "10", "heaviest", "players", "?"], "SQL_toks": ["SELECT", "player_api_id", "FROM", "Player", "ORDER", "BY", "weight", "DESC", "LIMIT", "10"], "evidence_toks": ["heaviest", "refers", "to", "MAX", "(", "weight", ")"], "difficulty": "simple", "templatized_domain_statements": ["'{100} years old and above' refers to CAST((JULIANDAY('now') - JULIANDAY(Player.birthday)) AS REAL) / 365 >= 100"]}, {"db_id": "european_football_2", "question": "List down the name of players who are 35 years old and above.", "evidence": "35 years old and above refers to datetime(CURRENT_TIMESTAMP,'localtime') - datetime(birthday) > 34", "SQL": "SELECT player_name FROM Player WHERE CAST((JULIANDAY('now') - JULIANDAY(birthday)) AS REAL) / 365 >= 35", "question_toks": ["List", "down", "the", "name", "of", "players", "who", "are", "35", "years", "old", "and", "above", "."], "SQL_toks": ["SELECT", "player_name", "FROM", "Player", "WHERE", "CAST", "(", "(", "JULIANDAY", "(", "'now", "'", ")", "-", "JULIANDAY", "(", "birthday", ")", ")", "AS", "REAL", ")", "/", "365", ">", "=", "35"], "evidence_toks": ["35", "years", "old", "and", "above", "refers", "to", "datetime", "(", "CURRENT_TIMESTAMP", ",", "'localtime", "'", ")", "-", "datetime", "(", "birthday", ")", ">", "34"], "difficulty": "simple", "templatized_domain_statements": ["'home team goal' refers to match.home_team_goal"]}, {"db_id": "european_football_2", "question": "How many home team goal have been scored by Aaron Lennon?", "evidence": "Aaron Lennon refers to player_name = 'Aaron Lennon'", "SQL": "SELECT SUM(t2.home_team_goal) FROM Player AS t1 INNER JOIN match AS t2 ON t1.player_api_id = t2.away_player_9 WHERE t1.player_name = 'Aaron Lennon'", "question_toks": ["How", "many", "home", "team", "goal", "have", "been", "scored", "by", "Aaron", "Lennon", "?"], "SQL_toks": ["SELECT", "SUM", "(", "t2.home_team_goal", ")", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "match", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.away_player_9", "WHERE", "t1.player_name", "=", "'Aaron", "Lennon", "'"], "evidence_toks": ["Aaron", "Lennon", "refers", "to", "player_name", "=", "'Aaron", "Lennon", "'"], "difficulty": "simple", "templatized_domain_statements": ["'player Daan Smith' refers to t1.player_name = 'Daan Smith'", "'away team goal scored' refers to match.away_team_goal"]}, {"db_id": "european_football_2", "question": "State 10 names of the strongest players.", "evidence": "strongest players refers to MAX(overall_rating)", "SQL": "SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t2.overall_rating DESC LIMIT 10", "question_toks": ["State", "10", "names", "of", "the", "strongest", "players", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "ORDER", "BY", "t2.overall_rating", "DESC", "LIMIT", "10"], "evidence_toks": ["strongest", "players", "refers", "to", "MAX", "(", "overall_rating", ")"], "difficulty": "simple", "templatized_domain_statements": ["'strongest players' refers to Player_Attributes.overall_rating DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.", "evidence": "tend to be attacking when their mates were doing attack moves refers to attacking_work_rate = 'high';", "SQL": "SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.attacking_work_rate = 'high'", "question_toks": ["Who", "are", "the", "players", "that", "tend", "to", "be", "attacking", "when", "their", "mates", "were", "doing", "attack", "moves", "?", "List", "down", "their", "name", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t2.attacking_work_rate", "=", "'high", "'"], "evidence_toks": ["tend", "to", "be", "attacking", "when", "their", "mates", "were", "doing", "attack", "moves", "refers", "to", "attacking_work_rate", "=", "'high", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'name of players' refers to Player.player_name", "'who came from Belgium' refers to Country.name = 'Belgium'"]}, {"db_id": "european_football_2", "question": "Among the players with finishing rate of 1, pick the eldest player and state the player's name.", "evidence": "eldest player refers to MAX(SUBTRACT(datetime(CURRENT_TIMESTAMP,'localtime'),datetime(birthday))); finishing rate of 1 refers to finishing = 1", "SQL": "SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.finishing = 1 ORDER BY t1.birthday DESC LIMIT 1", "question_toks": ["Among", "the", "players", "with", "finishing", "rate", "of", "1", ",", "pick", "the", "eldest", "player", "and", "state", "the", "player", "'s", "name", "."], "SQL_toks": ["SELECT", "DISTINCT", "t1.player_name", "FROM", "Player", "AS", "t1", "INNER", "JOIN", "Player_Attributes", "AS", "t2", "ON", "t1.player_api_id", "=", "t2.player_api_id", "WHERE", "t2.finishing", "=", "1", "ORDER", "BY", "t1.birthday", "DESC", "LIMIT", "1"], "evidence_toks": ["eldest", "player", "refers", "to", "MAX", "(", "SUBTRACT", "(", "datetime", "(", "CURRENT_TIMESTAMP", ",", "'localtime", "'", ")", ",", "datetime", "(", "birthday", ")", ")", ")", ";", "finishing", "rate", "of", "1", "refers", "to", "finishing", "=", "1"], "difficulty": "moderate", "templatized_domain_statements": ["'average weights' refers to SUM(Player.weight) / COUNT(Player.id)"]}, {"db_id": "european_football_2", "question": "Which country's players have the heaviest average weights?", "evidence": "heaviest average weights refers to MAX(AVG(weight))", "SQL": "SELECT t1.name FROM Country AS t1 INNER JOIN Match AS t2 ON t1.id = t2.country_id INNER JOIN Player AS t3 ON t2.home_player_1 = t3.player_api_id GROUP BY t1.name ORDER BY SUM(t3.weight) / COUNT(t3.id) DESC LIMIT 1", "question_toks": ["Which", "country", "'s", "players", "have", "the", "heaviest", "average", "weights", "?"], "SQL_toks": ["SELECT", "t1.name", "FROM", "Country", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.country_id", "INNER", "JOIN", "Player", "AS", "t3", "ON", "t2.home_player_1", "=", "t3.player_api_id", "GROUP", "BY", "t1.name", "ORDER", "BY", "SUM", "(", "t3.weight", ")", "/", "COUNT", "(", "t3.id", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["heaviest", "average", "weights", "refers", "to", "MAX", "(", "AVG", "(", "weight", ")", ")"], "difficulty": "simple", "templatized_domain_statements": ["'slow speed class team' refers to Team_Attributes.buildUpPlaySpeedClass = 'Slow'", "'the long name' refers to Team.team_long_name"]}, {"db_id": "european_football_2", "question": "What are the short name of team who played safe while creating chance of passing?", "evidence": "played safe while creating chance of passing refers to chanceCreationPassingClass = 'Safe'; short name of team refers to team_short_name", "SQL": "SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.chanceCreationPassingClass = 'Safe'", "question_toks": ["What", "are", "the", "short", "name", "of", "team", "who", "played", "safe", "while", "creating", "chance", "of", "passing", "?"], "SQL_toks": ["SELECT", "DISTINCT", "t1.team_short_name", "FROM", "Team", "AS", "t1", "INNER", "JOIN", "Team_Attributes", "AS", "t2", "ON", "t1.team_api_id", "=", "t2.team_api_id", "WHERE", "t2.chanceCreationPassingClass", "=", "'Safe", "'"], "evidence_toks": ["played", "safe", "while", "creating", "chance", "of", "passing", "refers", "to", "chanceCreationPassingClass", "=", "'Safe", "'", ";", "short", "name", "of", "team", "refers", "to", "team_short_name"], "difficulty": "moderate", "templatized_domain_statements": ["'average heights' refers to CAST(SUM(Player.height) AS REAL) / COUNT(Player.id)", "'Italy players' refers to Country.NAME = 'Italy'"]}, {"db_id": "european_football_2", "question": "How many football players born after the 1990s have the first name \"Aaron\"?", "evidence": "first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'", "SQL": "SELECT COUNT(id) FROM Player WHERE birthday > '1990' AND player_name LIKE 'Aaron%'", "question_toks": ["How", "many", "football", "players", "born", "after", "the", "1990s", "have", "the", "first", "name", "``", "Aaron", "''", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "id", ")", "FROM", "Player", "WHERE", "birthday", ">", "'1990", "'", "AND", "player_name", "LIKE", "'Aaron", "%", "'"], "evidence_toks": ["first", "name", "``", "Aaron", "''", "refers", "to", "player_name", "LIKE", "'Aaron", "%", "'", ";", "born", "after", "the", "1990s", "refers", "to", "birthday", ">", "'1990", "'"], "difficulty": "simple", "templatized_domain_statements": ["'strength score of more than {100}' refers to Player_Attributes.strength > 100", "'stamina score of more than {100}' refers to Player_Attributes.stamina > 100"]}, {"db_id": "european_football_2", "question": "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?", "evidence": "highest potential score for crossing refers to MAX(crossing); preferred to use their left foots refers to preferred_foot = 'left'", "SQL": "SELECT COUNT(t1.id) FROM Player_Attributes AS t1 WHERE t1.preferred_foot = 'left' AND t1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes)", "question_toks": ["How", "many", "players", "had", "the", "highest", "potential", "score", "for", "crossing", "that", "preferred", "to", "use", "their", "left", "foots", "while", "attacking", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "t1.id", ")", "FROM", "Player_Attributes", "AS", "t1", "WHERE", "t1.preferred_foot", "=", "'left", "'", "AND", "t1.crossing", "=", "(", "SELECT", "MAX", "(", "crossing", ")", "FROM", "Player_Attributes", ")"], "evidence_toks": ["highest", "potential", "score", "for", "crossing", "refers", "to", "MAX", "(", "crossing", ")", ";", "preferred", "to", "use", "their", "left", "foots", "refers", "to", "preferred_foot", "=", "'left", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'sprint speed' refers to Player_Attributes.sprint_speed", "'agility' refers to Player_Attributes.agility", "'acceleration score' refers to Player_Attributes.acceleration"]}, {"db_id": "european_football_2", "question": "In what country did the English Premier League take place?", "evidence": "", "SQL": "SELECT name FROM Country WHERE id IN ( SELECT country_id FROM League WHERE name = 'EnglAND Premier League' )", "question_toks": ["In", "what", "country", "did", "the", "English", "Premier", "League", "take", "place", "?"], "SQL_toks": ["SELECT", "name", "FROM", "Country", "WHERE", "id", "IN", "(", "SELECT", "country_id", "FROM", "League", "WHERE", "name", "=", "'EnglAND", "Premier", "League", "'", ")"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'In the 2015/2016 season' refers to season = '2015/2016'"]}, {"db_id": "european_football_2", "question": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?", "evidence": "September 24, 2008 refers to date like '2008-09-24%'; final score for home team refers to home_team_goal; final score for away team refers to away_team_goal", "SQL": "SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND SUBSTR(t2.`date`, 1, 10) = '2008-09-24'", "question_toks": ["What", "was", "the", "final", "score", "for", "the", "match", "on", "September", "24", ",", "2008", ",", "in", "the", "Belgian", "Jupiler", "League", "between", "the", "home", "team", "and", "the", "away", "team", "?"], "SQL_toks": ["SELECT", "t2.home_team_goal", ",", "t2.away_team_goal", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "WHERE", "t1.name", "=", "'Belgium", "Jupiler", "League", "'", "AND", "SUBSTR", "(", "t2.", "`", "date", "`", ",", "1", ",", "10", ")", "=", "'2008-09-24", "'"], "evidence_toks": ["September", "24", ",", "2008", "refers", "to", "date", "like", "'2008-09-24", "%", "'", ";", "final", "score", "for", "home", "team", "refers", "to", "home_team_goal", ";", "final", "score", "for", "away", "team", "refers", "to", "away_team_goal"], "difficulty": "challenging", "templatized_domain_statements": ["'finishing rate of the player' refers to Player_Attributes.finishing", "'curve score of the player' refers to Player_Attributes.curve", "'player who has the heaviest weight' refers to ORDER BY Player_Attributes.weight DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "What was the highest score of the home team in the Netherlands Eredivisie league?", "evidence": "highest score of the home team refers to MAX(home_team_goal)", "SQL": "SELECT MAX(t2.home_team_goal) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Netherlands Eredivisie'", "question_toks": ["What", "was", "the", "highest", "score", "of", "the", "home", "team", "in", "the", "Netherlands", "Eredivisie", "league", "?"], "SQL_toks": ["SELECT", "MAX", "(", "t2.home_team_goal", ")", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "WHERE", "t1.name", "=", "'Netherlands", "Eredivisie", "'"], "evidence_toks": ["highest", "score", "of", "the", "home", "team", "refers", "to", "MAX", "(", "home_team_goal", ")"], "difficulty": "simple", "templatized_domain_statements": ["'full name' refers to Team.team_long_name", "'the away team' refers to Match.away_team_api_id", "'the away team that scored the most goals' refers to ORDER BY Match.away_team_goal DESC LIMIT 1"]}, {"db_id": "european_football_2", "question": "Which league had the most games in the 2015\u20132016 season?", "evidence": "in the 2015\u20132016 season season = '2015/2016'; league with most games refers to team_long_name where MAX(COUNT(id))", "SQL": "SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2015/2016' GROUP BY t1.name ORDER BY COUNT(t2.id) DESC LIMIT 3", "question_toks": ["Which", "league", "had", "the", "most", "games", "in", "the", "2015\u20132016", "season", "?"], "SQL_toks": ["SELECT", "t1.name", "FROM", "League", "AS", "t1", "INNER", "JOIN", "Match", "AS", "t2", "ON", "t1.id", "=", "t2.league_id", "WHERE", "t2.season", "=", "'2015/2016", "'", "GROUP", "BY", "t1.name", "ORDER", "BY", "COUNT", "(", "t2.id", ")", "DESC", "LIMIT", "3"], "evidence_toks": ["in", "the", "2015\u20132016", "season", "season", "=", "'2015/2016", "'", ";", "league", "with", "most", "games", "refers", "to", "team_long_name", "where", "MAX", "(", "COUNT", "(", "id", ")", ")"], "difficulty": "simple", "templatized_domain_statements": ["'overall strength is the greatest' refers to MAX(Player_Attributes.overall_rating)"]}]