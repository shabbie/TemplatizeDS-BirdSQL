[{"db_id": "student_club", "question": "What's Angela Sanders's major?", "evidence": "major refers to major_name", "SQL": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'", "question_toks": ["What", "'s", "Angela", "Sanders", "'s", "major", "?"], "SQL_toks": ["SELECT", "T2.major_name", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T1.link_to_major", "=", "T2.major_id", "WHERE", "T1.first_name", "=", "'Angela", "'", "AND", "T1.last_name", "=", "'Sanders", "'"], "evidence_toks": ["major", "refers", "to", "major_name"], "difficulty": "simple", "templatized_domain_statements": ["'Angela Sanders's major' refers to major.major_name."]}, {"db_id": "student_club", "question": "Please list the full names of the students in the Student_Club that come from the Art and Design Department.", "evidence": "full name refers to first_name, last_name;", "SQL": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art AND Design Department'", "question_toks": ["Please", "list", "the", "full", "names", "of", "the", "students", "in", "the", "Student_Club", "that", "come", "from", "the", "Art", "and", "Design", "Department", "."], "SQL_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T1.link_to_major", "=", "T2.major_id", "WHERE", "T2.department", "=", "'Art", "AND", "Design", "Department", "'"], "evidence_toks": ["full", "name", "refers", "to", "first_name", ",", "last_name", ";"], "difficulty": "simple", "templatized_domain_statements": ["'list the full names' refers to member.first_name AND member.last_name", "'from the Art and Design Department' rfers to major.department = 'Art AND Design Department'"]}, {"db_id": "student_club", "question": "How many students of the Student_Club have attended the event \"Women's Soccer\"?", "evidence": "Women's Soccer is an event name", "SQL": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer'", "question_toks": ["How", "many", "students", "of", "the", "Student_Club", "have", "attended", "the", "event", "``", "Women", "'s", "Soccer", "''", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.event_id", ")", "FROM", "event", "AS", "T1", "INNER", "JOIN", "attendance", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "WHERE", "T1.event_name", "=", "'Women", "''", "s", "Soccer", "'"], "evidence_toks": ["Women", "'s", "Soccer", "is", "an", "event", "name"], "difficulty": "simple", "templatized_domain_statements": ["'the event Women's Soccer' refers to event.event_name = 'Women's Soccer'"]}, {"db_id": "student_club", "question": "What is the event that has the highest attendance of the students from the Student_Club?", "evidence": "event with highest attendance refers to MAX(COUNT(link_to_event))", "SQL": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_name ORDER BY COUNT(T2.link_to_event) DESC LIMIT 1", "question_toks": ["What", "is", "the", "event", "that", "has", "the", "highest", "attendance", "of", "the", "students", "from", "the", "Student_Club", "?"], "SQL_toks": ["SELECT", "T1.event_name", "FROM", "event", "AS", "T1", "INNER", "JOIN", "attendance", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "GROUP", "BY", "T1.event_name", "ORDER", "BY", "COUNT", "(", "T2.link_to_event", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["event", "with", "highest", "attendance", "refers", "to", "MAX", "(", "COUNT", "(", "link_to_event", ")", ")"], "difficulty": "simple", "templatized_domain_statements": ["'highest attendance of the students from the Student_Club' refers to ORDER BY COUNT(attendance.link_to_event) DESC LIMIT 1"]}, {"db_id": "student_club", "question": "Which college is the vice president of the Student_Club from?", "evidence": "Vice President is a position of the Student Club", "SQL": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position LIKE 'vice president'", "question_toks": ["Which", "college", "is", "the", "vice", "president", "of", "the", "Student_Club", "from", "?"], "SQL_toks": ["SELECT", "T2.college", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T1.link_to_major", "=", "T2.major_id", "WHERE", "T1.position", "LIKE", "'vice", "president", "'"], "evidence_toks": ["Vice", "President", "is", "a", "position", "of", "the", "Student", "Club"], "difficulty": "simple", "templatized_domain_statements": ["'Vice President of the Student Club' refers to member.position LIKE 'vice president'"]}, {"db_id": "student_club", "question": "Please list the event names of all the events attended by Angela Sanders.", "evidence": "", "SQL": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Angela' AND T3.last_name = 'Sanders'", "question_toks": ["Please", "list", "the", "event", "names", "of", "all", "the", "events", "attended", "by", "Angela", "Sanders", "."], "SQL_toks": ["SELECT", "T1.event_name", "FROM", "event", "AS", "T1", "INNER", "JOIN", "attendance", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "INNER", "JOIN", "member", "AS", "T3", "ON", "T2.link_to_member", "=", "T3.member_id", "WHERE", "T3.first_name", "=", "'Angela", "'", "AND", "T3.last_name", "=", "'Sanders", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": []}, {"db_id": "student_club", "question": "How many events of the Student_Club did Sacha Harrison attend in 2019?", "evidence": "events attended in 2019 refers to YEAR(event_date) = 2019", "SQL": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Sacha' AND T3.last_name = 'Harrison' AND SUBSTR(T1.event_date, 1, 4) = '2019'", "question_toks": ["How", "many", "events", "of", "the", "Student_Club", "did", "Sacha", "Harrison", "attend", "in", "2019", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.event_id", ")", "FROM", "event", "AS", "T1", "INNER", "JOIN", "attendance", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "INNER", "JOIN", "member", "AS", "T3", "ON", "T2.link_to_member", "=", "T3.member_id", "WHERE", "T3.first_name", "=", "'Sacha", "'", "AND", "T3.last_name", "=", "'Harrison", "'", "AND", "SUBSTR", "(", "T1.event_date", ",", "1", ",", "4", ")", "=", "'2019", "'"], "evidence_toks": ["events", "attended", "in", "2019", "refers", "to", "YEAR", "(", "event_date", ")", "=", "2019"], "difficulty": "moderate", "templatized_domain_statements": ["'events attended in the year {1000}' refers to SUBSTR(event.event_date, 1, 4) = '1000'", "'name Sacha Harrison' refers to member.first_name = 'Sacha' AND member.last_name = 'Harrison'"]}, {"db_id": "student_club", "question": "How many members of the Student_Club have majored Environmental Engineering?\n", "evidence": "'Environmental Engineering' is the major name", "SQL": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'", "question_toks": ["How", "many", "members", "of", "the", "Student_Club", "have", "majored", "Environmental", "Engineering", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.member_id", ")", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T1.link_to_major", "=", "T2.major_id", "WHERE", "T2.major_name", "=", "'Environmental", "Engineering", "'"], "evidence_toks": ["'Environmental", "Engineering", "'", "is", "the", "major", "name"], "difficulty": "simple", "templatized_domain_statements": ["'majored Environmental Engineering' refers to major.major_name = 'Environmental Engineering'", "'members of the Student_Club' refers to member.member_id"]}, {"db_id": "student_club", "question": "What college offers the major that Tyler Hewitt took?", "evidence": "", "SQL": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'", "question_toks": ["What", "college", "offers", "the", "major", "that", "Tyler", "Hewitt", "took", "?"], "SQL_toks": ["SELECT", "T2.college", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T1.link_to_major", "=", "T2.major_id", "WHERE", "T1.first_name", "=", "'Tyler", "'", "AND", "T1.last_name", "=", "'Hewitt", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": []}, {"db_id": "student_club", "question": "What is the amount of the funds that the Vice President received?", "evidence": "'Vice President' is a position of Student Club; funds received refers to amount;", "SQL": "SELECT T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'", "question_toks": ["What", "is", "the", "amount", "of", "the", "funds", "that", "the", "Vice", "President", "received", "?"], "SQL_toks": ["SELECT", "T2.amount", "FROM", "member", "AS", "T1", "INNER", "JOIN", "income", "AS", "T2", "ON", "T1.member_id", "=", "T2.link_to_member", "WHERE", "T1.position", "=", "'Vice", "President", "'"], "evidence_toks": ["'Vice", "President", "'", "is", "a", "position", "of", "Student", "Club", ";", "funds", "received", "refers", "to", "amount", ";"], "difficulty": "simple", "templatized_domain_statements": ["the Vice President refers to member.position = 'Vice President'.", "'amount of the funds received' refers to income.amount"]}, {"db_id": "student_club", "question": "List the full name of the Student_Club members that grew up in Illinois state.", "evidence": "full name of member refers to first_name, last_name", "SQL": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'", "question_toks": ["List", "the", "full", "name", "of", "the", "Student_Club", "members", "that", "grew", "up", "in", "Illinois", "state", "."], "SQL_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "member", "AS", "T1", "INNER", "JOIN", "zip_code", "AS", "T2", "ON", "T1.zip", "=", "T2.zip_code", "WHERE", "T2.state", "=", "'Illinois", "'"], "evidence_toks": ["full", "name", "of", "member", "refers", "to", "first_name", ",", "last_name"], "difficulty": "simple", "templatized_domain_statements": ["'full name of the Student_Club members' refers to member.first_name AND member.last_name", "'grew up in Illinois state' refers to zip_code.state = 'Illinois'"]}, {"db_id": "student_club", "question": "Was each expense in October Meeting on October 8, 2019 approved?", "evidence": "event_name = 'October Meeting' where event_date = '2019-10-08'; approved = True means expenses was approved; approved = False means expenses was not approved", "SQL": "SELECT T3.approved FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'October Meeting' AND T1.event_date LIKE '2019-10-08%'", "question_toks": ["Was", "each", "expense", "in", "October", "Meeting", "on", "October", "8", ",", "2019", "approved", "?"], "SQL_toks": ["SELECT", "T3.approved", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "INNER", "JOIN", "expense", "AS", "T3", "ON", "T2.budget_id", "=", "T3.link_to_budget", "WHERE", "T1.event_name", "=", "'October", "Meeting", "'", "AND", "T1.event_date", "LIKE", "'2019-10-08", "%", "'"], "evidence_toks": ["event_name", "=", "'October", "Meeting", "'", "where", "event_date", "=", "'2019-10-08", "'", ";", "approved", "=", "True", "means", "expenses", "was", "approved", ";", "approved", "=", "False", "means", "expenses", "was", "not", "approved"], "difficulty": "moderate", "templatized_domain_statements": ["'in October Meeting' refers to event.event_name = 'October Meeting'", "'Meeting on October {100}, {1000}' refers to event.event_date LIKE '1000-100-08%'"]}, {"db_id": "student_club", "question": "Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020.", "evidence": "SUBTRACT(spent where YEAR(expense_date) = 2020, spent where YEAR(expense_date) = 2019)", "SQL": "SELECT SUM(CASE WHEN SUBSTR(T1.event_date, 1, 4) = '2019' THEN T2.spent ELSE 0 END) - SUM(CASE WHEN SUBSTR(T1.event_date, 1, 4) = '2020' THEN T2.spent ELSE 0 END) AS num FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event", "question_toks": ["Calculate", "the", "difference", "of", "the", "total", "amount", "spent", "in", "all", "events", "by", "the", "Student_Club", "in", "year", "2019", "and", "2020", "."], "SQL_toks": ["SELECT", "SUM", "(", "CASE", "WHEN", "SUBSTR", "(", "T1.event_date", ",", "1", ",", "4", ")", "=", "'2019", "'", "THEN", "T2.spent", "ELSE", "0", "END", ")", "-", "SUM", "(", "CASE", "WHEN", "SUBSTR", "(", "T1.event_date", ",", "1", ",", "4", ")", "=", "'2020", "'", "THEN", "T2.spent", "ELSE", "0", "END", ")", "AS", "num", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event"], "evidence_toks": ["SUBTRACT", "(", "spent", "where", "YEAR", "(", "expense_date", ")", "=", "2020", ",", "spent", "where", "YEAR", "(", "expense_date", ")", "=", "2019", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'The total amount spent in all events by the Student_Club in year {1000}' refers to SUM(CASE WHEN SUBSTR(event.event_date, 1, 4) = '2019' THEN budget.spent ELSE 0 END)"]}, {"db_id": "student_club", "question": "Give the location for \"Spring Budget Review\".", "evidence": "'Spring Budget Review' is an event name;", "SQL": "SELECT location FROM event WHERE event_name = 'Spring Budget Review'", "question_toks": ["Give", "the", "location", "for", "``", "Spring", "Budget", "Review", "''", "."], "SQL_toks": ["SELECT", "location", "FROM", "event", "WHERE", "event_name", "=", "'Spring", "Budget", "Review", "'"], "evidence_toks": ["'Spring", "Budget", "Review", "'", "is", "an", "event", "name", ";"], "difficulty": "simple", "templatized_domain_statements": ["Spring Budget Review refers to event.event_name = 'Spring Budget Review'"]}, {"db_id": "student_club", "question": "With the biggest budget for the \"Food\", what was the remaining of it?", "evidence": "remaining of budget refers to remaining, biggest budget for 'Food' refers to MAX(budget.amount) where category = 'Food'", "SQL": "SELECT remaining FROM budget WHERE category = 'Food' AND amount = ( SELECT MAX(amount) FROM budget WHERE category = 'Food' )", "question_toks": ["With", "the", "biggest", "budget", "for", "the", "``", "Food", "''", ",", "what", "was", "the", "remaining", "of", "it", "?"], "SQL_toks": ["SELECT", "remaining", "FROM", "budget", "WHERE", "category", "=", "'Food", "'", "AND", "amount", "=", "(", "SELECT", "MAX", "(", "amount", ")", "FROM", "budget", "WHERE", "category", "=", "'Food", "'", ")"], "evidence_toks": ["remaining", "of", "budget", "refers", "to", "remaining", ",", "biggest", "budget", "for", "'Food", "'", "refers", "to", "MAX", "(", "budget.amount", ")", "where", "category", "=", "'Food", "'"], "difficulty": "simple", "templatized_domain_statements": ["'for the Food' refers to budget.category = 'Food'", "'what was the remaining of it' refers to budget.remaining", "'biggest budget' refers to MAX(budget.amount)"]}, {"db_id": "student_club", "question": "How many majors are there in \"College of Humanities and Social Sciences\"?", "evidence": "", "SQL": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities AND Social Sciences'", "question_toks": ["How", "many", "majors", "are", "there", "in", "``", "College", "of", "Humanities", "and", "Social", "Sciences", "''", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "major_name", ")", "FROM", "major", "WHERE", "college", "=", "'College", "of", "Humanities", "AND", "Social", "Sciences", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": []}, {"db_id": "student_club", "question": "Tell the phone number of \"Carlo Jacobs\".", "evidence": "", "SQL": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'", "question_toks": ["Tell", "the", "phone", "number", "of", "``", "Carlo", "Jacobs", "''", "."], "SQL_toks": ["SELECT", "phone", "FROM", "member", "WHERE", "first_name", "=", "'Carlo", "'", "AND", "last_name", "=", "'Jacobs", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": []}, {"db_id": "student_club", "question": "What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20?", "evidence": "'Post Cards, Posters' is an expense description; on 2019/8/20 refers to expense_date = '2019-8-20'; status of event refers to event_status", "SQL": "SELECT T1.event_status FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Post Cards, Posters' AND T2.expense_date = '2019-08-20'", "question_toks": ["What", "is", "the", "status", "of", "the", "event", "which", "bought", "``", "Post", "Cards", ",", "Posters", "''", "on", "2019/8/20", "?"], "SQL_toks": ["SELECT", "T1.event_status", "FROM", "budget", "AS", "T1", "INNER", "JOIN", "expense", "AS", "T2", "ON", "T1.budget_id", "=", "T2.link_to_budget", "WHERE", "T2.expense_description", "=", "'Post", "Cards", ",", "Posters", "'", "AND", "T2.expense_date", "=", "'2019-08-20", "'"], "evidence_toks": ["'Post", "Cards", ",", "Posters", "'", "is", "an", "expense", "description", ";", "on", "2019/8/20", "refers", "to", "expense_date", "=", "'2019-8-20", "'", ";", "status", "of", "event", "refers", "to", "event_status"], "difficulty": "moderate", "templatized_domain_statements": ["'bought Post Cards, Posters' refers to expense.expense_description = 'Post Cards, Posters'", "'the status of the event' refers to budget.event_status", "'on {1000}/{100}/{100}' refers to expense.expense_date = '1000-100-100'"]}, {"db_id": "student_club", "question": "What was Brent Thomason's major?", "evidence": "major refers to major_name", "SQL": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'", "question_toks": ["What", "was", "Brent", "Thomason", "'s", "major", "?"], "SQL_toks": ["SELECT", "T2.major_name", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T1.link_to_major", "=", "T2.major_id", "WHERE", "T1.first_name", "=", "'Brent", "'", "AND", "T1.last_name", "=", "'Thomason", "'"], "evidence_toks": ["major", "refers", "to", "major_name"], "difficulty": "simple", "templatized_domain_statements": ["'major' refers to major.major_name"]}, {"db_id": "student_club", "question": "What's Christof Nielson's zip code type?", "evidence": "", "SQL": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'", "question_toks": ["What", "'s", "Christof", "Nielson", "'s", "zip", "code", "type", "?"], "SQL_toks": ["SELECT", "T2.type", "FROM", "member", "AS", "T1", "INNER", "JOIN", "zip_code", "AS", "T2", "ON", "T1.zip", "=", "T2.zip_code", "WHERE", "T1.first_name", "=", "'Christof", "'", "AND", "T1.last_name", "=", "'Nielson", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": []}, {"db_id": "student_club", "question": "State the major name for the Vice President of the club.", "evidence": "'Vice President' is a position of Student Club", "SQL": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'", "question_toks": ["State", "the", "major", "name", "for", "the", "Vice", "President", "of", "the", "club", "."], "SQL_toks": ["SELECT", "T2.major_name", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T1.link_to_major", "=", "T2.major_id", "WHERE", "T1.position", "=", "'Vice", "President", "'"], "evidence_toks": ["'Vice", "President", "'", "is", "a", "position", "of", "Student", "Club"], "difficulty": "simple", "templatized_domain_statements": ["'for the Vice President' refers to member.position = 'Vice President'"]}, {"db_id": "student_club", "question": "Where is the hometown state for \"Sacha Harrison\"?", "evidence": "hometown state refers to state;", "SQL": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'", "question_toks": ["Where", "is", "the", "hometown", "state", "for", "``", "Sacha", "Harrison", "''", "?"], "SQL_toks": ["SELECT", "T2.state", "FROM", "member", "AS", "T1", "INNER", "JOIN", "zip_code", "AS", "T2", "ON", "T1.zip", "=", "T2.zip_code", "WHERE", "T1.first_name", "=", "'Sacha", "'", "AND", "T1.last_name", "=", "'Harrison", "'"], "evidence_toks": ["hometown", "state", "refers", "to", "state", ";"], "difficulty": "simple", "templatized_domain_statements": ["'Where is the hometown state' refers to zip_code.state"]}, {"db_id": "student_club", "question": "Who was the first one paid his/her dues? Tell the full name.", "evidence": "full name refers to first_name, last_name; first paid dues refers to MIN(received_date) where source = 'Dues'", "SQL": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.source = 'Dues' ORDER BY T2.date_received LIMIT 1", "question_toks": ["Who", "was", "the", "first", "one", "paid", "his/her", "dues", "?", "Tell", "the", "full", "name", "."], "SQL_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", "FROM", "member", "AS", "T1", "INNER", "JOIN", "income", "AS", "T2", "ON", "T1.member_id", "=", "T2.link_to_member", "WHERE", "T2.source", "=", "'Dues", "'", "ORDER", "BY", "T2.date_received", "LIMIT", "1"], "evidence_toks": ["full", "name", "refers", "to", "first_name", ",", "last_name", ";", "first", "paid", "dues", "refers", "to", "MIN", "(", "received_date", ")", "where", "source", "=", "'Dues", "'"], "difficulty": "simple", "templatized_domain_statements": ["'his/her dues' refers to income.source = 'Dues'", "'first paid' refers to ORDER BY income.date_received LIMIT 1"]}, {"db_id": "student_club", "question": "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?", "evidence": "DIVIDE(SUM(amount where category = 'Advertisement' and event_name = 'Yearly Kickoff'), SUM(amount event_name = 'October Meeting' and category = 'Advertisement'))", "SQL": "SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting'", "question_toks": ["How", "many", "times", "was", "the", "budget", "in", "Advertisement", "for", "``", "Yearly", "Kickoff", "''", "meeting", "more", "than", "``", "October", "Meeting", "''", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "T2.event_name", "=", "'Yearly", "Kickoff", "'", "THEN", "T1.amount", "ELSE", "0", "END", ")", "AS", "REAL", ")", "/", "SUM", "(", "CASE", "WHEN", "T2.event_name", "=", "'October", "Meeting", "'", "THEN", "T1.amount", "ELSE", "0", "END", ")", "FROM", "budget", "AS", "T1", "INNER", "JOIN", "event", "AS", "T2", "ON", "T1.link_to_event", "=", "T2.event_id", "WHERE", "T1.category", "=", "'Advertisement", "'", "AND", "T2.type", "=", "'Meeting", "'"], "evidence_toks": ["DIVIDE", "(", "SUM", "(", "amount", "where", "category", "=", "'Advertisement", "'", "and", "event_name", "=", "'Yearly", "Kickoff", "'", ")", ",", "SUM", "(", "amount", "event_name", "=", "'October", "Meeting", "'", "and", "category", "=", "'Advertisement", "'", ")", ")"], "difficulty": "challenging", "templatized_domain_statements": ["'Advertisement' refers to budget.category = 'Advertisement'", "'meeting' refers to event.type = 'Meeting'", "'budget in Advertisement for Yearly Kickoff' refers to SUM(CASE WHEN event.event_name = 'Yearly Kickoff' THEN budget.amount ELSE 0 END) AS REAL", "'budget in Advertisement for October Meeting' refers to SUM(CASE WHEN event.event_name = 'Yearly Kickoff' THEN budget.amount ELSE 0 END) AS REAL"]}, {"db_id": "student_club", "question": "What is the total cost of the pizzas for all the events?", "evidence": "total cost of the pizzas refers to SUM(cost) where expense_description = 'Pizza'", "SQL": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'", "question_toks": ["What", "is", "the", "total", "cost", "of", "the", "pizzas", "for", "all", "the", "events", "?"], "SQL_toks": ["SELECT", "SUM", "(", "cost", ")", "FROM", "expense", "WHERE", "expense_description", "=", "'Pizza", "'"], "evidence_toks": ["total", "cost", "of", "the", "pizzas", "refers", "to", "SUM", "(", "cost", ")", "where", "expense_description", "=", "'Pizza", "'"], "difficulty": "simple", "templatized_domain_statements": ["'total cost' refers to SUM(expense.cost)", "'expense on pizzas' refers to expense.expense_description = 'Pizza'"]}, {"db_id": "student_club", "question": "List all of the College of Humanities and Social Sciences' departments.", "evidence": "", "SQL": "SELECT department FROM major WHERE college = 'College of Humanities AND Social Sciences'", "question_toks": ["List", "all", "of", "the", "College", "of", "Humanities", "and", "Social", "Sciences", "'", "departments", "."], "SQL_toks": ["SELECT", "department", "FROM", "major", "WHERE", "college", "=", "'College", "of", "Humanities", "AND", "Social", "Sciences", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": []}, {"db_id": "student_club", "question": "Where is Amy Firth's hometown?", "evidence": "hometown refers to city, county, state", "SQL": "SELECT T2.city, T2.county, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'", "question_toks": ["Where", "is", "Amy", "Firth", "'s", "hometown", "?"], "SQL_toks": ["SELECT", "T2.city", ",", "T2.county", ",", "T2.state", "FROM", "member", "AS", "T1", "INNER", "JOIN", "zip_code", "AS", "T2", "ON", "T1.zip", "=", "T2.zip_code", "WHERE", "T1.first_name", "=", "'Amy", "'", "AND", "T1.last_name", "=", "'Firth", "'"], "evidence_toks": ["hometown", "refers", "to", "city", ",", "county", ",", "state"], "difficulty": "simple", "templatized_domain_statements": ["'hometown' refers to zip_code.city AND zip_code.county AND zip_code.state"]}, {"db_id": "student_club", "question": "What are the expenses of the budget with the lowest remaining?", "evidence": "expense of budget refers to expense_description; lowest remaining refers to MIN(remaining)", "SQL": "SELECT T2.expense_description FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget ORDER BY T1.remaining LIMIT 1", "question_toks": ["What", "are", "the", "expenses", "of", "the", "budget", "with", "the", "lowest", "remaining", "?"], "SQL_toks": ["SELECT", "T2.expense_description", "FROM", "budget", "AS", "T1", "INNER", "JOIN", "expense", "AS", "T2", "ON", "T1.budget_id", "=", "T2.link_to_budget", "ORDER", "BY", "T1.remaining", "LIMIT", "1"], "evidence_toks": ["expense", "of", "budget", "refers", "to", "expense_description", ";", "lowest", "remaining", "refers", "to", "MIN", "(", "remaining", ")"], "difficulty": "simple", "templatized_domain_statements": ["'expenses of the budget' refers to expense.expense_description", "'lowest remaining' refers to ORDER BY budget.remaining LIMIT 1"]}, {"db_id": "student_club", "question": "Which event has the highest budget amount?", "evidence": "event refers to event_name; highest budget amount refers to MAX(amount)", "SQL": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id ORDER BY T1.amount DESC LIMIT 1", "question_toks": ["Which", "event", "has", "the", "highest", "budget", "amount", "?"], "SQL_toks": ["SELECT", "T2.event_name", "FROM", "budget", "AS", "T1", "INNER", "JOIN", "event", "AS", "T2", "ON", "T1.link_to_event", "=", "T2.event_id", "ORDER", "BY", "T1.amount", "DESC", "LIMIT", "1"], "evidence_toks": ["event", "refers", "to", "event_name", ";", "highest", "budget", "amount", "refers", "to", "MAX", "(", "amount", ")"], "difficulty": "simple", "templatized_domain_statements": ["'all the members' refers to member.member_id", "'the event October Meeting' refers to event.event_name = 'October Meeting'"]}, {"db_id": "student_club", "question": "List all the expenses incurred by the vice president.", "evidence": "expense refers to expense_description; 'Vice President' is a position of the Student Club", "SQL": "SELECT T2.expense_id, T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'", "question_toks": ["List", "all", "the", "expenses", "incurred", "by", "the", "vice", "president", "."], "SQL_toks": ["SELECT", "T2.expense_id", ",", "T2.expense_description", "FROM", "member", "AS", "T1", "INNER", "JOIN", "expense", "AS", "T2", "ON", "T1.member_id", "=", "T2.link_to_member", "WHERE", "T1.position", "=", "'Vice", "President", "'"], "evidence_toks": ["expense", "refers", "to", "expense_description", ";", "'Vice", "President", "'", "is", "a", "position", "of", "the", "Student", "Club"], "difficulty": "simple", "templatized_domain_statements": ["'Which event' refers to event.event_name", "'highest budget amount' refers to ORDER BY budget.amount DESC LIMIT 1"]}, {"db_id": "student_club", "question": "When did the member, Casey Mason, received the income?", "evidence": "when the income was received refers to date_received", "SQL": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Casey' AND T1.last_name = 'Mason'", "question_toks": ["When", "did", "the", "member", ",", "Casey", "Mason", ",", "received", "the", "income", "?"], "SQL_toks": ["SELECT", "T2.date_received", "FROM", "member", "AS", "T1", "INNER", "JOIN", "income", "AS", "T2", "ON", "T1.member_id", "=", "T2.link_to_member", "WHERE", "T1.first_name", "=", "'Casey", "'", "AND", "T1.last_name", "=", "'Mason", "'"], "evidence_toks": ["when", "the", "income", "was", "received", "refers", "to", "date_received"], "difficulty": "simple", "templatized_domain_statements": ["'all the expenses incurred' refers to expense.expense_id AND expense.expense_description", "'by the vice president' refers to member.position = 'Vice President'"]}, {"db_id": "student_club", "question": "How many of the members' hometowns are from Maryland state?", "evidence": "", "SQL": "SELECT COUNT(T2.member_id) FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T1.state = 'Maryland'", "question_toks": ["How", "many", "of", "the", "members", "'", "hometowns", "are", "from", "Maryland", "state", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.member_id", ")", "FROM", "zip_code", "AS", "T1", "INNER", "JOIN", "member", "AS", "T2", "ON", "T1.zip_code", "=", "T2.zip", "WHERE", "T1.state", "=", "'Maryland", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'when did the member received the income' refers to income.date_received"]}, {"db_id": "student_club", "question": "How many events did the member with the phone number \"954-555-6240\" attend?", "evidence": "", "SQL": "SELECT COUNT(T2.link_to_event) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.phone = '954-555-6240'", "question_toks": ["How", "many", "events", "did", "the", "member", "with", "the", "phone", "number", "``", "954-555-6240", "''", "attend", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.link_to_event", ")", "FROM", "member", "AS", "T1", "INNER", "JOIN", "attendance", "AS", "T2", "ON", "T1.member_id", "=", "T2.link_to_member", "WHERE", "T1.phone", "=", "'954-555-6240", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": []}, {"db_id": "student_club", "question": "What is the highest amount of budget spend for an event?", "evidence": "highest amount of budget spend refers to MAX(spent)", "SQL": "SELECT MAX(spent) FROM budget", "question_toks": ["What", "is", "the", "highest", "amount", "of", "budget", "spend", "for", "an", "event", "?"], "SQL_toks": ["SELECT", "MAX", "(", "spent", ")", "FROM", "budget"], "evidence_toks": ["highest", "amount", "of", "budget", "spend", "refers", "to", "MAX", "(", "spent", ")"], "difficulty": "simple", "templatized_domain_statements": []}, {"db_id": "student_club", "question": "How many meeting events were held in 2020?", "evidence": "meeting events refers to type = 'Meeting'; held in 2020 refers to YEAR(event_date) = 2020", "SQL": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND SUBSTR(event_date, 1, 4) = '2020'", "question_toks": ["How", "many", "meeting", "events", "were", "held", "in", "2020", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "event_id", ")", "FROM", "event", "WHERE", "type", "=", "'Meeting", "'", "AND", "SUBSTR", "(", "event_date", ",", "1", ",", "4", ")", "=", "'2020", "'"], "evidence_toks": ["meeting", "events", "refers", "to", "type", "=", "'Meeting", "'", ";", "held", "in", "2020", "refers", "to", "YEAR", "(", "event_date", ")", "=", "2020"], "difficulty": "simple", "templatized_domain_statements": ["'budget spend' refers to budget.spent"]}, {"db_id": "student_club", "question": "What is the total amount of money spent for food?", "evidence": "total amount of money spent refers to SUM(spent); spent for food refers to category = 'Food'", "SQL": "SELECT SUM(spent) FROM budget WHERE category = 'Food'", "question_toks": ["What", "is", "the", "total", "amount", "of", "money", "spent", "for", "food", "?"], "SQL_toks": ["SELECT", "SUM", "(", "spent", ")", "FROM", "budget", "WHERE", "category", "=", "'Food", "'"], "evidence_toks": ["total", "amount", "of", "money", "spent", "refers", "to", "SUM", "(", "spent", ")", ";", "spent", "for", "food", "refers", "to", "category", "=", "'Food", "'"], "difficulty": "simple", "templatized_domain_statements": ["'meeting events' refers to event.type = 'Meeting'", "'events were held in {1000}' refers to SUBSTRING(event.event_date, 1, 4) = '1000'"]}, {"db_id": "student_club", "question": "Which student has been entrusted to manage the budget for the Football game?", "evidence": "'Football game' is an event name;", "SQL": "SELECT T4.first_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget INNER JOIN member AS T4 ON T3.link_to_member = T4.member_id WHERE T1.event_name = 'Football game'", "question_toks": ["Which", "student", "has", "been", "entrusted", "to", "manage", "the", "budget", "for", "the", "Football", "game", "?"], "SQL_toks": ["SELECT", "T4.first_name", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "INNER", "JOIN", "expense", "AS", "T3", "ON", "T2.budget_id", "=", "T3.link_to_budget", "INNER", "JOIN", "member", "AS", "T4", "ON", "T3.link_to_member", "=", "T4.member_id", "WHERE", "T1.event_name", "=", "'Football", "game", "'"], "evidence_toks": ["'Football", "game", "'", "is", "an", "event", "name", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'money spent' refers to budget.spent", "'spent for food' refers to budget.category = 'Food'"]}, {"db_id": "student_club", "question": "Which event has the lowest cost?", "evidence": "event refers to event_name where MIN(cost)", "SQL": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget ORDER BY T3.cost LIMIT 1", "question_toks": ["Which", "event", "has", "the", "lowest", "cost", "?"], "SQL_toks": ["SELECT", "T1.event_name", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "INNER", "JOIN", "expense", "AS", "T3", "ON", "T2.budget_id", "=", "T3.link_to_budget", "ORDER", "BY", "T3.cost", "LIMIT", "1"], "evidence_toks": ["event", "refers", "to", "event_name", "where", "MIN", "(", "cost", ")"], "difficulty": "simple", "templatized_domain_statements": ["'for the Football game' refers to event.event_name = 'Football game'"]}, {"db_id": "student_club", "question": "Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event?", "evidence": "DIVIDE(SUM(cost where event_name = 'Yearly Kickoff'), SUM(cost)) * 100", "SQL": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T3.cost ELSE 0 END) AS REAL) * 100 / SUM(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget", "question_toks": ["Based", "on", "the", "total", "cost", "for", "all", "event", ",", "what", "is", "the", "percentage", "of", "cost", "for", "Yearly", "Kickoff", "event", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "T1.event_name", "=", "'Yearly", "Kickoff", "'", "THEN", "T3.cost", "ELSE", "0", "END", ")", "AS", "REAL", ")", "*", "100", "/", "SUM", "(", "T3.cost", ")", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "INNER", "JOIN", "expense", "AS", "T3", "ON", "T2.budget_id", "=", "T3.link_to_budget"], "evidence_toks": ["DIVIDE", "(", "SUM", "(", "cost", "where", "event_name", "=", "'Yearly", "Kickoff", "'", ")", ",", "SUM", "(", "cost", ")", ")", "*", "100"], "difficulty": "moderate", "templatized_domain_statements": ["'lowest cost' refers to ORDER BY expense.cost LIMIT 1"]}, {"db_id": "student_club", "question": "What is the ratio between students majored in finance and physics?", "evidence": "DIVDE(SUM(major_name = 'Finance'), SUM(major_name = 'Physics'))", "SQL": "SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) AS ratio FROM major", "question_toks": ["What", "is", "the", "ratio", "between", "students", "majored", "in", "finance", "and", "physics", "?"], "SQL_toks": ["SELECT", "SUM", "(", "CASE", "WHEN", "major_name", "=", "'Finance", "'", "THEN", "1", "ELSE", "0", "END", ")", "/", "SUM", "(", "CASE", "WHEN", "major_name", "=", "'Physics", "'", "THEN", "1", "ELSE", "0", "END", ")", "AS", "ratio", "FROM", "major"], "evidence_toks": ["DIVDE", "(", "SUM", "(", "major_name", "=", "'Finance", "'", ")", ",", "SUM", "(", "major_name", "=", "'Physics", "'", ")", ")"], "difficulty": "simple", "templatized_domain_statements": ["'cost for Yearly Kickoff event' refers to CAST(SUM(CASE WHEN event.event_name = 'Yearly Kickoff' THEN expense.cost ELSE 0 END) AS REAL) / SUM(expense.cost)"]}, {"db_id": "student_club", "question": "How many members of the Student_Club have major in 'Physics Teaching'?", "evidence": "'Physics Teaching' is the major name;", "SQL": "SELECT COUNT(T2.member_id) FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Physics Teaching'", "question_toks": ["How", "many", "members", "of", "the", "Student_Club", "have", "major", "in", "'Physics", "Teaching", "'", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.member_id", ")", "FROM", "major", "AS", "T1", "INNER", "JOIN", "member", "AS", "T2", "ON", "T1.major_id", "=", "T2.link_to_major", "WHERE", "T1.major_name", "=", "'Physics", "Teaching", "'"], "evidence_toks": ["'Physics", "Teaching", "'", "is", "the", "major", "name", ";"], "difficulty": "simple", "templatized_domain_statements": ["'students majored in finance and physics' refers to SUM(CASE WHEN major.major_name = 'Finance' THEN 1 ELSE 0 END)"]}, {"db_id": "student_club", "question": "Among all events hold by the Student_Club in 2019, find the percentage share of events related to 'Community Service'", "evidence": "DIVIDE(SUM(type = 'Community Service'), COUNT(event_id)) * 100 where event_date BETWEEN' 2019-01-01' and '2019-12-31'", "SQL": "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(type) FROM event WHERE SUBSTR(event_date, 1, 4) = '2019'", "question_toks": ["Among", "all", "events", "hold", "by", "the", "Student_Club", "in", "2019", ",", "find", "the", "percentage", "share", "of", "events", "related", "to", "'Community", "Service", "'"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "type", "=", "'Community", "Service", "'", "THEN", "1", "ELSE", "0", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "type", ")", "FROM", "event", "WHERE", "SUBSTR", "(", "event_date", ",", "1", ",", "4", ")", "=", "'2019", "'"], "evidence_toks": ["DIVIDE", "(", "SUM", "(", "type", "=", "'Community", "Service", "'", ")", ",", "COUNT", "(", "event_id", ")", ")", "*", "100", "where", "event_date", "BETWEEN", "'", "2019-01-01", "'", "and", "'2019-12-31", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'major in Physics Teaching' refers to major.major_name = 'Physics Teaching'"]}, {"db_id": "student_club", "question": "What is the most popular size of t-shirt ordered by the club members?", "evidence": "most popular size of t-shirt ordered refers to MAX(COUNT(t_shirt_size))", "SQL": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1", "question_toks": ["What", "is", "the", "most", "popular", "size", "of", "t-shirt", "ordered", "by", "the", "club", "members", "?"], "SQL_toks": ["SELECT", "t_shirt_size", "FROM", "member", "GROUP", "BY", "t_shirt_size", "ORDER", "BY", "COUNT", "(", "t_shirt_size", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["most", "popular", "size", "of", "t-shirt", "ordered", "refers", "to", "MAX", "(", "COUNT", "(", "t_shirt_size", ")", ")"], "difficulty": "simple", "templatized_domain_statements": ["'events related to Community Service' refers to CAST(SUM(CASE WHEN event.type = 'Community Service' THEN 1 ELSE 0 END) AS REAL)"]}, {"db_id": "student_club", "question": "Indicate the name of the closed event whose cost has exceeded the budget the most.", "evidence": "closed events refers to event_name where status = 'Closed'; exceed the budget the most refers to MIN(remaining) where remaining < 0", "SQL": "SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event WHERE T1.event_status = 'Closed' AND T1.remaining < 0 ORDER BY T1.remaining LIMIT 1", "question_toks": ["Indicate", "the", "name", "of", "the", "closed", "event", "whose", "cost", "has", "exceeded", "the", "budget", "the", "most", "."], "SQL_toks": ["SELECT", "T2.event_name", "FROM", "budget", "AS", "T1", "INNER", "JOIN", "event", "AS", "T2", "ON", "T2.event_id", "=", "T1.link_to_event", "WHERE", "T1.event_status", "=", "'Closed", "'", "AND", "T1.remaining", "<", "0", "ORDER", "BY", "T1.remaining", "LIMIT", "1"], "evidence_toks": ["closed", "events", "refers", "to", "event_name", "where", "status", "=", "'Closed", "'", ";", "exceed", "the", "budget", "the", "most", "refers", "to", "MIN", "(", "remaining", ")", "where", "remaining", "<", "0"], "difficulty": "moderate", "templatized_domain_statements": ["'most popular size of t-shirt ordered' refers to ORDER BY COUNT(member.t_shirt_size) DESC LIMIT 1"]}, {"db_id": "student_club", "question": "Identify the type of expenses and their total value approved for 'October Meeting' event.", "evidence": "total value refers to SUM(cost); type of expenses refers to expense_description; 'October Meeting' is an event name;", "SQL": "SELECT T1.type, SUM(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'October Meeting'", "question_toks": ["Identify", "the", "type", "of", "expenses", "and", "their", "total", "value", "approved", "for", "'October", "Meeting", "'", "event", "."], "SQL_toks": ["SELECT", "T1.type", ",", "SUM", "(", "T3.cost", ")", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "INNER", "JOIN", "expense", "AS", "T3", "ON", "T2.budget_id", "=", "T3.link_to_budget", "WHERE", "T1.event_name", "=", "'October", "Meeting", "'"], "evidence_toks": ["total", "value", "refers", "to", "SUM", "(", "cost", ")", ";", "type", "of", "expenses", "refers", "to", "expense_description", ";", "'October", "Meeting", "'", "is", "an", "event", "name", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'closed event' refers to event_status = 'Closed'", "'name of the event' refers to event.event_name", "'exceeded the budget' refers to budget.remaining < 0"]}, {"db_id": "student_club", "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount.", "evidence": "'April Speaker' is an event name; amount budgeted refers to budget; budget categories refers to category", "SQL": "SELECT SUM(T2.amount), T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' ORDER BY T2.amount", "question_toks": ["Calculate", "the", "amount", "budgeted", "for", "'April", "Speaker", "'", "event", ".", "List", "all", "the", "budgeted", "categories", "for", "said", "event", "in", "an", "ascending", "order", "based", "on", "their", "amount", "."], "SQL_toks": ["SELECT", "SUM", "(", "T2.amount", ")", ",", "T2.category", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "WHERE", "T1.event_name", "=", "'April", "Speaker", "'", "ORDER", "BY", "T2.amount"], "evidence_toks": ["'April", "Speaker", "'", "is", "an", "event", "name", ";", "amount", "budgeted", "refers", "to", "budget", ";", "budget", "categories", "refers", "to", "category"], "difficulty": "moderate", "templatized_domain_statements": ["'total value refers' to SUM(expense.cost)", "'type of expenses' refers to expense.expense_description", "'for October Meeting event' refers to event.event_name = 'October Meeting'"]}, {"db_id": "student_club", "question": "Among the budgets for Advertising, list out top three which have the most budgeted amount?", "evidence": "MAX(amount) where category = 'Advertising'", "SQL": "SELECT budget_id FROM budget WHERE category = 'Advertising' ORDER BY amount DESC LIMIT 3", "question_toks": ["Among", "the", "budgets", "for", "Advertising", ",", "list", "out", "top", "three", "which", "have", "the", "most", "budgeted", "amount", "?"], "SQL_toks": ["SELECT", "budget_id", "FROM", "budget", "WHERE", "category", "=", "'Advertising", "'", "ORDER", "BY", "amount", "DESC", "LIMIT", "3"], "evidence_toks": ["MAX", "(", "amount", ")", "where", "category", "=", "'Advertising", "'"], "difficulty": "simple", "templatized_domain_statements": ["'for April Speaker event' refers to event.event_name = 'April Speaker'", "'The budget amount' refers to budget.amount", "'budget categories' refers to budget.category", "'in an ascending order based on their amount' refers to ORDER BY budget.amount"]}, {"db_id": "student_club", "question": "Mention the total expense used on 8/20/2019.", "evidence": "total expense refers SUM(cost) where expense_date = '2019-08-20'", "SQL": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'", "question_toks": ["Mention", "the", "total", "expense", "used", "on", "8/20/2019", "."], "SQL_toks": ["SELECT", "SUM", "(", "cost", ")", "FROM", "expense", "WHERE", "expense_date", "=", "'2019-08-20", "'"], "evidence_toks": ["total", "expense", "refers", "SUM", "(", "cost", ")", "where", "expense_date", "=", "'2019-08-20", "'"], "difficulty": "simple", "templatized_domain_statements": ["'top three which have the most budgeted amount' refers to ORDER BY budget.amount DESC LIMIT 3"]}, {"db_id": "student_club", "question": "List out the position of members who joined major of Journalism.", "evidence": "'Journalism' is the major name", "SQL": "SELECT T2.position FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Journalism'", "question_toks": ["List", "out", "the", "position", "of", "members", "who", "joined", "major", "of", "Journalism", "."], "SQL_toks": ["SELECT", "T2.position", "FROM", "major", "AS", "T1", "INNER", "JOIN", "member", "AS", "T2", "ON", "T1.major_id", "=", "T2.link_to_major", "WHERE", "T1.major_name", "=", "'Journalism", "'"], "evidence_toks": ["'Journalism", "'", "is", "the", "major", "name"], "difficulty": "simple", "templatized_domain_statements": ["'total expense' refers to SUM(expense.cost)", "'on 100/100/1000' refers to expense.expense_date = '1000-100-100'"]}, {"db_id": "student_club", "question": "Mention the category of events which were held at MU 215.", "evidence": "held at MU 215 refers to location = 'MU 215'", "SQL": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215'", "question_toks": ["Mention", "the", "category", "of", "events", "which", "were", "held", "at", "MU", "215", "."], "SQL_toks": ["SELECT", "T2.category", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "WHERE", "T1.location", "=", "'MU", "215", "'"], "evidence_toks": ["held", "at", "MU", "215", "refers", "to", "location", "=", "'MU", "215", "'"], "difficulty": "simple", "templatized_domain_statements": ["'major of Journalism' refers to major.major_name = 'Journalism'"]}, {"db_id": "student_club", "question": "What is the category of event which was taken place in 2020-03-24T12:00:00?", "evidence": "taken place in 2020-03-24T12:00:00 refers to event_date = '2020-03-24T12:00:00'", "SQL": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_date = '2020-03-24T12:00:00'", "question_toks": ["What", "is", "the", "category", "of", "event", "which", "was", "taken", "place", "in", "2020-03-24T12:00:00", "?"], "SQL_toks": ["SELECT", "T2.category", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "WHERE", "T1.event_date", "=", "'2020-03-24T12:00:00", "'"], "evidence_toks": ["taken", "place", "in", "2020-03-24T12:00:00", "refers", "to", "event_date", "=", "'2020-03-24T12:00:00", "'"], "difficulty": "simple", "templatized_domain_statements": ["'were held at MU 215' refers to event.location = 'MU 215'"]}, {"db_id": "student_club", "question": "State the category of events were held at 100 W. Main Street.", "evidence": "'100 W. Main Street' is the location of event", "SQL": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = '100 W. Main Street'", "question_toks": ["State", "the", "category", "of", "events", "were", "held", "at", "100", "W.", "Main", "Street", "."], "SQL_toks": ["SELECT", "T2.category", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "WHERE", "T1.location", "=", "'100", "W.", "Main", "Street", "'"], "evidence_toks": ["'100", "W.", "Main", "Street", "'", "is", "the", "location", "of", "event"], "difficulty": "simple", "templatized_domain_statements": ["taken place in 1000-100-100T100:100:100 refers to event.event_date = '1000-100-100T100:100:100'"]}, {"db_id": "student_club", "question": "Among the members, how many of them have an extra large t-shirt size?", "evidence": "among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'", "SQL": "SELECT COUNT(member_id) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'", "question_toks": ["Among", "the", "members", ",", "how", "many", "of", "them", "have", "an", "extra", "large", "t-shirt", "size", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "member_id", ")", "FROM", "member", "WHERE", "position", "=", "'Member", "'", "AND", "t_shirt_size", "=", "'", "X-Large", "'"], "evidence_toks": ["among", "the", "members", "refers", "to", "position", "=", "'Member", "'", ";", "extra", "large", "t-shirt", "size", "refers", "to", "t_shirt_size", "=", "'", "X-Large", "'"], "difficulty": "simple", "templatized_domain_statements": ["were held at 100 W. Main Street' refers to event.location = '100 W. Main Street'"]}, {"db_id": "student_club", "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?", "evidence": "", "SQL": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology AND Education' AND college = 'College of Agriculture AND Applied Sciences'", "question_toks": ["In", "the", "College", "of", "Agriculture", "and", "Applied", "Sciences", ",", "how", "many", "majors", "are", "under", "the", "department", "of", "School", "of", "Applied", "Sciences", ",", "Technology", "and", "Education", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "major_id", ")", "FROM", "major", "WHERE", "department", "=", "'School", "of", "Applied", "Sciences", ",", "Technology", "AND", "Education", "'", "AND", "college", "=", "'College", "of", "Agriculture", "AND", "Applied", "Sciences", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'Among the members' refers to member.position = 'Member'", "'extra large t-shirt size' refers to t_shirt_size = 'X-Large'"]}, {"db_id": "student_club", "question": "List the last name of members with a major in environmental engineering and include its department and college name.", "evidence": "'Environmental Engineering' is the major name;", "SQL": "SELECT T2.last_name, T1.department, T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Member' AND T1.major_name = 'Environmental Engineering'", "question_toks": ["List", "the", "last", "name", "of", "members", "with", "a", "major", "in", "environmental", "engineering", "and", "include", "its", "department", "and", "college", "name", "."], "SQL_toks": ["SELECT", "T2.last_name", ",", "T1.department", ",", "T1.college", "FROM", "major", "AS", "T1", "INNER", "JOIN", "member", "AS", "T2", "ON", "T1.major_id", "=", "T2.link_to_major", "WHERE", "T2.position", "=", "'Member", "'", "AND", "T1.major_name", "=", "'Environmental", "Engineering", "'"], "evidence_toks": ["'Environmental", "Engineering", "'", "is", "the", "major", "name", ";"], "difficulty": "moderate", "templatized_domain_statements": []}, {"db_id": "student_club", "question": "What are the budget category of the events located at MU 215 and a guest speaker type with a 0 budget spent?", "evidence": "budget category refers to category; events located at refers to location; type = 'Guest Speaker'; 0 budget spent refers to spent = 0", "SQL": "SELECT DISTINCT T2.category, T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T2.spent = 0 AND T1.type = 'Guest Speaker'", "question_toks": ["What", "are", "the", "budget", "category", "of", "the", "events", "located", "at", "MU", "215", "and", "a", "guest", "speaker", "type", "with", "a", "0", "budget", "spent", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T2.category", ",", "T1.type", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "WHERE", "T1.location", "=", "'MU", "215", "'", "AND", "T2.spent", "=", "0", "AND", "T1.type", "=", "'Guest", "Speaker", "'"], "evidence_toks": ["budget", "category", "refers", "to", "category", ";", "events", "located", "at", "refers", "to", "location", ";", "type", "=", "'Guest", "Speaker", "'", ";", "0", "budget", "spent", "refers", "to", "spent", "=", "0"], "difficulty": "moderate", "templatized_domain_statements": ["'with a major in environmental engineering' refers to major.major_name = 'Environmental Engineering'"]}, {"db_id": "student_club", "question": "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?", "evidence": "name of social event refers to event_name where type = 'Social'; 'Vice President' is position; located at refers to location", "SQL": "SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social'", "question_toks": ["What", "is", "the", "name", "of", "the", "social", "event", "that", "was", "attended", "by", "the", "vice", "president", "of", "the", "Student_Club", "located", "at", "900", "E.", "Washington", "St.", "?"], "SQL_toks": ["SELECT", "T2.event_name", "FROM", "attendance", "AS", "T1", "INNER", "JOIN", "event", "AS", "T2", "ON", "T2.event_id", "=", "T1.link_to_event", "INNER", "JOIN", "member", "AS", "T3", "ON", "T1.link_to_member", "=", "T3.member_id", "WHERE", "T3.position", "=", "'Vice", "President", "'", "AND", "T2.location", "=", "'900", "E.", "Washington", "St.", "'", "AND", "T2.type", "=", "'Social", "'"], "evidence_toks": ["name", "of", "social", "event", "refers", "to", "event_name", "where", "type", "=", "'Social", "'", ";", "'Vice", "President", "'", "is", "position", ";", "located", "at", "refers", "to", "location"], "difficulty": "challenging", "templatized_domain_statements": ["'budget category of the events' refers to budget.category", "'events located at MU 215' refers to event.location = 'MU 215'", "'a guest speaker type' refers to event.type = 'Guest Speaker'", "'with 0 budget spent' refers to budget.spent = 0"]}, {"db_id": "student_club", "question": "List the last name of the members of the club that attended the women's soccer event.", "evidence": "members of the club refers to position = 'Member'; 'Women's Soccer' is event name;", "SQL": "SELECT T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer' AND T3.position = 'Member'", "question_toks": ["List", "the", "last", "name", "of", "the", "members", "of", "the", "club", "that", "attended", "the", "women", "'s", "soccer", "event", "."], "SQL_toks": ["SELECT", "T3.last_name", "FROM", "attendance", "AS", "T1", "INNER", "JOIN", "event", "AS", "T2", "ON", "T2.event_id", "=", "T1.link_to_event", "INNER", "JOIN", "member", "AS", "T3", "ON", "T1.link_to_member", "=", "T3.member_id", "WHERE", "T2.event_name", "=", "'Women", "''", "s", "Soccer", "'", "AND", "T3.position", "=", "'Member", "'"], "evidence_toks": ["members", "of", "the", "club", "refers", "to", "position", "=", "'Member", "'", ";", "'Women", "'s", "Soccer", "'", "is", "event", "name", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'What is the name of the event' refers to event.event_name where type = 'Social'", "'social event' refers to event.type = 'Social'", "'vice president of the Student_Club' is member.position = 'Vice President'", "'located at 900 E. Washington St.' refers to event.location = '900 E. Washington St.'"]}, {"db_id": "student_club", "question": "Which countries have zip codes with post office boxes?", "evidence": "zip codes that have post office boxes refers to type = 'PO Box'", "SQL": "SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box' AND county IS NOT NULL", "question_toks": ["Which", "countries", "have", "zip", "codes", "with", "post", "office", "boxes", "?"], "SQL_toks": ["SELECT", "DISTINCT", "county", "FROM", "zip_code", "WHERE", "type", "=", "'PO", "Box", "'", "AND", "county", "IS", "NOT", "NULL"], "evidence_toks": ["zip", "codes", "that", "have", "post", "office", "boxes", "refers", "to", "type", "=", "'PO", "Box", "'"], "difficulty": "simple", "templatized_domain_statements": ["'members of the club' refers to member.position = 'Member'", "'attended the women's soccer event' refers to event.event_name = 'Women's Soccer'"]}, {"db_id": "student_club", "question": "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.", "evidence": "name of events refers event_name; game event that was closed refers to type = 'Game' where status = 'Closed'; event_date BETWEEN '2019-03-15' and '2020-05-20'", "SQL": "SELECT DISTINCT event_name FROM event WHERE type = 'Game' AND date(SUBSTR(event_date, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20' AND status = 'Closed'", "question_toks": ["List", "the", "names", "of", "closed", "event", "as", "``", "game", "''", "that", "was", "closed", "from", "3/15/2019", "to", "3/20/2020", "."], "SQL_toks": ["SELECT", "DISTINCT", "event_name", "FROM", "event", "WHERE", "type", "=", "'Game", "'", "AND", "date", "(", "SUBSTR", "(", "event_date", ",", "1", ",", "10", ")", ")", "BETWEEN", "'2019-03-15", "'", "AND", "'2020-03-20", "'", "AND", "status", "=", "'Closed", "'"], "evidence_toks": ["name", "of", "events", "refers", "event_name", ";", "game", "event", "that", "was", "closed", "refers", "to", "type", "=", "'Game", "'", "where", "status", "=", "'Closed", "'", ";", "event_date", "BETWEEN", "'2019-03-15", "'", "and", "'2020-05-20", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'zip codes with post office boxes' refers to zip_code.type = 'PO Box'"]}, {"db_id": "student_club", "question": "Please provide links to events for members who have paid more than 50 dollar.", "evidence": "have paid more than 50 dollar refers to cost > 50", "SQL": "SELECT DISTINCT T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE T1.cost > 50", "question_toks": ["Please", "provide", "links", "to", "events", "for", "members", "who", "have", "paid", "more", "than", "50", "dollar", "."], "SQL_toks": ["SELECT", "DISTINCT", "T3.link_to_event", "FROM", "expense", "AS", "T1", "INNER", "JOIN", "member", "AS", "T2", "ON", "T1.link_to_member", "=", "T2.member_id", "INNER", "JOIN", "attendance", "AS", "T3", "ON", "T2.member_id", "=", "T3.link_to_member", "WHERE", "T1.cost", ">", "50"], "evidence_toks": ["have", "paid", "more", "than", "50", "dollar", "refers", "to", "cost", ">", "50"], "difficulty": "simple", "templatized_domain_statements": ["'name of events' refers event.event_name", "'game event' refers to event.type = 'Game'", "'event that was closed' refers to event.status = 'Closed'", "'from {100}/{100}/{1000} to {100}/{100}/{1000}' refers to date(SUBSTR(event.event_date, 1, 10)) BETWEEN '1000-100-100' AND '1000-100-100'"]}, {"db_id": "student_club", "question": "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.", "evidence": "approved from 1/10/2019 to 11/19/2019 refers to approved = 'true' and expense_date BETWEEN '2019-01-19' and '2019-11-19'", "SQL": "SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2020-11-19' AND T1.approved = 'true'", "question_toks": ["Which", "members", "who", "were", "approved", "from", "1/10/2019", "to", "11/19/2019", "?", "Please", "identify", "the", "member", "who", "attended", "the", "event", "and", "the", "link", "to", "their", "event", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.link_to_member", ",", "T3.link_to_event", "FROM", "expense", "AS", "T1", "INNER", "JOIN", "member", "AS", "T2", "ON", "T1.link_to_member", "=", "T2.member_id", "INNER", "JOIN", "attendance", "AS", "T3", "ON", "T2.member_id", "=", "T3.link_to_member", "WHERE", "date", "(", "SUBSTR", "(", "T1.expense_date", ",", "1", ",", "10", ")", ")", "BETWEEN", "'2019-01-10", "'", "AND", "'2020-11-19", "'", "AND", "T1.approved", "=", "'true", "'"], "evidence_toks": ["approved", "from", "1/10/2019", "to", "11/19/2019", "refers", "to", "approved", "=", "'true", "'", "and", "expense_date", "BETWEEN", "'2019-01-19", "'", "and", "'2019-11-19", "'"], "difficulty": "challenging", "templatized_domain_statements": ["'paid more than {100} dollar' refers to expense.cost > 100"]}, {"db_id": "student_club", "question": "Please list the phone numbers of the members who majored in finance at the School of Business.", "evidence": "'School of Business' is the college; majored in finance refers to major_name = 'Finance'; phone numbers refers to phone", "SQL": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Finance' AND T2.college = 'School of Business'", "question_toks": ["Please", "list", "the", "phone", "numbers", "of", "the", "members", "who", "majored", "in", "finance", "at", "the", "School", "of", "Business", "."], "SQL_toks": ["SELECT", "T1.phone", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T2.major_id", "=", "T1.link_to_major", "WHERE", "T2.major_name", "=", "'Finance", "'", "AND", "T2.college", "=", "'School", "of", "Business", "'"], "evidence_toks": ["'School", "of", "Business", "'", "is", "the", "college", ";", "majored", "in", "finance", "refers", "to", "major_name", "=", "'Finance", "'", ";", "phone", "numbers", "refers", "to", "phone"], "difficulty": "moderate", "templatized_domain_statements": ["'members who were approved' refers to expense.approved = 'true'", "'from {100}/{100}/{1000} to {100}/{100}/{1000}' refers to expense.expense_date BETWEEN '1000-100-100' AND '1000-100-100'", "'the link to their event' refers to attendance.link_to_event"]}, {"db_id": "student_club", "question": "List emails of people who paid more than 20 dollars from 9/10/2019 to 11/19/2019.", "evidence": "expense_date BETWEEN '2019-09-10' and '2019-11-19'; cost > 20", "SQL": "SELECT DISTINCT T1.email FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE date(SUBSTR(T2.expense_date, 1, 10)) BETWEEN '2019-09-10' AND '2020-11-19' AND T2.cost > 20", "question_toks": ["List", "emails", "of", "people", "who", "paid", "more", "than", "20", "dollars", "from", "9/10/2019", "to", "11/19/2019", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.email", "FROM", "member", "AS", "T1", "INNER", "JOIN", "expense", "AS", "T2", "ON", "T1.member_id", "=", "T2.link_to_member", "WHERE", "date", "(", "SUBSTR", "(", "T2.expense_date", ",", "1", ",", "10", ")", ")", "BETWEEN", "'2019-09-10", "'", "AND", "'2020-11-19", "'", "AND", "T2.cost", ">", "20"], "evidence_toks": ["expense_date", "BETWEEN", "'2019-09-10", "'", "and", "'2019-11-19", "'", ";", "cost", ">", "20"], "difficulty": "moderate", "templatized_domain_statements": ["'at the School of Business' refers to major.college = 'School of Business'", "'majored in finance' refers to major.major_name = 'Finance'", "'list the phone numbers of the members' refers to member.phone"]}, {"db_id": "student_club", "question": "Give the event ID, location, and status of events conducted from November 2019 to March 2020.", "evidence": "event_date BETWEEN '2019-01-11' and '2020-03-31'", "SQL": "SELECT event_id, location, status FROM event WHERE date(SUBSTR(event_date, 1, 10)) BETWEEN '2019-01-11' AND '2020-03-31'", "question_toks": ["Give", "the", "event", "ID", ",", "location", ",", "and", "status", "of", "events", "conducted", "from", "November", "2019", "to", "March", "2020", "."], "SQL_toks": ["SELECT", "event_id", ",", "location", ",", "status", "FROM", "event", "WHERE", "date", "(", "SUBSTR", "(", "event_date", ",", "1", ",", "10", ")", ")", "BETWEEN", "'2019-01-11", "'", "AND", "'2020-03-31", "'"], "evidence_toks": ["event_date", "BETWEEN", "'2019-01-11", "'", "and", "'2020-03-31", "'"], "difficulty": "simple", "templatized_domain_statements": ["'from {100}/{100}/{1000} to {100}/{100}/{1000}' refers to date(SUBSTR(expense.expense_date, 1, 10)) BETWEEN '1000-100-100' AND '1000-100-100'", "'paid more than {100} dollars' refers to expense.cost > 100"]}, {"db_id": "student_club", "question": "Find the full name of members whose t-shirt size is extra large.", "evidence": "full name refers to first_name, last_name; t_shirt_size = 'X-Large'", "SQL": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large'", "question_toks": ["Find", "the", "full", "name", "of", "members", "whose", "t-shirt", "size", "is", "extra", "large", "."], "SQL_toks": ["SELECT", "first_name", ",", "last_name", "FROM", "member", "WHERE", "t_shirt_size", "=", "'", "X-Large", "'"], "evidence_toks": ["full", "name", "refers", "to", "first_name", ",", "last_name", ";", "t_shirt_size", "=", "'", "X-Large", "'"], "difficulty": "simple", "templatized_domain_statements": ["Events conducted from November {1000} to March {1000} refers to date(SUBSTR(event.event_date, 1, 10)) BETWEEN '1000-01-11' AND '1000-03-31'"]}, {"db_id": "student_club", "question": "Calculate the percentage of zip codes that are PO boxes.", "evidence": "DIVIDE(SUM(type = 'PO Box'), COUNT(zip_code)) * 100", "SQL": "SELECT CAST(SUM(CASE WHEN type = 'PO box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(zip_code) FROM zip_code", "question_toks": ["Calculate", "the", "percentage", "of", "zip", "codes", "that", "are", "PO", "boxes", "."], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "type", "=", "'PO", "box", "'", "THEN", "1", "ELSE", "0", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "zip_code", ")", "FROM", "zip_code"], "evidence_toks": ["DIVIDE", "(", "SUM", "(", "type", "=", "'PO", "Box", "'", ")", ",", "COUNT", "(", "zip_code", ")", ")", "*", "100"], "difficulty": "simple", "templatized_domain_statements": ["'full name of members' refers to member.first_name AND member.last_name", "'t-shirt size is extra large' refers to 'member.t_shirt_size = 'X-Large''"]}, {"db_id": "student_club", "question": "List the name and location of events that underspend its budget.", "evidence": "name of event refers to event_name; underspend its budget refers to remaining > 0", "SQL": "SELECT DISTINCT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 0", "question_toks": ["List", "the", "name", "and", "location", "of", "events", "that", "underspend", "its", "budget", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.event_name", ",", "T1.location", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "WHERE", "T2.remaining", ">", "0"], "evidence_toks": ["name", "of", "event", "refers", "to", "event_name", ";", "underspend", "its", "budget", "refers", "to", "remaining", ">", "0"], "difficulty": "simple", "templatized_domain_statements": ["'number of zip codes that are PO boxes' refers to CAST(SUM(CASE WHEN zip_code.type = 'PO box' THEN 1 ELSE 0 END) AS REAL)"]}, {"db_id": "student_club", "question": "What is the name and major of members who had to spend more than a hundred dollars on an expense?", "evidence": "full name refers to first_name, last_name; major of members refers to major_name; spend more than a hundred dollars on an expense refers to cost > 100", "SQL": "SELECT DISTINCT T1.first_name, T1.last_name, T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major INNER JOIN expense AS T3 ON T1.member_id = T3.link_to_member WHERE T3.cost > 100", "question_toks": ["What", "is", "the", "name", "and", "major", "of", "members", "who", "had", "to", "spend", "more", "than", "a", "hundred", "dollars", "on", "an", "expense", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.first_name", ",", "T1.last_name", ",", "T2.major_name", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T2.major_id", "=", "T1.link_to_major", "INNER", "JOIN", "expense", "AS", "T3", "ON", "T1.member_id", "=", "T3.link_to_member", "WHERE", "T3.cost", ">", "100"], "evidence_toks": ["full", "name", "refers", "to", "first_name", ",", "last_name", ";", "major", "of", "members", "refers", "to", "major_name", ";", "spend", "more", "than", "a", "hundred", "dollars", "on", "an", "expense", "refers", "to", "cost", ">", "100"], "difficulty": "moderate", "templatized_domain_statements": ["'name of event' refers to DISTINCT event.event_name", "'location of event' refers to DISTINCT event.location", "'underspend its budget' refers to budget.remaining > 0"]}, {"db_id": "student_club", "question": "In the events with more than fifty incomes, list the city and country in which the event is happening.", "evidence": "more than fifty incomes refers to income > 50", "SQL": "SELECT DISTINCT T3.city, T3.county FROM income AS T1 INNER JOIN member AS T2 INNER JOIN zip_code AS T3 ON T3.zip_code = T2.zip WHERE T1.amount > 50", "question_toks": ["In", "the", "events", "with", "more", "than", "fifty", "incomes", ",", "list", "the", "city", "and", "country", "in", "which", "the", "event", "is", "happening", "."], "SQL_toks": ["SELECT", "DISTINCT", "T3.city", ",", "T3.county", "FROM", "income", "AS", "T1", "INNER", "JOIN", "member", "AS", "T2", "INNER", "JOIN", "zip_code", "AS", "T3", "ON", "T3.zip_code", "=", "T2.zip", "WHERE", "T1.amount", ">", "50"], "evidence_toks": ["more", "than", "fifty", "incomes", "refers", "to", "income", ">", "50"], "difficulty": "simple", "templatized_domain_statements": ["'name of members' refers to member.first_name AND member.last_name", "'major of members' refers to major.major_name", "'spend more than a hundred dollars on an expense' refers to expense.cost > 100"]}, {"db_id": "student_club", "question": "What is the average amount paid by students in a position other than a member?", "evidence": "position other than a member refers to position ! = 'Member'; average amount paid = DIVIDE( SUM(cost), COUNT(event_id))", "SQL": "SELECT CAST(SUM(CASE WHEN T2.position != 'Member' THEN T1.cost ELSE 0 END) AS REAL) / SUM(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id", "question_toks": ["What", "is", "the", "average", "amount", "paid", "by", "students", "in", "a", "position", "other", "than", "a", "member", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "T2.position", "!", "=", "'Member", "'", "THEN", "T1.cost", "ELSE", "0", "END", ")", "AS", "REAL", ")", "/", "SUM", "(", "T1.cost", ")", "FROM", "expense", "AS", "T1", "INNER", "JOIN", "member", "AS", "T2", "ON", "T1.link_to_member", "=", "T2.member_id", "INNER", "JOIN", "budget", "AS", "T3", "ON", "T1.link_to_budget", "=", "T3.budget_id", "INNER", "JOIN", "event", "AS", "T4", "ON", "T3.link_to_event", "=", "T4.event_id"], "evidence_toks": ["position", "other", "than", "a", "member", "refers", "to", "position", "!", "=", "'Member", "'", ";", "average", "amount", "paid", "=", "DIVIDE", "(", "SUM", "(", "cost", ")", ",", "COUNT", "(", "event_id", ")", ")"], "difficulty": "challenging", "templatized_domain_statements": ["'more than fifty incomes' refers to income.amount > 50."]}, {"db_id": "student_club", "question": "What is the percentage of the cost for the game events?", "evidence": "game events refers to type = 'Game'; percentage = DIVIDE( SUM(cost), COUNT(event_id)) * 100", "SQL": "SELECT SUM(CASE WHEN T1.type = 'Game' THEN T3.cost ELSE 0 END) / SUM(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget", "question_toks": ["What", "is", "the", "percentage", "of", "the", "cost", "for", "the", "game", "events", "?"], "SQL_toks": ["SELECT", "SUM", "(", "CASE", "WHEN", "T1.type", "=", "'Game", "'", "THEN", "T3.cost", "ELSE", "0", "END", ")", "/", "SUM", "(", "T3.cost", ")", "FROM", "event", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.event_id", "=", "T2.link_to_event", "INNER", "JOIN", "expense", "AS", "T3", "ON", "T2.budget_id", "=", "T3.link_to_budget"], "evidence_toks": ["game", "events", "refers", "to", "type", "=", "'Game", "'", ";", "percentage", "=", "DIVIDE", "(", "SUM", "(", "cost", ")", ",", "COUNT", "(", "event_id", ")", ")", "*", "100"], "difficulty": "moderate", "templatized_domain_statements": ["'position other than a member' refers to member.position != 'Member'", "'amount paid by students in a position other than a member' refers to CAST(SUM(CASE WHEN T2.position != 'Member' THEN T1.cost ELSE 0 END) AS REAL)"]}, {"db_id": "student_club", "question": "Calculate the difference in the percentage of members in Maine and Vermont.", "evidence": "SUBTRACT( DIVIDE( SUM(state = 'Maine'), COUNT(position = 'Member')), DIVIDE( SUM(state = 'Vermont'), COUNT(position = 'Member')) )", "SQL": "SELECT CAST((SUM(CASE WHEN T2.state = 'Maine' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.member_id) AS diff FROM member AS T1 INNER JOIN zip_code AS T2 ON T2.zip_code = T1.zip", "question_toks": ["Calculate", "the", "difference", "in", "the", "percentage", "of", "members", "in", "Maine", "and", "Vermont", "."], "SQL_toks": ["SELECT", "CAST", "(", "(", "SUM", "(", "CASE", "WHEN", "T2.state", "=", "'Maine", "'", "THEN", "1", "ELSE", "0", "END", ")", "-", "SUM", "(", "CASE", "WHEN", "T2.state", "=", "'Vermont", "'", "THEN", "1", "ELSE", "0", "END", ")", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.member_id", ")", "AS", "diff", "FROM", "member", "AS", "T1", "INNER", "JOIN", "zip_code", "AS", "T2", "ON", "T2.zip_code", "=", "T1.zip"], "evidence_toks": ["SUBTRACT", "(", "DIVIDE", "(", "SUM", "(", "state", "=", "'Maine", "'", ")", ",", "COUNT", "(", "position", "=", "'Member", "'", ")", ")", ",", "DIVIDE", "(", "SUM", "(", "state", "=", "'Vermont", "'", ")", ",", "COUNT", "(", "position", "=", "'Member", "'", ")", ")", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'game events' refers to event.type = 'Game'", "'cost for the game events' refers to SUM(CASE WHEN event.type = 'Game' THEN expense.cost ELSE 0 END)"]}, {"db_id": "student_club", "question": "List the last names of students under the Elementary Education major and include their phone numbers.", "evidence": "'Elementary Education' is the major name; phone numbers refers to phone", "SQL": "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Elementary Education'", "question_toks": ["List", "the", "last", "names", "of", "students", "under", "the", "Elementary", "Education", "major", "and", "include", "their", "phone", "numbers", "."], "SQL_toks": ["SELECT", "T1.last_name", ",", "T1.phone", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T2.major_id", "=", "T1.link_to_major", "WHERE", "T2.major_name", "=", "'Elementary", "Education", "'"], "evidence_toks": ["'Elementary", "Education", "'", "is", "the", "major", "name", ";", "phone", "numbers", "refers", "to", "phone"], "difficulty": "simple", "templatized_domain_statements": ["'members in Maine' refers to SUM(CASE WHEN zip_code.state = 'Maine' THEN 1 ELSE 0 END", "'percentage of members in Maine' refers to CAST(SUM(CASE WHEN zip_code.state = 'Maine' THEN 1 ELSE 0 END) * 100 / COUNT(member.member_id)"]}, {"db_id": "student_club", "question": "Which budget category does the expense 'Posters' fall to?", "evidence": "'Posters' refers to expense description", "SQL": "SELECT DISTINCT T2.category FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters'", "question_toks": ["Which", "budget", "category", "does", "the", "expense", "'Posters", "'", "fall", "to", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T2.category", "FROM", "expense", "AS", "T1", "INNER", "JOIN", "budget", "AS", "T2", "ON", "T1.link_to_budget", "=", "T2.budget_id", "WHERE", "T1.expense_description", "=", "'Posters", "'"], "evidence_toks": ["'Posters", "'", "refers", "to", "expense", "description"], "difficulty": "simple", "templatized_domain_statements": ["'Elementary Education major' refers to major.major_name = 'Elementary Education'", "'phone numbers' refers to member.phone"]}, {"db_id": "student_club", "question": "Write the full name of the club member with the position of 'Secretary' and list which college the club member belongs to.", "evidence": "full name refers to first_name, last name", "SQL": "SELECT T1.first_name, T1.last_name, college FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.position = 'Secretary'", "question_toks": ["Write", "the", "full", "name", "of", "the", "club", "member", "with", "the", "position", "of", "'Secretary", "'", "and", "list", "which", "college", "the", "club", "member", "belongs", "to", "."], "SQL_toks": ["SELECT", "T1.first_name", ",", "T1.last_name", ",", "college", "FROM", "member", "AS", "T1", "INNER", "JOIN", "major", "AS", "T2", "ON", "T2.major_id", "=", "T1.link_to_major", "WHERE", "T1.position", "=", "'Secretary", "'"], "evidence_toks": ["full", "name", "refers", "to", "first_name", ",", "last", "name"], "difficulty": "simple", "templatized_domain_statements": ["'Which budget category' refers to budget.category", "'expense 'Posters'' refers to expense.expense_description"]}, {"db_id": "student_club", "question": "Calculate the total amount spent on speaker gifts and list the name of the event they were spent on.", "evidence": "total amount spent = SUM(spent) where category = 'Speaker Gifts'", "SQL": "SELECT SUM(T1.spent), T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Speaker Gifts'", "question_toks": ["Calculate", "the", "total", "amount", "spent", "on", "speaker", "gifts", "and", "list", "the", "name", "of", "the", "event", "they", "were", "spent", "on", "."], "SQL_toks": ["SELECT", "SUM", "(", "T1.spent", ")", ",", "T2.event_name", "FROM", "budget", "AS", "T1", "INNER", "JOIN", "event", "AS", "T2", "ON", "T1.link_to_event", "=", "T2.event_id", "WHERE", "T1.category", "=", "'Speaker", "Gifts", "'"], "evidence_toks": ["total", "amount", "spent", "=", "SUM", "(", "spent", ")", "where", "category", "=", "'Speaker", "Gifts", "'"], "difficulty": "simple", "templatized_domain_statements": ["'full name of the club member' to refers to member.first_name AND member.last_name", "'position of Secretary' refers to member.position = 'Secretary'"]}, {"db_id": "student_club", "question": "Where is the hometown of Garrett Girke?", "evidence": "hometown refers to city", "SQL": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T2.zip_code = T1.zip WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'", "question_toks": ["Where", "is", "the", "hometown", "of", "Garrett", "Girke", "?"], "SQL_toks": ["SELECT", "T2.city", "FROM", "member", "AS", "T1", "INNER", "JOIN", "zip_code", "AS", "T2", "ON", "T2.zip_code", "=", "T1.zip", "WHERE", "T1.first_name", "=", "'Garrett", "'", "AND", "T1.last_name", "=", "'Gerke", "'"], "evidence_toks": ["hometown", "refers", "to", "city"], "difficulty": "simple", "templatized_domain_statements": ["'total amount spent' refers to SUM(budget.spent)", "'category of speaker gifts' refers to budget.category = 'Speaker Gifts'"]}]