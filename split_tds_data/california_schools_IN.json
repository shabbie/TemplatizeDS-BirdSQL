[{"db_id": "california_schools", "question": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?", "evidence": "Eligible free rate for K-12 = `FRPM Count (K-12)` / `Enrollment (K-12)`", "SQL": "SELECT `FRPM Count (K-12)` / `Enrollment (K-12)` FROM frpm WHERE `County Name` = 'Alameda' ORDER BY (CAST(`FRPM Count (K-12)` AS REAL) / `Enrollment (K-12)`) DESC LIMIT 1", "question_toks": ["What", "is", "the", "highest", "eligible", "free", "rate", "for", "K-12", "students", "in", "the", "schools", "in", "Alameda", "County", "?"], "SQL_toks": ["SELECT", "`", "FRPM", "Count", "(", "K-12", ")", "`", "/", "`", "Enrollment", "(", "K-12", ")", "`", "FROM", "frpm", "WHERE", "`", "County", "Name", "`", "=", "'Alameda", "'", "ORDER", "BY", "(", "CAST", "(", "`", "FRPM", "Count", "(", "K-12", ")", "`", "AS", "REAL", ")", "/", "`", "Enrollment", "(", "K-12", ")", "`", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["Eligible", "free", "rate", "for", "K-12", "=", "`", "FRPM", "Count", "(", "K-12", ")", "`", "/", "`", "Enrollment", "(", "K-12", ")", "`"], "difficulty": "simple", "templatized_domain_statements": ["'value that cost more converted mana for the face' refers to ORDER BY cards.faceConvertedManaCost LIMIT 1"]}, {"db_id": "california_schools", "question": "Please list the zip code of all the charter schools in Fresno County Office of Education.", "evidence": "Charter schools refers to `Charter School (Y/N)` = 1 in the table fprm", "SQL": "SELECT T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`District Name` = 'Fresno County Office of Education' AND T1.`Charter School (Y/N)` = 1", "question_toks": ["Please", "list", "the", "zip", "code", "of", "all", "the", "charter", "schools", "in", "Fresno", "County", "Office", "of", "Education", "."], "SQL_toks": ["SELECT", "T2.Zip", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T1.", "`", "District", "Name", "`", "=", "'Fresno", "County", "Office", "of", "Education", "'", "AND", "T1.", "`", "Charter", "School", "(", "Y/N", ")", "`", "=", "1"], "evidence_toks": ["Charter", "schools", "refers", "to", "`", "Charter", "School", "(", "Y/N", ")", "`", "=", "1", "in", "the", "table", "fprm"], "difficulty": "simple", "templatized_domain_statements": ["'frame style ranking below 100 on EDHRec' refers to cards.edhrecRank < 100", "'cards with 2015 frame style' refers to cards.frameVersion = 2015"]}, {"db_id": "california_schools", "question": "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.", "evidence": "Charter schools refers to `Charter School (Y/N)` = 1 in the frpm", "SQL": "SELECT T2.Phone FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter Funding Type` = 'Directly funded' AND T1.`Charter School (Y/N)` = 1 AND T2.OpenDate > '2000-01-01'", "question_toks": ["Please", "list", "the", "phone", "numbers", "of", "the", "direct", "charter-funded", "schools", "that", "are", "opened", "after", "2000/1/1", "."], "SQL_toks": ["SELECT", "T2.Phone", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T1.", "`", "Charter", "Funding", "Type", "`", "=", "'Directly", "funded", "'", "AND", "T1.", "`", "Charter", "School", "(", "Y/N", ")", "`", "=", "1", "AND", "T2.OpenDate", ">", "'2000-01-01", "'"], "evidence_toks": ["Charter", "schools", "refers", "to", "`", "Charter", "School", "(", "Y/N", ")", "`", "=", "1", "in", "the", "frpm"], "difficulty": "moderate", "templatized_domain_statements": ["'cards have missing or degraded properties and values' refers to cards.hasContentWarning = 1", "'illustrated by Stephen Daniel' refers to cards.artist = 'Stephen Daniel'"]}, {"db_id": "california_schools", "question": "How many schools with an average score in Math under 400 in the SAT test are exclusively virtual?", "evidence": "Exclusively virtual refers to Virtual = 'F'", "SQL": "SELECT COUNT(DISTINCT T2.School) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' AND T1.AvgScrMath < 400", "question_toks": ["How", "many", "schools", "with", "an", "average", "score", "in", "Math", "under", "400", "in", "the", "SAT", "test", "are", "exclusively", "virtual", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "T2.School", ")", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "WHERE", "T2.Virtual", "=", "'", "F", "'", "AND", "T1.AvgScrMath", "<", "400"], "evidence_toks": ["Exclusively", "virtual", "refers", "to", "Virtual", "=", "'", "F", "'"], "difficulty": "simple", "templatized_domain_statements": ["'card named 'Sublime Epiphany' with number 74s' refers to cards.name = 'Sublime Epiphany' AND cards.number = '74'", "'number 74s' refers to cards.number = '74s'", "'information about rulings' refers to rulings.text"]}, {"db_id": "california_schools", "question": "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?", "evidence": "False", "SQL": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1", "question_toks": ["What", "is", "the", "phone", "number", "of", "the", "school", "that", "has", "the", "highest", "number", "of", "test", "takers", "with", "an", "SAT", "score", "of", "over", "1500", "?"], "SQL_toks": ["SELECT", "T2.Phone", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "ORDER", "BY", "T1.NumGE1500", "DESC", "LIMIT", "1"], "evidence_toks": ["False"], "difficulty": "simple", "templatized_domain_statements": ["'artist with the most ruling information' refers to ORDER BY COUNT(DISTINCT cards.uuid) DESC LIMIT 1", "'the card is a promotional printing' refers to cards.isPromo = 1"]}, {"db_id": "california_schools", "question": "For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?", "evidence": "False", "SQL": "SELECT T2.`FRPM Count (Ages 5-17)` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead DESC LIMIT 1", "question_toks": ["For", "the", "school", "with", "the", "highest", "average", "score", "in", "Reading", "in", "the", "SAT", "test", ",", "what", "is", "its", "FRPM", "count", "for", "students", "aged", "5-17", "?"], "SQL_toks": ["SELECT", "T2.", "`", "FRPM", "Count", "(", "Ages", "5-17", ")", "`", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "frpm", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "ORDER", "BY", "T1.AvgScrRead", "DESC", "LIMIT", "1"], "evidence_toks": ["False"], "difficulty": "simple", "templatized_domain_statements": ["'alternative language in Japanese' refers to foreign_data.language = 'Japanese'"]}, {"db_id": "california_schools", "question": "Please list the codes of the schools with a total enrollment of over 500.", "evidence": "Total enrollment can be represented by `Enrollment (K-12)` + `Enrollment (Ages 5-17)`", "SQL": "SELECT T2.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` + T2.`Enrollment (Ages 5-17)` > 500", "question_toks": ["Please", "list", "the", "codes", "of", "the", "schools", "with", "a", "total", "enrollment", "of", "over", "500", "."], "SQL_toks": ["SELECT", "T2.CDSCode", "FROM", "schools", "AS", "T1", "INNER", "JOIN", "frpm", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.", "`", "Enrollment", "(", "K-12", ")", "`", "+", "T2.", "`", "Enrollment", "(", "Ages", "5-17", ")", "`", ">", "500"], "evidence_toks": ["Total", "enrollment", "can", "be", "represented", "by", "`", "Enrollment", "(", "K-12", ")", "`", "+", "`", "Enrollment", "(", "Ages", "5-17", ")", "`"], "difficulty": "simple", "templatized_domain_statements": ["'cards availabe in Chinese Simplified' refers to foreign_data.language = 'Chinese Simplified'", "'percentage of the cards availabe in Chinese Simplified' refers to CAST(SUM(CASE WHEN foreign_data.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id)"]}, {"db_id": "california_schools", "question": "Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?", "evidence": "Excellence rate = NumGE1500 / NumTstTakr; Eligible free rates for students aged 5-17 = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`", "SQL": "SELECT MAX(CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.3", "question_toks": ["Among", "the", "schools", "with", "an", "SAT", "excellence", "rate", "of", "over", "0.3", ",", "what", "is", "the", "highest", "eligible", "free", "rate", "for", "students", "aged", "5-17", "?"], "SQL_toks": ["SELECT", "MAX", "(", "CAST", "(", "T1.", "`", "Free", "Meal", "Count", "(", "Ages", "5-17", ")", "`", "AS", "REAL", ")", "/", "T1.", "`", "Enrollment", "(", "Ages", "5-17", ")", "`", ")", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "satscores", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.cds", "WHERE", "CAST", "(", "T2.NumGE1500", "AS", "REAL", ")", "/", "T2.NumTstTakr", ">", "0.3"], "evidence_toks": ["Excellence", "rate", "=", "NumGE1500", "/", "NumTstTakr", ";", "Eligible", "free", "rates", "for", "students", "aged", "5-17", "=", "`", "Free", "Meal", "Count", "(", "Ages", "5-17", ")", "`", "/", "`", "Enrollment", "(", "Ages", "5-17", ")", "`"], "difficulty": "moderate", "templatized_domain_statements": ["'keyword found on card 'Angel of Mercy'' refers to cards.keywords WHERE cards.name = 'Angel of Mercy'"]}, {"db_id": "california_schools", "question": "Please list the phone numbers of the schools with the top 3 SAT excellence rate.", "evidence": "Excellence rate = NumGE1500 / NumTstTakr", "SQL": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr DESC LIMIT 3", "question_toks": ["Please", "list", "the", "phone", "numbers", "of", "the", "schools", "with", "the", "top", "3", "SAT", "excellence", "rate", "."], "SQL_toks": ["SELECT", "T1.Phone", "FROM", "schools", "AS", "T1", "INNER", "JOIN", "satscores", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.cds", "ORDER", "BY", "CAST", "(", "T2.NumGE1500", "AS", "REAL", ")", "/", "T2.NumTstTakr", "DESC", "LIMIT", "3"], "evidence_toks": ["Excellence", "rate", "=", "NumGE1500", "/", "NumTstTakr"], "difficulty": "simple", "templatized_domain_statements": ["'type of promotion' refers to promoTypes", "'type of promotion' refers to cards.promoTypes"]}, {"db_id": "california_schools", "question": "What is the charter number of the school that the average score in Writing is 499?", "evidence": "False", "SQL": "SELECT T1.CharterNum FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrWrite = 499", "question_toks": ["What", "is", "the", "charter", "number", "of", "the", "school", "that", "the", "average", "score", "in", "Writing", "is", "499", "?"], "SQL_toks": ["SELECT", "T1.CharterNum", "FROM", "schools", "AS", "T1", "INNER", "JOIN", "satscores", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.cds", "WHERE", "T2.AvgScrWrite", "=", "499"], "evidence_toks": ["False"], "difficulty": "simple", "templatized_domain_statements": ["'border color of card \"Ancestor's Chosen\"' refers to cards.borderColor WHERE cards.name = \"Ancestor's Chosen\""]}, {"db_id": "california_schools", "question": "What is the phone number of the school that has the highest average score in Math?", "evidence": "False", "SQL": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1", "question_toks": ["What", "is", "the", "phone", "number", "of", "the", "school", "that", "has", "the", "highest", "average", "score", "in", "Math", "?"], "SQL_toks": ["SELECT", "T1.Phone", "FROM", "schools", "AS", "T1", "INNER", "JOIN", "satscores", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.cds", "ORDER", "BY", "T2.AvgScrMath", "DESC", "LIMIT", "1"], "evidence_toks": ["False"], "difficulty": "simple", "templatized_domain_statements": ["'the set that card 'Angel of Mercy' is in' refers to set_translations.name = 'Angel of Mercy'"]}, {"db_id": "california_schools", "question": "How many schools in Amador which the Low Grade is 9 and the High Grade is 12?", "evidence": "False", "SQL": "SELECT COUNT(T1.`School Name`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Amador' AND T1.`Low Grade` = 9 AND T1.`High Grade` = 12", "question_toks": ["How", "many", "schools", "in", "Amador", "which", "the", "Low", "Grade", "is", "9", "and", "the", "High", "Grade", "is", "12", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.", "`", "School", "Name", "`", ")", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.County", "=", "'Amador", "'", "AND", "T1.", "`", "Low", "Grade", "`", "=", "9", "AND", "T1.", "`", "High", "Grade", "`", "=", "12"], "evidence_toks": ["False"], "difficulty": "simple", "templatized_domain_statements": ["'legalities whose status is restricted' refers to legalities.status = 'Restricted'", "'cards of legalities whose status is restricted have text boxes' refers to legalities.status = 'Restricted' AND cards.isTextless = 0"]}, {"db_id": "california_schools", "question": "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?", "evidence": "False", "SQL": "SELECT COUNT(CDSCode) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `Free Meal Count (K-12)` < 700", "question_toks": ["In", "Los", "Angeles", "how", "many", "schools", "have", "more", "than", "500", "free", "meals", "but", "less", "than", "700", "free", "or", "reduced", "price", "meals", "for", "K-12", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "CDSCode", ")", "FROM", "frpm", "WHERE", "`", "County", "Name", "`", "=", "'Los", "Angeles", "'", "AND", "`", "Free", "Meal", "Count", "(", "K-12", ")", "`", ">", "500", "AND", "`", "Free", "Meal", "Count", "(", "K-12", ")", "`", "<", "700"], "evidence_toks": ["False"], "difficulty": "simple", "templatized_domain_statements": ["'of card \"Cloudchaser Eagle\"' refers to cards.name = 'Cloudchaser Eagle'"]}, {"db_id": "california_schools", "question": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.", "evidence": "Diffrence in enrollement = `Enrollment (K-12)` - `Enrollment (Ages 5-17)`", "SQL": "SELECT T1.School, T1.StreetAbr FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30", "question_toks": ["List", "the", "names", "of", "schools", "with", "more", "than", "30", "difference", "in", "enrollements", "between", "K-12", "and", "ages", "5-17", "?", "Please", "also", "give", "the", "full", "street", "adress", "of", "the", "schools", "."], "SQL_toks": ["SELECT", "T1.School", ",", "T1.StreetAbr", "FROM", "schools", "AS", "T1", "INNER", "JOIN", "frpm", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.", "`", "Enrollment", "(", "K-12", ")", "`", "-", "T2.", "`", "Enrollment", "(", "Ages", "5-17", ")", "`", ">", "30"], "evidence_toks": ["Diffrence", "in", "enrollement", "=", "`", "Enrollment", "(", "K-12", ")", "`", "-", "`", "Enrollment", "(", "Ages", "5-17", ")", "`"], "difficulty": "moderate", "templatized_domain_statements": ["'the type of card \"Benalish Knight\"' refers to cards.type"]}, {"db_id": "california_schools", "question": "Name elementary schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?", "evidence": "Average of average math = sum(average math scores) / count(schools).", "SQL": "SELECT T1.sname, T2.`Charter Funding Type` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T2.`District Name` LIKE 'Riverside%' GROUP BY T1.sname, T2.`Charter Funding Type` HAVING CAST(SUM(T1.AvgScrMath) AS REAL) / COUNT(T1.cds) > 400", "question_toks": ["Name", "elementary", "schools", "in", "Riverside", "which", "the", "average", "of", "average", "math", "score", "for", "SAT", "is", "grater", "than", "400", ",", "what", "is", "the", "funding", "type", "of", "these", "schools", "?"], "SQL_toks": ["SELECT", "T1.sname", ",", "T2.", "`", "Charter", "Funding", "Type", "`", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "frpm", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "WHERE", "T2.", "`", "District", "Name", "`", "LIKE", "'Riverside", "%", "'", "GROUP", "BY", "T1.sname", ",", "T2.", "`", "Charter", "Funding", "Type", "`", "HAVING", "CAST", "(", "SUM", "(", "T1.AvgScrMath", ")", "AS", "REAL", ")", "/", "COUNT", "(", "T1.cds", ")", ">", "400"], "evidence_toks": ["Average", "of", "average", "math", "=", "sum", "(", "average", "math", "scores", ")", "/", "count", "(", "schools", ")", "."], "difficulty": "moderate", "templatized_domain_statements": ["'playing card \"Benalish Knight\"' refers to cards.name = 'Benalish Knight'", "'rule of playing card' refers to legalities.format"]}, {"db_id": "california_schools", "question": "What is the average score in writing for the schools that were opened after 1991 and closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.", "evidence": "Communication number refers to phone number.", "SQL": "SELECT T2.School, T1.AvgScrWrite, T2.Phone FROM satscores AS T1 RIGHT JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE strftime('%Y', T2.OpenDate) >= 1991 OR strftime('%Y', T2.ClosedDate) < 2000", "question_toks": ["What", "is", "the", "average", "score", "in", "writing", "for", "the", "schools", "that", "were", "opened", "after", "1991", "and", "closed", "before", "2000", "?", "List", "the", "school", "names", "along", "with", "the", "score", ".", "Also", ",", "list", "the", "communication", "number", "of", "the", "schools", "if", "there", "is", "any", "."], "SQL_toks": ["SELECT", "T2.School", ",", "T1.AvgScrWrite", ",", "T2.Phone", "FROM", "satscores", "AS", "T1", "RIGHT", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "WHERE", "strftime", "(", "'", "%", "Y", "'", ",", "T2.OpenDate", ")", ">", "=", "1991", "OR", "strftime", "(", "'", "%", "Y", "'", ",", "T2.ClosedDate", ")", "<", "2000"], "evidence_toks": ["Communication", "number", "refers", "to", "phone", "number", "."], "difficulty": "moderate", "templatized_domain_statements": ["'illustrated the card art in Phyrexian' refers to foreign_data.language = 'Phyrexian'", "'names of the artists who illustrated the card art in Phyrexian' refers to cards.artist"]}, {"db_id": "california_schools", "question": "Find the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded? List the names, K-12 enrollment, and 15-17 enrollment of schools which has a difference above this average.", "evidence": "Difference between K-12 enrollment and 15-17 enrollment can be computed by `Enrollment (K-12)` - `Enrollment (Ages 5-17)`", "SQL": "SELECT AVG(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`), T2.School, T1.`Enrollment (K-12)` , T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND T1.`Enrollment (K-12)` + T1.`Enrollment (Ages 5-17)` > ( SELECT CAST((SUM(T2.`Enrollment (K-12)`) + SUM(T2.`Enrollment (Ages 5-17)`)) AS REAL) / COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.FundingType = 'Locally funded' ) GROUP BY T2.School, T1.`Enrollment (K-12)`, T1.`Enrollment (Ages 5-17)`", "question_toks": ["Find", "the", "average", "difference", "between", "K-12", "enrollment", "and", "15-17", "enrollment", "of", "schools", "that", "are", "locally", "funded", "?", "List", "the", "names", ",", "K-12", "enrollment", ",", "and", "15-17", "enrollment", "of", "schools", "which", "has", "a", "difference", "above", "this", "average", "."], "SQL_toks": ["SELECT", "AVG", "(", "T1.", "`", "Enrollment", "(", "K-12", ")", "`", "-", "T1.", "`", "Enrollment", "(", "Ages", "5-17", ")", "`", ")", ",", "T2.School", ",", "T1.", "`", "Enrollment", "(", "K-12", ")", "`", ",", "T1.", "`", "Enrollment", "(", "Ages", "5-17", ")", "`", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.FundingType", "=", "'Locally", "funded", "'", "AND", "T1.", "`", "Enrollment", "(", "K-12", ")", "`", "+", "T1.", "`", "Enrollment", "(", "Ages", "5-17", ")", "`", ">", "(", "SELECT", "CAST", "(", "(", "SUM", "(", "T2.", "`", "Enrollment", "(", "K-12", ")", "`", ")", "+", "SUM", "(", "T2.", "`", "Enrollment", "(", "Ages", "5-17", ")", "`", ")", ")", "AS", "REAL", ")", "/", "COUNT", "(", "*", ")", "FROM", "schools", "AS", "T1", "INNER", "JOIN", "frpm", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T1.FundingType", "=", "'Locally", "funded", "'", ")", "GROUP", "BY", "T2.School", ",", "T1.", "`", "Enrollment", "(", "K-12", ")", "`", ",", "T1.", "`", "Enrollment", "(", "Ages", "5-17", ")", "`"], "evidence_toks": ["Difference", "between", "K-12", "enrollment", "and", "15-17", "enrollment", "can", "be", "computed", "by", "`", "Enrollment", "(", "K-12", ")", "`", "-", "`", "Enrollment", "(", "Ages", "5-17", ")", "`"], "difficulty": "challenging", "templatized_domain_statements": ["'illustrated in German' refers to foreign_data.language = 'German'", "'reprinted' refers to cards.isReprint = 1"]}, {"db_id": "california_schools", "question": "When did the first-through-twelfth-grade school with the largest enrollment open?", "evidence": "K-12 means First-through-twelfth-grade", "SQL": "SELECT T2.OpenDate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1", "question_toks": ["When", "did", "the", "first-through-twelfth-grade", "school", "with", "the", "largest", "enrollment", "open", "?"], "SQL_toks": ["SELECT", "T2.OpenDate", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "ORDER", "BY", "T1.", "`", "Enrollment", "(", "K-12", ")", "`", "DESC", "LIMIT", "1"], "evidence_toks": ["K-12", "means", "First-through-twelfth-grade"], "difficulty": "simple", "templatized_domain_statements": ["'borderless cards' refers to cards.borderColor = 'borderless'", "'illustrated in Russian' refers to foreign_data.language = 'Russian'"]}, {"db_id": "california_schools", "question": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?", "evidence": "K-12 refers to students in grades 1 through 12; Eligible free rate for K-12 = `FRPM Count (K-12)` / `Enrollment (K-12)`", "SQL": "SELECT CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 9, 2", "question_toks": ["What", "is", "the", "eligible", "free", "rate", "of", "the", "10th", "and", "11th", "schools", "with", "the", "highest", "enrolment", "for", "students", "in", "grades", "1", "through", "12", "?"], "SQL_toks": ["SELECT", "CAST", "(", "`", "Free", "Meal", "Count", "(", "K-12", ")", "`", "AS", "REAL", ")", "/", "`", "Enrollment", "(", "K-12", ")", "`", "FROM", "frpm", "ORDER", "BY", "`", "Enrollment", "(", "K-12", ")", "`", "DESC", "LIMIT", "9", ",", "2"], "evidence_toks": ["K-12", "refers", "to", "students", "in", "grades", "1", "through", "12", ";", "Eligible", "free", "rate", "for", "K-12", "=", "`", "FRPM", "Count", "(", "K-12", ")", "`", "/", "`", "Enrollment", "(", "K-12", ")", "`"], "difficulty": "moderate", "templatized_domain_statements": ["'cards with toughness of (100)' refers to cards.toughness = 100"]}, {"db_id": "california_schools", "question": "What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?", "evidence": "between 1/1/1980 and 12/31/1980 means the year = 1980", "SQL": "SELECT AVG(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE strftime('%Y', T2.OpenDate) = 1980 AND T2.County = 'Fresno'", "question_toks": ["What", "is", "the", "average", "number", "of", "test", "takers", "from", "Fresno", "schools", "that", "opened", "between", "1/1/1980", "and", "12/31/1980", "?"], "SQL_toks": ["SELECT", "AVG", "(", "T1.NumTstTakr", ")", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "WHERE", "strftime", "(", "'", "%", "Y", "'", ",", "T2.OpenDate", ")", "=", "1980", "AND", "T2.County", "=", "'Fresno", "'"], "evidence_toks": ["between", "1/1/1980", "and", "12/31/1980", "means", "the", "year", "=", "1980"], "difficulty": "simple", "templatized_domain_statements": ["'black border cards' refers to cards.borderColor = 'black'", "'available on mtgo' refers to cards.availability = 'mtgo'", "'only available on mtgo' refers to cards.availability = 'mtgo'"]}, {"db_id": "california_schools", "question": "Which exclusively virtual schools have the top 5 highest average reading scores?", "evidence": "Exclusively virtual refers to Virtual = 'F'.", "SQL": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' ORDER BY T1.AvgScrRead DESC LIMIT 5", "question_toks": ["Which", "exclusively", "virtual", "schools", "have", "the", "top", "5", "highest", "average", "reading", "scores", "?"], "SQL_toks": ["SELECT", "T2.School", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "WHERE", "T2.Virtual", "=", "'", "F", "'", "ORDER", "BY", "T1.AvgScrRead", "DESC", "LIMIT", "5"], "evidence_toks": ["Exclusively", "virtual", "refers", "to", "Virtual", "=", "'", "F", "'", "."], "difficulty": "simple", "templatized_domain_statements": ["'converted mana cost of (100)' refers to cards.convertedManaCost = 100"]}, {"db_id": "california_schools", "question": "What is the average math score of the school with the lowest average score for all subjects, and in which county is it located?", "evidence": "Average score for all subjects can be computed by AvgScrMath + AvgScrRead + AvgScrWrite", "SQL": "SELECT T1.AvgScrMath, T2.County FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath IS NOT NULL ORDER BY T1.AvgScrMath + T1.AvgScrRead + T1.AvgScrWrite ASC LIMIT 1", "question_toks": ["What", "is", "the", "average", "math", "score", "of", "the", "school", "with", "the", "lowest", "average", "score", "for", "all", "subjects", ",", "and", "in", "which", "county", "is", "it", "located", "?"], "SQL_toks": ["SELECT", "T1.AvgScrMath", ",", "T2.County", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "WHERE", "T1.AvgScrMath", "IS", "NOT", "NULL", "ORDER", "BY", "T1.AvgScrMath", "+", "T1.AvgScrRead", "+", "T1.AvgScrWrite", "ASC", "LIMIT", "1"], "evidence_toks": ["Average", "score", "for", "all", "subjects", "can", "be", "computed", "by", "AvgScrMath", "+", "AvgScrRead", "+", "AvgScrWrite"], "difficulty": "moderate", "templatized_domain_statements": ["'have subtype other than \"Angel\"' refers to cards.subtypes != 'Angel'"]}, {"db_id": "california_schools", "question": "What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.", "evidence": "", "SQL": "SELECT T1.AvgScrWrite, T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1", "question_toks": ["What", "is", "the", "average", "writing", "score", "of", "the", "school", "who", "has", "the", "highest", "number", "of", "test", "takers", "whose", "total", "SAT", "sscores", "are", "greater", "or", "equal", "to", "1500", "?", "Indicate", "the", "city", "to", "where", "the", "school", "is", "situated", "."], "SQL_toks": ["SELECT", "T1.AvgScrWrite", ",", "T2.City", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "ORDER", "BY", "T1.NumGE1500", "DESC", "LIMIT", "1"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'cards that only available in paper' refers to cards.availability = 'paper'", "'only available in paper and Japanese language' refers to cards.availability = 'paper' AND foreign_data.language = 'Japanese'"]}, {"db_id": "california_schools", "question": "Which state special schools have the highest number of enrollees from grades 1 through 12?", "evidence": "State Special Schools refers to DOC = 31; Grades 1 through 12 means K-12", "SQL": "SELECT T2.State FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOC = 31 ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1", "question_toks": ["Which", "state", "special", "schools", "have", "the", "highest", "number", "of", "enrollees", "from", "grades", "1", "through", "12", "?"], "SQL_toks": ["SELECT", "T2.State", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.DOC", "=", "31", "ORDER", "BY", "T1.", "`", "Enrollment", "(", "K-12", ")", "`", "DESC", "LIMIT", "1"], "evidence_toks": ["State", "Special", "Schools", "refers", "to", "DOC", "=", "31", ";", "Grades", "1", "through", "12", "means", "K-12"], "difficulty": "simple", "templatized_domain_statements": ["'cards in set 10E' refers to set_translations.setCode = '10E'", "'cards in set 10E with converted mana of (100) have translation' refers to cards.convertedManaCost = 100 AND set_translations.setCode = '10E'"]}, {"db_id": "california_schools", "question": "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lafayette?", "evidence": "", "SQL": "SELECT COUNT(T1.cds) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Lafayette'", "question_toks": ["What", "is", "the", "total", "number", "of", "schools", "whose", "total", "SAT", "scores", "are", "greater", "or", "equal", "to", "1500", "whose", "mailing", "city", "is", "Lafayette", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.cds", ")", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "WHERE", "T2.MailCity", "=", "'Lafayette", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'name of cards with original types of Creature - Elf' refers to cards.originalType = 'Creature - Elf'"]}, {"db_id": "california_schools", "question": "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?", "evidence": "Ratio = count(schools in Colusa) / count(schools in Humboldt)", "SQL": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE MailState = 'CA'", "question_toks": ["Of", "the", "schools", "with", "a", "mailing", "state", "address", "in", "California", ",", "what", "is", "the", "ratio", "of", "the", "schools", "located", "in", "the", "county", "of", "Colusa", "against", "the", "school", "located", "in", "the", "county", "of", "Humboldt", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "County", "=", "'Colusa", "'", "THEN", "1", "ELSE", "0", "END", ")", "AS", "REAL", ")", "/", "SUM", "(", "CASE", "WHEN", "County", "=", "'Humboldt", "'", "THEN", "1", "ELSE", "0", "END", ")", "FROM", "schools", "WHERE", "MailState", "=", "'CA", "'"], "evidence_toks": ["Ratio", "=", "count", "(", "schools", "in", "Colusa", ")", "/", "count", "(", "schools", "in", "Humboldt", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'cards from ID 1-20' refers to cards.id BETWEEN 1 AND 20"]}, {"db_id": "california_schools", "question": "Of all the schools with a mailing state address in California, how many are active in San Joaquin?", "evidence": "", "SQL": "SELECT COUNT(CDSCode) FROM schools WHERE City = 'San Joaquin' AND State = 'CA' AND StatusType = 'Active'", "question_toks": ["Of", "all", "the", "schools", "with", "a", "mailing", "state", "address", "in", "California", ",", "how", "many", "are", "active", "in", "San", "Joaquin", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "CDSCode", ")", "FROM", "schools", "WHERE", "City", "=", "'San", "Joaquin", "'", "AND", "State", "=", "'CA", "'", "AND", "StatusType", "=", "'Active", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'Among the Artifact cards' refers to cards.originalType = 'Artifact'", "'black color' refers to cards.colors = 'B'", "'comes with foreign language translation' refers to cards.uuid = foreign_data.uuid"]}, {"db_id": "california_schools", "question": "What is the phone number and extension number for the school that had the 333rd highest average writing score?", "evidence": "", "SQL": "SELECT T2.Phone, T2.Ext FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrWrite DESC LIMIT 332, 1", "question_toks": ["What", "is", "the", "phone", "number", "and", "extension", "number", "for", "the", "school", "that", "had", "the", "333rd", "highest", "average", "writing", "score", "?"], "SQL_toks": ["SELECT", "T2.Phone", ",", "T2.Ext", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "ORDER", "BY", "T1.AvgScrWrite", "DESC", "LIMIT", "332", ",", "1"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'cards with rarity of uncommon' refers to cards.rarity = 'uncommon'"]}, {"db_id": "california_schools", "question": "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?", "evidence": "", "SQL": "SELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez')", "question_toks": ["What", "is", "the", "website", "for", "the", "schools", "under", "the", "administrations", "of", "Mike", "Larson", "and", "Dante", "Alvarez", "?"], "SQL_toks": ["SELECT", "Website", "FROM", "schools", "WHERE", "(", "AdmFName1", "=", "'Mike", "'", "AND", "AdmLName1", "=", "'Larson", "'", ")", "OR", "(", "AdmFName1", "=", "'Dante", "'", "AND", "AdmLName1", "=", "'Alvarez", "'", ")"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'cards designed by Volcan Ba\u00c7\u00b5a' refers to cards.artist = 'Volcan Ba\u00c7\u00b5a'", "'foil non-powerful' refers to cards.cardKingdomId IS NULL AND cards.cardKingdomFoilId IS NULL"]}, {"db_id": "california_schools", "question": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?", "evidence": "Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools", "SQL": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'", "question_toks": ["How", "many", "chartered", "schools", "located", "in", "the", "city", "of", "Hickman", "are", "owned", "by", "the", "Elementary", "School", "District", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "School", ")", "FROM", "schools", "WHERE", "DOC", "=", "52", "AND", "Charter", "=", "1", "AND", "City", "=", "'Hickman", "'"], "evidence_toks": ["Elementary", "School", "District", "refers", "to", "DOC", "=", "52", ";", "Chartered", "schools", "refer", "to", "Charter", "=", "1", "in", "the", "table", "schools"], "difficulty": "simple", "templatized_domain_statements": ["'cards designed by UDON' refers to cards.artist = 'UDON'", "'available in mtgo print type' refers to cards.availability = 'mtgo'", "'cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1' refers to cards.hand = -1 AND cards.artist = 'UDON' AND cards.Availability = 'print' AND cards.type = 'mtgo'"]}, {"db_id": "california_schools", "question": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?", "evidence": "non-chartered schools refer to schools whose Charter = 0; K-12 means grades 1 through 12; percent of eligible free rate for K-12 = `FRPM Count (K-12)` * 100 / `Enrollment (K-12)`", "SQL": "SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18", "question_toks": ["What", "is", "the", "total", "number", "of", "non-chartered", "schools", "in", "the", "county", "of", "Los", "Angeles", "with", "a", "percent", "(", "%", ")", "of", "eligible", "free", "meals", "for", "grades", "1", "through", "12", "that", "is", "less", "than", "0.18", "%", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.School", ")", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.County", "=", "'Los", "Angeles", "'", "AND", "T2.Charter", "=", "0", "AND", "CAST", "(", "T1.", "`", "Free", "Meal", "Count", "(", "K-12", ")", "`", "AS", "REAL", ")", "*", "100", "/", "T1.", "`", "Enrollment", "(", "K-12", ")", "`", "<", "0.18"], "evidence_toks": ["non-chartered", "schools", "refer", "to", "schools", "whose", "Charter", "=", "0", ";", "K-12", "means", "grades", "1", "through", "12", ";", "percent", "of", "eligible", "free", "rate", "for", "K-12", "=", "`", "FRPM", "Count", "(", "K-12", ")", "`", "*", "100", "/", "`", "Enrollment", "(", "K-12", ")", "`"], "difficulty": "challenging", "templatized_domain_statements": ["'have a sensitive content warning' refers to cards.hasContentWarning = 1", "'available on paper' refers to cards.availability = 'paper'", "'1993 frame version' refers to cards.frameVersion = 1993"]}, {"db_id": "california_schools", "question": "Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?", "evidence": "Directly funded schools refers to FundingType = 'Directly Funded'", "SQL": "SELECT COUNT(School) FROM schools WHERE strftime('%Y', OpenDate) BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus' AND FundingType = 'Directly funded'", "question_toks": ["Between", "1/1/2000", "to", "12/31/2005", ",", "how", "many", "directly", "funded", "schools", "opened", "in", "the", "county", "of", "Stanislaus", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "School", ")", "FROM", "schools", "WHERE", "strftime", "(", "'", "%", "Y", "'", ",", "OpenDate", ")", "BETWEEN", "'2000-01-01", "'", "AND", "'2005-12-31", "'", "AND", "County", "=", "'Stanislaus", "'", "AND", "FundingType", "=", "'Directly", "funded", "'"], "evidence_toks": ["Directly", "funded", "schools", "refers", "to", "FundingType", "=", "'Directly", "Funded", "'"], "difficulty": "simple", "templatized_domain_statements": ["'unconverted mana' refers to cards.manaCost", "'all the cards created by Rob Alexander' refers to cards.artist = 'Rob Alexander'"]}, {"db_id": "california_schools", "question": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?", "evidence": "Youth Authority Facilities (CEA) refers to SOC = 11; 1980s = years between 1980 and 1989", "SQL": "SELECT County FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND StatusType = 'Closed' AND SOC = 11 GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1", "question_toks": ["Which", "county", "reported", "the", "most", "number", "of", "school", "closure", "in", "the", "1980s", "with", "school", "wonership", "code", "belonging", "to", "Youth", "Authority", "Facilities", "(", "CEA", ")", "?"], "SQL_toks": ["SELECT", "County", "FROM", "schools", "WHERE", "strftime", "(", "'", "%", "Y", "'", ",", "ClosedDate", ")", "BETWEEN", "'1980", "'", "AND", "'1989", "'", "AND", "StatusType", "=", "'Closed", "'", "AND", "SOC", "=", "11", "GROUP", "BY", "County", "ORDER", "BY", "COUNT", "(", "School", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["Youth", "Authority", "Facilities", "(", "CEA", ")", "refers", "to", "SOC", "=", "11", ";", "1980s", "=", "years", "between", "1980", "and", "1989"], "difficulty": "moderate", "templatized_domain_statements": ["'cards translated into Spanish' refers to set_translations.language = 'Spanish'", "'Lists the set code of all cards' refers to set_translations.setCode"]}, {"db_id": "california_schools", "question": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.", "evidence": "State Special Schools means that SOC = 31.", "SQL": "SELECT NCESDist FROM schools WHERE SOC = 31", "question_toks": ["Please", "provide", "the", "National", "Center", "for", "Educational", "Statistics", "school", "district", "identification", "number", "for", "all", "schools", "with", "a", "School", "Ownership", "Code", "that", "are", "part", "of", "the", "State", "Special", "Schools", "."], "SQL_toks": ["SELECT", "NCESDist", "FROM", "schools", "WHERE", "SOC", "=", "31"], "evidence_toks": ["State", "Special", "Schools", "means", "that", "SOC", "=", "31", "."], "difficulty": "simple", "templatized_domain_statements": ["'maximum starting maximum hand size of +3' refers to cards.hand = '+3'", "'legendary frame effect cards' refers to cards.frameEffects = 'legendary'", "'percentage of legendary frame effect cards have a maximum starting maximum hand size of +3' refers to SUM(CASE WHEN cards.hand = '+3' THEN 1.0 ELSE 0 END) / COUNT(cards.id) * 100 WHERE cards.frameEffects = 'legendary'"]}, {"db_id": "california_schools", "question": "How many active and closed District Community Day Schools are there in the county of Alpine?", "evidence": "", "SQL": "SELECT COUNT(School) FROM schools WHERE StatusType = 'Closed' OR StatusType = 'Active' AND County = 'Alpine'", "question_toks": ["How", "many", "active", "and", "closed", "District", "Community", "Day", "Schools", "are", "there", "in", "the", "county", "of", "Alpine", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "School", ")", "FROM", "schools", "WHERE", "StatusType", "=", "'Closed", "'", "OR", "StatusType", "=", "'Active", "'", "AND", "County", "=", "'Alpine", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'Story Spotlight cards that also have a text box' refers to cards.isStorySpotlight = 1 and cards.isTextless = 0", "'percentage of Story Spotlight cards that also have a text box' refers to CAST(SUM(CASE WHEN isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id)"]}, {"db_id": "california_schools", "question": "What is the district code for the School that does not offer a magnet program in the city of Fresno?", "evidence": "When magent is equal to 0 in the database, it means ths school doesn't offer a magnet program.", "SQL": "SELECT T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.City = 'Fresno' AND T2.Magnet = 0", "question_toks": ["What", "is", "the", "district", "code", "for", "the", "School", "that", "does", "not", "offer", "a", "magnet", "program", "in", "the", "city", "of", "Fresno", "?"], "SQL_toks": ["SELECT", "T1.", "`", "District", "Code", "`", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.City", "=", "'Fresno", "'", "AND", "T2.Magnet", "=", "0"], "evidence_toks": ["When", "magent", "is", "equal", "to", "0", "in", "the", "database", ",", "it", "means", "ths", "school", "does", "n't", "offer", "a", "magnet", "program", "."], "difficulty": "simple", "templatized_domain_statements": ["'cards in Spanish' refers to foreign_data.language = 'Spanish'", "'percentage of cards in Spanish' refers to (SUM(CASE WHEN language = 'Spanish' THEN 1 ELSE 0 END) * 100 / COUNT(*))"]}, {"db_id": "california_schools", "question": "What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?", "evidence": "High school can be represented as EILCode = 'HS'", "SQL": "SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Lunch Provision 2' AND T2.County = 'Merced' AND T1.`Low Grade` = 9 AND T1.`High Grade` = 12 AND T2.EILCode = 'HS'", "question_toks": ["What", "is", "the", "city", "location", "of", "the", "high", "school", "level", "school", "with", "Lunch", "Provision", "2", "whose", "lowest", "grade", "is", "9", "and", "the", "highest", "grade", "is", "12", "in", "the", "county", "of", "Merced", "?"], "SQL_toks": ["SELECT", "T2.City", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T1.", "`", "NSLP", "Provision", "Status", "`", "=", "'Lunch", "Provision", "2", "'", "AND", "T2.County", "=", "'Merced", "'", "AND", "T1.", "`", "Low", "Grade", "`", "=", "9", "AND", "T1.", "`", "High", "Grade", "`", "=", "12", "AND", "T2.EILCode", "=", "'HS", "'"], "evidence_toks": ["High", "school", "can", "be", "represented", "as", "EILCode", "=", "'HS", "'"], "difficulty": "moderate", "templatized_domain_statements": ["inside the Commander block' refers to sets.block = 'Commander'", "'sets are inside' refers to set_translations.setCode", "'Brazilian Portuguese translated sets' refers to set_translations.language = 'Portuguese (Brazil)'"]}, {"db_id": "california_schools", "question": "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?", "evidence": "Percent (%) Eligible FRPM (Ages 5-17) can be acquired by `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` * 100%", "SQL": "SELECT T2.School, T1.`FRPM Count (Ages 5-17)` * 100 / T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.GSserved = 'K-9'", "question_toks": ["Which", "schools", "served", "a", "grade", "span", "of", "Kindergarten", "to", "9th", "grade", "in", "the", "county", "of", "Los", "Angeles", "and", "what", "is", "its", "Percent", "(", "%", ")", "Eligible", "FRPM", "(", "Ages", "5-17", ")", "?"], "SQL_toks": ["SELECT", "T2.School", ",", "T1.", "`", "FRPM", "Count", "(", "Ages", "5-17", ")", "`", "*", "100", "/", "T1.", "`", "Enrollment", "(", "Ages", "5-17", ")", "`", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.County", "=", "'Los", "Angeles", "'", "AND", "T2.GSserved", "=", "'", "K-9", "'"], "evidence_toks": ["Percent", "(", "%", ")", "Eligible", "FRPM", "(", "Ages", "5-17", ")", "can", "be", "acquired", "by", "`", "Free", "Meal", "Count", "(", "Ages", "5-17", ")", "`", "/", "`", "Enrollment", "(", "Ages", "5-17", ")", "`", "*", "100", "%"], "difficulty": "moderate", "templatized_domain_statements": ["'null power cards' refers to cards.power IS NULL", "'If you have two Lords of the Pit, you can sacrifice them to each other' ruling text refers to rulings.text"]}, {"db_id": "california_schools", "question": "What is the most common type of grade span served in the city of Adelanto?", "evidence": "", "SQL": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1", "question_toks": ["What", "is", "the", "most", "common", "type", "of", "grade", "span", "served", "in", "the", "city", "of", "Adelanto", "?"], "SQL_toks": ["SELECT", "GSserved", "FROM", "schools", "WHERE", "City", "=", "'Adelanto", "'", "GROUP", "BY", "GSserved", "ORDER", "BY", "COUNT", "(", "GSserved", ")", "DESC", "LIMIT", "1"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces' refers to cards.Side IS NULL"]}, {"db_id": "california_schools", "question": "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.", "evidence": "'Does not offer physical building' means Virtual = F in the database.", "SQL": "SELECT County, COUNT(Virtual) FROM schools WHERE County = 'San Diego' OR County = 'Santa Barbara' AND Virtual = 'F' GROUP BY County ORDER BY COUNT(Virtual) DESC LIMIT 1", "question_toks": ["Between", "San", "Diego", "and", "Santa", "Barbara", ",", "which", "county", "offers", "the", "most", "number", "of", "schools", "that", "does", "not", "offer", "physical", "building", "?", "Indicate", "the", "amount", "."], "SQL_toks": ["SELECT", "County", ",", "COUNT", "(", "Virtual", ")", "FROM", "schools", "WHERE", "County", "=", "'San", "Diego", "'", "OR", "County", "=", "'Santa", "Barbara", "'", "AND", "Virtual", "=", "'", "F", "'", "GROUP", "BY", "County", "ORDER", "BY", "COUNT", "(", "Virtual", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["'Does", "not", "offer", "physical", "building", "'", "means", "Virtual", "=", "F", "in", "the", "database", "."], "difficulty": "moderate", "templatized_domain_statements": ["'the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\"' refers to foreign_data.flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation'"]}, {"db_id": "california_schools", "question": "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.", "evidence": "", "SQL": "SELECT T1.`School Type`, T1.`School Name`, T2.Latitude FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.Latitude DESC LIMIT 1", "question_toks": ["What", "is", "the", "school", "type", "of", "the", "school", "with", "the", "highest", "latitude", "?", "Indicate", "the", "name", "of", "the", "school", "as", "well", "as", "the", "latitude", "coordinates", "."], "SQL_toks": ["SELECT", "T1.", "`", "School", "Type", "`", ",", "T1.", "`", "School", "Name", "`", ",", "T2.Latitude", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "ORDER", "BY", "T2.Latitude", "DESC", "LIMIT", "1"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'foreign name of the card in French' refers to foreign_data.language = 'French'", "'black border color' refers to cards.borderColor = 'black'"]}, {"db_id": "california_schools", "question": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.", "evidence": "Kindergarten to 8th grade refers to K-8; 'Offers a magnet program' means Magnet = 1.", "SQL": "SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City", "question_toks": ["Of", "the", "schools", "that", "offers", "a", "magnet", "program", "serving", "a", "grade", "span", "of", "Kindergarten", "to", "8th", "grade", ",", "how", "many", "offers", "Multiple", "Provision", "Types", "?", "List", "the", "number", "of", "cities", "that", "offers", "a", "Kindergarten", "to", "8th", "grade", "span", "and", "indicate", "how", "many", "schools", "are", "there", "serving", "such", "grade", "span", "for", "each", "city", "."], "SQL_toks": ["SELECT", "T2.City", ",", "COUNT", "(", "T2.CDSCode", ")", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.Magnet", "=", "1", "AND", "T2.GSoffered", "=", "'", "K-8", "'", "AND", "T1.", "`", "NSLP", "Provision", "Status", "`", "=", "'Multiple", "Provision", "Types", "'", "GROUP", "BY", "T2.City"], "evidence_toks": ["Kindergarten", "to", "8th", "grade", "refers", "to", "K-8", ";", "'Offers", "a", "magnet", "program", "'", "means", "Magnet", "=", "1", "."], "difficulty": "challenging", "templatized_domain_statements": ["'cards without power are in French' refers to foreign_data.language = 'French'", "'cards without power' refers to cards.power IS NULL OR cards.power LIKE '%*%'", "'percentage of cards without power are in French' refers to CAST(SUM(CASE WHEN foreign_data.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id) WHERE cards.power IS NULL OR cards.power LIKE '%*%'"]}, {"db_id": "california_schools", "question": "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.", "evidence": "Percent (%) Eligible Free (K-12) = `FRPM Count (K-12)` / `Enrollment (K-12)` * 100%", "SQL": "SELECT T1.`Free Meal Count (K-12)` * 100 / T1.`Enrollment (K-12)`, T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine'", "question_toks": ["What", "is", "the", "Percent", "(", "%", ")", "Eligible", "Free", "(", "K-12", ")", "in", "the", "school", "administered", "by", "an", "administrator", "whose", "first", "name", "is", "Alusine", ".", "List", "the", "district", "code", "of", "the", "school", "."], "SQL_toks": ["SELECT", "T1.", "`", "Free", "Meal", "Count", "(", "K-12", ")", "`", "*", "100", "/", "T1.", "`", "Enrollment", "(", "K-12", ")", "`", ",", "T1.", "`", "District", "Code", "`", "FROM", "frpm", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.CDSCode", "=", "T2.CDSCode", "WHERE", "T2.AdmFName1", "=", "'Alusine", "'"], "evidence_toks": ["Percent", "(", "%", ")", "Eligible", "Free", "(", "K-12", ")", "=", "`", "FRPM", "Count", "(", "K-12", ")", "`", "/", "`", "Enrollment", "(", "K-12", ")", "`", "*", "100", "%"], "difficulty": "moderate", "templatized_domain_statements": ["'Japanese translated sets' refers to set_translations.language = 'Japanese'", "'Japanese translated sets are expansion sets' refers to sets.type = 'expansion'", "'percentage of Japanese translated sets' refers to CAST(SUM(CASE WHEN set_translations.language = 'Japanese' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(sets.id)"]}, {"db_id": "california_schools", "question": "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.", "evidence": "", "SQL": "SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1", "question_toks": ["What", "is", "the", "administrator", "'s", "email", "address", "for", "the", "school", "with", "the", "highest", "number", "of", "test", "takers", "who", "received", "SAT", "scores", "of", "at", "least", "1500", "?", "Provide", "the", "name", "of", "the", "school", "."], "SQL_toks": ["SELECT", "T2.AdmEmail1", ",", "T2.School", "FROM", "satscores", "AS", "T1", "INNER", "JOIN", "schools", "AS", "T2", "ON", "T1.cds", "=", "T2.CDSCode", "ORDER", "BY", "T1.NumGE1500", "DESC", "LIMIT", "1"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'kind of printing' refers to cards.availability", "'printing is on the card that Daren Bader created' refers to cards.artist = 'Daren Bader'"]}]