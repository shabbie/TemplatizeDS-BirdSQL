[{"db_id": "superhero", "question": "Please list all the superpowers of 3-D Man.", "evidence": "3-D Man refers to superhero_name = '3-D Man'; superpowers refers to power_name", "SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'", "question_toks": ["Please", "list", "all", "the", "superpowers", "of", "3-D", "Man", "."], "SQL_toks": ["SELECT", "T3.power_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T1.superhero_name", "=", "'", "3-D", "Man", "'"], "evidence_toks": ["3-D", "Man", "refers", "to", "superhero_name", "=", "'", "3-D", "Man", "'", ";", "superpowers", "refers", "to", "power_name"], "difficulty": "simple", "templatized_domain_statements": ["'3-D Man' refers to superhero.superhero_name = '3-D Man'", "'all the superpowers' refers to superpower.power_name"]}, {"db_id": "superhero", "question": "How many superheroes have the super power of \"Super Strength\"?", "evidence": "super power of \"Super Strength\" refers to power_name = 'Super Strength'", "SQL": "SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Super Strength'", "question_toks": ["How", "many", "superheroes", "have", "the", "super", "power", "of", "``", "Super", "Strength", "''", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.hero_id", ")", "FROM", "hero_power", "AS", "T1", "INNER", "JOIN", "superpower", "AS", "T2", "ON", "T1.power_id", "=", "T2.id", "WHERE", "T2.power_name", "=", "'Super", "Strength", "'"], "evidence_toks": ["super", "power", "of", "``", "Super", "Strength", "''", "refers", "to", "power_name", "=", "'Super", "Strength", "'"], "difficulty": "simple", "templatized_domain_statements": ["super power of Super Strength refers to superpower.power_name = 'Super Strength'"]}, {"db_id": "superhero", "question": "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?", "evidence": "super power of \"Super Strength\" refers to power_name = 'Super Strength'; a height of over 200cm refers to height_cm > 200", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200", "question_toks": ["Among", "the", "superheroes", "with", "the", "super", "power", "of", "``", "Super", "Strength", "''", ",", "how", "many", "of", "them", "have", "a", "height", "of", "over", "200cm", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T3.power_name", "=", "'Super", "Strength", "'", "AND", "T1.height_cm", ">", "200"], "evidence_toks": ["super", "power", "of", "``", "Super", "Strength", "''", "refers", "to", "power_name", "=", "'Super", "Strength", "'", ";", "a", "height", "of", "over", "200cm", "refers", "to", "height_cm", ">", "200"], "difficulty": "moderate", "templatized_domain_statements": ["super power of Super Strength refers to superpower.power_name = 'Super Strength'", "'height of over {100} cm' refers to superhero.height_cm > 100"]}, {"db_id": "superhero", "question": "Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?", "evidence": "blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id; super power of \"Agility\" refers to power_name = 'Agility'", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id WHERE T3.power_name = 'Agility' AND T4.colour = 'Blue'", "question_toks": ["Among", "the", "superheroes", "with", "blue", "eyes", ",", "how", "many", "of", "them", "have", "the", "super", "power", "of", "``", "Agility", "''", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "INNER", "JOIN", "colour", "AS", "T4", "ON", "T1.eye_colour_id", "=", "T4.id", "WHERE", "T3.power_name", "=", "'Agility", "'", "AND", "T4.colour", "=", "'Blue", "'"], "evidence_toks": ["blue", "eyes", "refers", "to", "colour", "=", "'Blue", "'", "and", "eye_colour_id", "=", "colour.id", ";", "super", "power", "of", "``", "Agility", "''", "refers", "to", "power_name", "=", "'Agility", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'superheroes with blue eyes' refers to colour.colour = 'Blue'", "'super power of Agility' refers to superpower.power_name = 'Agility'"]}, {"db_id": "superhero", "question": "Please list the superhero names of all the superheroes that have blue eyes and blond hair.", "evidence": "blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id; blond hair refers to colour = 'Blond' and hair_colour_id = colour.id; super power of \"Agility\" refers to power_name = 'Agility'", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'", "question_toks": ["Please", "list", "the", "superhero", "names", "of", "all", "the", "superheroes", "that", "have", "blue", "eyes", "and", "blond", "hair", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "INNER", "JOIN", "colour", "AS", "T3", "ON", "T1.hair_colour_id", "=", "T3.id", "WHERE", "T2.colour", "=", "'Blue", "'", "AND", "T3.colour", "=", "'Blond", "'"], "evidence_toks": ["blue", "eyes", "refers", "to", "colour", "=", "'Blue", "'", "and", "eye_colour_id", "=", "colour.id", ";", "blond", "hair", "refers", "to", "colour", "=", "'Blond", "'", "and", "hair_colour_id", "=", "colour.id", ";", "super", "power", "of", "``", "Agility", "''", "refers", "to", "power_name", "=", "'Agility", "'"], "difficulty": "challenging", "templatized_domain_statements": ["'superheroes that have blue eyes' refers to colour.colour = 'Blue'", "'superheroes that have blond hair' refers to colour.colour = 'Blond'"]}, {"db_id": "superhero", "question": "How many superheroes are published by Marvel Comics?", "evidence": "published by Marvel Comics refers to publisher_name = 'Marvel Comics'", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'", "question_toks": ["How", "many", "superheroes", "are", "published", "by", "Marvel", "Comics", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T2.publisher_name", "=", "'Marvel", "Comics", "'"], "evidence_toks": ["published", "by", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'"], "difficulty": "simple", "templatized_domain_statements": ["'published by Marvel Comics' refers to publisher.publisher_name = 'Marvel Comics'"]}, {"db_id": "superhero", "question": "Please give the full name of the tallest hero published by Marvel Comics.", "evidence": "the tallest hero refers to MAX(height_cm); published by Marvel Comics refers to publisher_name = 'Marvel Comics'", "SQL": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1", "question_toks": ["Please", "give", "the", "full", "name", "of", "the", "tallest", "hero", "published", "by", "Marvel", "Comics", "."], "SQL_toks": ["SELECT", "T1.full_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T2.publisher_name", "=", "'Marvel", "Comics", "'", "ORDER", "BY", "T1.height_cm", "DESC", "LIMIT", "1"], "evidence_toks": ["the", "tallest", "hero", "refers", "to", "MAX", "(", "height_cm", ")", ";", "published", "by", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'the tallest hero' refers to ORDER BY superhero.height_cm DESC LIMIT 1", "'published by Marvel Comics' refers to publisher.publisher_name = 'Marvel Comics'"]}, {"db_id": "superhero", "question": "Who is the publisher of Sauron?", "evidence": "the publisher refers to publisher_name; Sauron refers to superhero_name = 'Sauron'", "SQL": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'", "question_toks": ["Who", "is", "the", "publisher", "of", "Sauron", "?"], "SQL_toks": ["SELECT", "T2.publisher_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T1.superhero_name", "=", "'Sauron", "'"], "evidence_toks": ["the", "publisher", "refers", "to", "publisher_name", ";", "Sauron", "refers", "to", "superhero_name", "=", "'Sauron", "'"], "difficulty": "simple", "templatized_domain_statements": ["'the publisher' refers to publisher.publisher_name", "'superhero Sauron' refers to superhero.superhero_name = 'Sauron'"]}, {"db_id": "superhero", "question": "Among the superheroes from Marvel Comics, how many of them have blue eyes?", "evidence": "the superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Blue'", "question_toks": ["Among", "the", "superheroes", "from", "Marvel", "Comics", ",", "how", "many", "of", "them", "have", "blue", "eyes", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "colour", "AS", "T3", "ON", "T1.eye_colour_id", "=", "T3.id", "WHERE", "T2.publisher_name", "=", "'Marvel", "Comics", "'", "AND", "T3.colour", "=", "'Blue", "'"], "evidence_toks": ["the", "superheroes", "from", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'", ";", "blue", "eyes", "refers", "to", "colour", "=", "'Blue", "'", "and", "eye_colour_id", "=", "colour.id"], "difficulty": "moderate", "templatized_domain_statements": ["'the superheroes from Marvel Comics' refers to publisher.publisher_name = 'Marvel Comics'", "'blue eyes' refers to colour.colour = 'Blue'"]}, {"db_id": "superhero", "question": "What is the average height of the superheroes from Marvel Comics?", "evidence": "superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; average height of the superheroes refers to AVG(height_cm)", "SQL": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'", "question_toks": ["What", "is", "the", "average", "height", "of", "the", "superheroes", "from", "Marvel", "Comics", "?"], "SQL_toks": ["SELECT", "AVG", "(", "T1.height_cm", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T2.publisher_name", "=", "'Marvel", "Comics", "'"], "evidence_toks": ["superheroes", "from", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'", ";", "average", "height", "of", "the", "superheroes", "refers", "to", "AVG", "(", "height_cm", ")"], "difficulty": "simple", "templatized_domain_statements": ["'superheroes from Marvel Comics' refers to publisher.publisher_name = 'Marvel Comics'", "'average height of the superheroes' refers to AVG(superhero.height_cm)"]}, {"db_id": "superhero", "question": "Among the superheroes from Marvel Comics, what is the percentage of those who have the super power of \"Super Strength\"?", "evidence": "the superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; super power of \"Super Strength\" refers to power_name = 'Super Strength'; Calculation = MULTIPLY(DIVIDE(SUM(power_name = 'Super Strength'), COUNT(id)), 100)", "SQL": "SELECT CAST(COUNT(CASE WHEN T3.power_name = 'Super Strength' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T4.publisher_name = 'Marvel Comics'", "question_toks": ["Among", "the", "superheroes", "from", "Marvel", "Comics", ",", "what", "is", "the", "percentage", "of", "those", "who", "have", "the", "super", "power", "of", "``", "Super", "Strength", "''", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T3.power_name", "=", "'Super", "Strength", "'", "THEN", "T1.id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "INNER", "JOIN", "publisher", "AS", "T4", "ON", "T1.publisher_id", "=", "T4.id", "WHERE", "T4.publisher_name", "=", "'Marvel", "Comics", "'"], "evidence_toks": ["the", "superheroes", "from", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'", ";", "super", "power", "of", "``", "Super", "Strength", "''", "refers", "to", "power_name", "=", "'Super", "Strength", "'", ";", "Calculation", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUM", "(", "power_name", "=", "'Super", "Strength", "'", ")", ",", "COUNT", "(", "id", ")", ")", ",", "100", ")"], "difficulty": "challenging", "templatized_domain_statements": ["'superheroes from Marvel Comics' refers to publisher.publisher_name = 'Marvel Comics'", "'percentage of superheroes who have the super power of Super Strength' refers to CAST(COUNT(CASE WHEN superpower.power_name = 'Super Strength' THEN superhero.id ELSE NULL END) AS REAL) * 100 / COUNT(superhero.id)"]}, {"db_id": "superhero", "question": "What is the publisher's name of Blue Beetle II?", "evidence": "Blue Beetle II refers to superhero_name = 'Blue Beetle II'", "SQL": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'", "question_toks": ["What", "is", "the", "publisher", "'s", "name", "of", "Blue", "Beetle", "II", "?"], "SQL_toks": ["SELECT", "T2.publisher_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T1.superhero_name", "=", "'Blue", "Beetle", "II", "'"], "evidence_toks": ["Blue", "Beetle", "II", "refers", "to", "superhero_name", "=", "'Blue", "Beetle", "II", "'"], "difficulty": "simple", "templatized_domain_statements": ["'Superhero Blue Beetle II' refers to superhero.superhero_name = 'Blue Beetle II'"]}, {"db_id": "superhero", "question": "What is Copycat's race?", "evidence": "Copycat is the superhero_name;", "SQL": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'", "question_toks": ["What", "is", "Copycat", "'s", "race", "?"], "SQL_toks": ["SELECT", "T2.race", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T1.superhero_name", "=", "'Copycat", "'"], "evidence_toks": ["Copycat", "is", "the", "superhero_name", ";"], "difficulty": "simple", "templatized_domain_statements": ["'Copycat' refers to superhero.superhero_name = 'Copycat'"]}, {"db_id": "superhero", "question": "How many superheroes have durability of less than 50?", "evidence": "durability of less than 50 refers to attribute_name = 'Durability' AND attribute_value < 50", "SQL": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Durability' AND T1.attribute_value < 50", "question_toks": ["How", "many", "superheroes", "have", "durability", "of", "less", "than", "50", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.hero_id", ")", "FROM", "hero_attribute", "AS", "T1", "INNER", "JOIN", "attribute", "AS", "T2", "ON", "T1.attribute_id", "=", "T2.id", "WHERE", "T2.attribute_name", "=", "'Durability", "'", "AND", "T1.attribute_value", "<", "50"], "evidence_toks": ["durability", "of", "less", "than", "50", "refers", "to", "attribute_name", "=", "'Durability", "'", "AND", "attribute_value", "<", "50"], "difficulty": "simple", "templatized_domain_statements": ["'durability of less than {100}' refers to hero_attribute.attribute_value < 100", "'superheroes who have durability' refers to attribute.attribute_name = 'Durability'"]}, {"db_id": "superhero", "question": "How many female superheroes have a strength value of 100?", "evidence": "female refers to gender = 'Female'; strength value of 100 refers to attribute_name = 'Strength' AND attribute_value = 100", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.attribute_name = 'Strength' AND T2.attribute_value = 100 AND T4.gender = 'Female'", "question_toks": ["How", "many", "female", "superheroes", "have", "a", "strength", "value", "of", "100", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "attribute", "AS", "T3", "ON", "T2.attribute_id", "=", "T3.id", "INNER", "JOIN", "gender", "AS", "T4", "ON", "T1.gender_id", "=", "T4.id", "WHERE", "T3.attribute_name", "=", "'Strength", "'", "AND", "T2.attribute_value", "=", "100", "AND", "T4.gender", "=", "'Female", "'"], "evidence_toks": ["female", "refers", "to", "gender", "=", "'Female", "'", ";", "strength", "value", "of", "100", "refers", "to", "attribute_name", "=", "'Strength", "'", "AND", "attribute_value", "=", "100"], "difficulty": "moderate", "templatized_domain_statements": ["'female' refers to gender.gender = 'Female'", "'superheroes who have a strength value of {100}' refers to attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100"]}, {"db_id": "superhero", "question": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.", "evidence": "published by Marvel Comics refers to publisher_name = 'Marvel Comics'; superheroes who act in their own self-interest or make decisions based on their own moral code refers to alignment = 'Bad'; calculation = MULTIPLY(DIVIDE(SUM(alignment = 'Bad); count(id)), 100)", "SQL": "SELECT CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*), COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'", "question_toks": ["What", "is", "the", "percentage", "of", "superheroes", "who", "act", "in", "their", "own", "self-interest", "or", "make", "decisions", "based", "on", "their", "own", "moral", "code", "?", "Indicate", "how", "many", "of", "the", "said", "superheroes", "were", "published", "by", "Marvel", "Comics", "."], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "T2.publisher_name", "=", "'Marvel", "Comics", "'", "THEN", "1", "ELSE", "0", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "*", ")", ",", "COUNT", "(", "*", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "alignment", "AS", "T3", "ON", "T3.id", "=", "T1.alignment_id", "WHERE", "T3.alignment", "=", "'Bad", "'"], "evidence_toks": ["published", "by", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'", ";", "superheroes", "who", "act", "in", "their", "own", "self-interest", "or", "make", "decisions", "based", "on", "their", "own", "moral", "code", "refers", "to", "alignment", "=", "'Bad", "'", ";", "calculation", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUM", "(", "alignment", "=", "'Bad", ")", ";", "count", "(", "id", ")", ")", ",", "100", ")"], "difficulty": "challenging", "templatized_domain_statements": ["'published by Marvel Comics' refers to publisher.publisher_name = 'Marvel Comics'", "'superheroes who act in their own self-interest or make decisions based on their own moral code' refers to alignment.alignment = 'Bad'", "'percentage of superheroes who act in their own self-interest or make decisions based on their own moral code' refers to CAST(SUM(CASE WHEN alignment.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)"]}, {"db_id": "superhero", "question": "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.", "evidence": "DC refers to publisher_name = 'DC Comics'; Marvel Comics refers to publisher_name = 'Marvel Comics'; calculation = SUBTRACT(SUM(publisher_name = 'Marvel Comics'), SUM(publisher_name = 'DC Comics'))", "SQL": "SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id", "question_toks": ["Between", "DC", "and", "Marvel", "Comics", ",", "which", "publisher", "has", "published", "more", "superheroes", "?", "Find", "the", "difference", "in", "the", "number", "of", "superheroes", "they", "have", "published", "."], "SQL_toks": ["SELECT", "SUM", "(", "CASE", "WHEN", "T2.publisher_name", "=", "'Marvel", "Comics", "'", "THEN", "1", "ELSE", "0", "END", ")", "-", "SUM", "(", "CASE", "WHEN", "T2.publisher_name", "=", "'DC", "Comics", "'", "THEN", "1", "ELSE", "0", "END", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id"], "evidence_toks": ["DC", "refers", "to", "publisher_name", "=", "'DC", "Comics", "'", ";", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'", ";", "calculation", "=", "SUBTRACT", "(", "SUM", "(", "publisher_name", "=", "'Marvel", "Comics", "'", ")", ",", "SUM", "(", "publisher_name", "=", "'DC", "Comics", "'", ")", ")"], "difficulty": "challenging", "templatized_domain_statements": ["'DC comics' refers to publisher.publisher_name = 'DC Comics'", "'Marvel comics' refers to publisher.publisher_name = 'Marvel Comics'", "'difference in the number of superheroes DC and Marvel have published refers to SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)"]}, {"db_id": "superhero", "question": "Calculate the average attribute value of all superheroes.", "evidence": "average attribute value of all superheroes refers to AVG(attribute_value)", "SQL": "SELECT AVG(attribute_value) FROM hero_attribute", "question_toks": ["Calculate", "the", "average", "attribute", "value", "of", "all", "superheroes", "."], "SQL_toks": ["SELECT", "AVG", "(", "attribute_value", ")", "FROM", "hero_attribute"], "evidence_toks": ["average", "attribute", "value", "of", "all", "superheroes", "refers", "to", "AVG", "(", "attribute_value", ")"], "difficulty": "simple", "templatized_domain_statements": ["attribute value refers to hero_attribute.attribute_value"]}, {"db_id": "superhero", "question": "What is the total number of superheroes without full name?", "evidence": "superheroes without full name refers to full_name IS NULL", "SQL": "SELECT COUNT(id) FROM superhero WHERE full_name IS NULL", "question_toks": ["What", "is", "the", "total", "number", "of", "superheroes", "without", "full", "name", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "id", ")", "FROM", "superhero", "WHERE", "full_name", "IS", "NULL"], "evidence_toks": ["superheroes", "without", "full", "name", "refers", "to", "full_name", "IS", "NULL"], "difficulty": "simple", "templatized_domain_statements": ["'full name of superheroes' refers to superhero.full_name"]}, {"db_id": "superhero", "question": "List down at least five superpowers of male superheroes.", "evidence": "male refers to gender = 'Male'; superpowers refers to power_name;", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id INNER JOIN gender AS T4 ON T4.id = T1.gender_id WHERE T4.gender = 'Male' LIMIT 5", "question_toks": ["List", "down", "at", "least", "five", "superpowers", "of", "male", "superheroes", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T3.id", "=", "T2.power_id", "INNER", "JOIN", "gender", "AS", "T4", "ON", "T4.id", "=", "T1.gender_id", "WHERE", "T4.gender", "=", "'Male", "'", "LIMIT", "5"], "evidence_toks": ["male", "refers", "to", "gender", "=", "'Male", "'", ";", "superpowers", "refers", "to", "power_name", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'male' refers to gender.gender = 'Male'", "'superpowers' refers to superpower.power_name"]}, {"db_id": "superhero", "question": "Among the superheroes with height from 170 to 190, list the names of the superheroes with no eye color.", "evidence": "height from 170 to 190 refers to height_cm BETWEEN 170 AND 190; no eye color refers to eye_colour_id = 1", "SQL": "SELECT DISTINCT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.colour LIKE 'No Colour'", "question_toks": ["Among", "the", "superheroes", "with", "height", "from", "170", "to", "190", ",", "list", "the", "names", "of", "the", "superheroes", "with", "no", "eye", "color", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T1.height_cm", "BETWEEN", "170", "AND", "190", "AND", "T2.colour", "LIKE", "'No", "Colour", "'"], "evidence_toks": ["height", "from", "170", "to", "190", "refers", "to", "height_cm", "BETWEEN", "170", "AND", "190", ";", "no", "eye", "color", "refers", "to", "eye_colour_id", "=", "1"], "difficulty": "moderate", "templatized_domain_statements": ["height from {100} to {100} refers to superhero.height_cm BETWEEN 100 AND 100", "'no eye color' refers to T2.colour LIKE 'No Colour'"]}, {"db_id": "superhero", "question": "List down at least five full name of Demi-God superheroes.", "evidence": "Demi-God superheroes refers to race = 'Demi-God'", "SQL": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God'", "question_toks": ["List", "down", "at", "least", "five", "full", "name", "of", "Demi-God", "superheroes", "."], "SQL_toks": ["SELECT", "T1.full_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T2.race", "=", "'Demi-God", "'"], "evidence_toks": ["Demi-God", "superheroes", "refers", "to", "race", "=", "'Demi-God", "'"], "difficulty": "simple", "templatized_domain_statements": ["'Demi-God superheroes' refers to race.race = 'Demi-God'", "'full name of superheroes' refers to superhero.full_name"]}, {"db_id": "superhero", "question": "Among the male superheroes, list the full names of superheroes with weight greater than the 79% average weight of all superheroes.", "evidence": "male refers to gender_id = 1; calculation = weight_kg > MULTIPLY(AVG(weight_kg), 0.79)", "SQL": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg * 100 > ( SELECT AVG(weight_kg) FROM superhero ) * 79", "question_toks": ["Among", "the", "male", "superheroes", ",", "list", "the", "full", "names", "of", "superheroes", "with", "weight", "greater", "than", "the", "79", "%", "average", "weight", "of", "all", "superheroes", "."], "SQL_toks": ["SELECT", "T1.full_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "gender", "AS", "T2", "ON", "T1.gender_id", "=", "T2.id", "WHERE", "T2.gender", "=", "'Male", "'", "AND", "T1.weight_kg", "*", "100", ">", "(", "SELECT", "AVG", "(", "weight_kg", ")", "FROM", "superhero", ")", "*", "79"], "evidence_toks": ["male", "refers", "to", "gender_id", "=", "1", ";", "calculation", "=", "weight_kg", ">", "MULTIPLY", "(", "AVG", "(", "weight_kg", ")", ",", "0.79", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'male superheroes' refers to gender.gender = 'Male'", "'weight greater than the {100}% average weight of all superheroes' refers to superhero.weight_kg * 100 > ( SELECT AVG(superhero.weight_kg) FROM superhero ) * 100"]}, {"db_id": "superhero", "question": "Indicate the attribute value of superhero Abomination.", "evidence": "Abomination refers to superhero_name = 'Abomination';", "SQL": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'", "question_toks": ["Indicate", "the", "attribute", "value", "of", "superhero", "Abomination", "."], "SQL_toks": ["SELECT", "T2.attribute_value", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "WHERE", "T1.superhero_name", "=", "'Abomination", "'"], "evidence_toks": ["Abomination", "refers", "to", "superhero_name", "=", "'Abomination", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'superhero Abomination' refers to superhero.superhero_name = 'Abomination'"]}, {"db_id": "superhero", "question": "What are the superpowers of heroes with ID 1?", "evidence": "superpowers refers to power_name; heroes with ID 1 refers to hero_id = 1;", "SQL": "SELECT DISTINCT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1", "question_toks": ["What", "are", "the", "superpowers", "of", "heroes", "with", "ID", "1", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T2.power_name", "FROM", "hero_power", "AS", "T1", "INNER", "JOIN", "superpower", "AS", "T2", "ON", "T1.power_id", "=", "T2.id", "WHERE", "T1.hero_id", "=", "1"], "evidence_toks": ["superpowers", "refers", "to", "power_name", ";", "heroes", "with", "ID", "1", "refers", "to", "hero_id", "=", "1", ";"], "difficulty": "simple", "templatized_domain_statements": ["'superpowers' refers to superpower.power_name", "'heroes with ID 1' refers to hero_power.hero_id = 1"]}, {"db_id": "superhero", "question": "What is the average of superheroes with no skin colour?", "evidence": "average = DIVIDE(COUNT(superhero.id), SUM(skin_colour_id = 1)); no skin colour refers to skin_colour_id WHERE colour.id = 1;", "SQL": "SELECT CAST(COUNT(*) AS REAL) / SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id", "question_toks": ["What", "is", "the", "average", "of", "superheroes", "with", "no", "skin", "colour", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "*", ")", "AS", "REAL", ")", "/", "SUM", "(", "CASE", "WHEN", "T2.id", "=", "1", "THEN", "1", "ELSE", "0", "END", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.skin_colour_id", "=", "T2.id"], "evidence_toks": ["average", "=", "DIVIDE", "(", "COUNT", "(", "superhero.id", ")", ",", "SUM", "(", "skin_colour_id", "=", "1", ")", ")", ";", "no", "skin", "colour", "refers", "to", "skin_colour_id", "WHERE", "colour.id", "=", "1", ";"], "difficulty": "simple", "templatized_domain_statements": ["'no skin colour' refers to superhero.skin_colour_id = 1"]}, {"db_id": "superhero", "question": "Which superhero has the most durability published by Dark Horse Comics?", "evidence": "which superhero refers to superhero_name; most durability refers to MAX(attribute_value) WHERE attribute_name = 'durability'; published by Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1", "question_toks": ["Which", "superhero", "has", "the", "most", "durability", "published", "by", "Dark", "Horse", "Comics", "?"], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "attribute", "AS", "T3", "ON", "T3.id", "=", "T2.attribute_id", "INNER", "JOIN", "publisher", "AS", "T4", "ON", "T4.id", "=", "T1.publisher_id", "WHERE", "T4.publisher_name", "=", "'Dark", "Horse", "Comics", "'", "ORDER", "BY", "T2.attribute_value", "DESC", "LIMIT", "1"], "evidence_toks": ["which", "superhero", "refers", "to", "superhero_name", ";", "most", "durability", "refers", "to", "MAX", "(", "attribute_value", ")", "WHERE", "attribute_name", "=", "'durability", "'", ";", "published", "by", "Dark", "Horse", "Comics", "refers", "to", "publisher_name", "=", "'Dark", "Horse", "Comics", "'", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'which superhero' refers to superhero.superhero_name", "published by Dark Horse Comics refers to publisher.publisher_name = 'Dark Horse Comics'"]}, {"db_id": "superhero", "question": "What is the eyes colour of Abraham Sapien?", "evidence": "eye colour refers to colour.colour where eye_colour_id = colour.id; Abraham Sapien is the full name of superhero;", "SQL": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien'", "question_toks": ["What", "is", "the", "eyes", "colour", "of", "Abraham", "Sapien", "?"], "SQL_toks": ["SELECT", "T2.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T1.full_name", "=", "'Abraham", "Sapien", "'"], "evidence_toks": ["eye", "colour", "refers", "to", "colour.colour", "where", "eye_colour_id", "=", "colour.id", ";", "Abraham", "Sapien", "is", "the", "full", "name", "of", "superhero", ";"], "difficulty": "simple", "templatized_domain_statements": ["'eye colour' refers to colour.colour", "'Superhero Abraham Sapien' refers to superhero.full_name = 'Abraham Sapien'."]}, {"db_id": "superhero", "question": "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.", "evidence": "eyes refers to eye_colour_id; hair refers to hair_colour_id; skin colour refers to skin_colour_id; female superheroes refers to gender = 'Female'; published by Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';", "SQL": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'", "question_toks": ["List", "the", "eyes", ",", "hair", "and", "skin", "colour", "of", "all", "female", "superheroes", "published", "by", "Dark", "Horse", "Comics", "."], "SQL_toks": ["SELECT", "T1.eye_colour_id", ",", "T1.hair_colour_id", ",", "T1.skin_colour_id", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T2.id", "=", "T1.publisher_id", "INNER", "JOIN", "gender", "AS", "T3", "ON", "T3.id", "=", "T1.gender_id", "WHERE", "T2.publisher_name", "=", "'Dark", "Horse", "Comics", "'", "AND", "T3.gender", "=", "'Female", "'"], "evidence_toks": ["eyes", "refers", "to", "eye_colour_id", ";", "hair", "refers", "to", "hair_colour_id", ";", "skin", "colour", "refers", "to", "skin_colour_id", ";", "female", "superheroes", "refers", "to", "gender", "=", "'Female", "'", ";", "published", "by", "Dark", "Horse", "Comics", "refers", "to", "publisher_name", "=", "'Dark", "Horse", "Comics", "'", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'List the eyes' refers to superhero.eye_colour_id", "'List the hair' refers to superhero.hair_colour_id", "'List the skin colour' refers to superhero.skin_colour_id", "'female superheroes' refers to gender.gender = 'Female'", "'published by Dark Horse Comics' refers to publisher.publisher_name = 'Dark Horse Comics'"]}, {"db_id": "superhero", "question": "Which group does superhero A-Bomb belong to?", "evidence": "group refers to race; A-Bomb refers to superhero_name = 'A-Bomb';", "SQL": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb'", "question_toks": ["Which", "group", "does", "superhero", "A-Bomb", "belong", "to", "?"], "SQL_toks": ["SELECT", "T2.race", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T1.superhero_name", "=", "'", "A-Bomb", "'"], "evidence_toks": ["group", "refers", "to", "race", ";", "A-Bomb", "refers", "to", "superhero_name", "=", "'", "A-Bomb", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'Which group' refers to race.race", "'superhero A-Bomb' refers to superhero.superhero_name = 'A-Bomb'"]}, {"db_id": "superhero", "question": "Provide the hero name and race of Charles Chandler.", "evidence": "hero name refers to superhero_name; Charles Chandler is the full name of superhero;", "SQL": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'", "question_toks": ["Provide", "the", "hero", "name", "and", "race", "of", "Charles", "Chandler", "."], "SQL_toks": ["SELECT", "T1.superhero_name", ",", "T2.race", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T1.full_name", "=", "'Charles", "Chandler", "'"], "evidence_toks": ["hero", "name", "refers", "to", "superhero_name", ";", "Charles", "Chandler", "is", "the", "full", "name", "of", "superhero", ";"], "difficulty": "simple", "templatized_domain_statements": ["'Provide the race' refers to race.race", "'The hero name Charles Chandler' refers to superhero.superhero_name = 'Charles Chandler"]}, {"db_id": "superhero", "question": "List the powers of Hunter Zolomon.", "evidence": "Hunter Zolomon is the full name of superhero; list the powers refers to power_name;", "SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Hunter Zolomon'", "question_toks": ["List", "the", "powers", "of", "Hunter", "Zolomon", "."], "SQL_toks": ["SELECT", "T3.power_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T1.full_name", "=", "'Hunter", "Zolomon", "'"], "evidence_toks": ["Hunter", "Zolomon", "is", "the", "full", "name", "of", "superhero", ";", "list", "the", "powers", "refers", "to", "power_name", ";"], "difficulty": "simple", "templatized_domain_statements": ["'superhero Hunter Zolomon' refers to superhero.full_name = 'Hunter Zolomon'.", "'list the powers' refers to superpower.power_name"]}, {"db_id": "superhero", "question": "Provide the heights of the heroes whose eye colours are amber.", "evidence": "heights of the heroes refers to height_cm; eye colours are amber refers to colour.colour = 'Amber' WHERE eye_colour_id = colour.id;", "SQL": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'", "question_toks": ["Provide", "the", "heights", "of", "the", "heroes", "whose", "eye", "colours", "are", "amber", "."], "SQL_toks": ["SELECT", "T1.height_cm", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T2.colour", "=", "'Amber", "'"], "evidence_toks": ["heights", "of", "the", "heroes", "refers", "to", "height_cm", ";", "eye", "colours", "are", "amber", "refers", "to", "colour.colour", "=", "'Amber", "'", "WHERE", "eye_colour_id", "=", "colour.id", ";"], "difficulty": "simple", "templatized_domain_statements": ["'heights of the heroes' refers to superhero.height_cm", "'eye colours are amber' refers to colour.colour = 'Amber'"]}, {"db_id": "superhero", "question": "Provide the eye colours of the heroes whose skin colours are gold.", "evidence": "eye colours refers to eye_colour_id; skin colours are gold refers to colour.colour = 'Gold' WHERE skin_colour_id = colour.id;", "SQL": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Gold'", "question_toks": ["Provide", "the", "eye", "colours", "of", "the", "heroes", "whose", "skin", "colours", "are", "gold", "."], "SQL_toks": ["SELECT", "T2.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T2.colour", "=", "'Gold", "'"], "evidence_toks": ["eye", "colours", "refers", "to", "eye_colour_id", ";", "skin", "colours", "are", "gold", "refers", "to", "colour.colour", "=", "'Gold", "'", "WHERE", "skin_colour_id", "=", "colour.id", ";"], "difficulty": "simple", "templatized_domain_statements": ["'eye colours of the heroes' refers to color.color", "'skin colours are gold' refers to colour.colour = 'Gold'"]}, {"db_id": "superhero", "question": "How many percent of female heroes were published by Marvel Comics?", "evidence": "percent = MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'Marvel Comics'), COUNT(publisher_name = 'Marvel Comics')), 100); female heroes refers to gender = 'Female'; Marvel Comics refers to publisher_name = 'Marvel Comics';", "SQL": "SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female'", "question_toks": ["How", "many", "percent", "of", "female", "heroes", "were", "published", "by", "Marvel", "Comics", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T2.publisher_name", "=", "'Marvel", "Comics", "'", "THEN", "1", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "gender", "AS", "T3", "ON", "T1.gender_id", "=", "T3.id", "WHERE", "T3.gender", "=", "'Female", "'"], "evidence_toks": ["percent", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUM", "(", "gender", "=", "'Female", "'", "WHERE", "publisher_name", "=", "'Marvel", "Comics", "'", ")", ",", "COUNT", "(", "publisher_name", "=", "'Marvel", "Comics", "'", ")", ")", ",", "100", ")", ";", "female", "heroes", "refers", "to", "gender", "=", "'Female", "'", ";", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'", ";"], "difficulty": "challenging", "templatized_domain_statements": [" female heroes refers to gender.gender = 'Female'", "'published by Marvel Comics' refers to publisher.publisher_name = 'Marvel Comics'", "'percent of heroes were published by Marvel Comics' refers to CAST(COUNT(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(superhero.id)"]}, {"db_id": "superhero", "question": "Find the average weight of the heroes who are aliens.", "evidence": "average = AVG(weight_kg); aliens refers to race = 'Alien';", "SQL": "SELECT CAST(SUM(T1.weight_kg) AS REAL) / COUNT(T1.id) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'", "question_toks": ["Find", "the", "average", "weight", "of", "the", "heroes", "who", "are", "aliens", "."], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "T1.weight_kg", ")", "AS", "REAL", ")", "/", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T2.race", "=", "'Alien", "'"], "evidence_toks": ["average", "=", "AVG", "(", "weight_kg", ")", ";", "aliens", "refers", "to", "race", "=", "'Alien", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'weight of the heroes' refers to superhero.weight_kg", "'heroes who are aliens' refers to race.race = 'Alien'"]}, {"db_id": "superhero", "question": "Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight.", "evidence": "difference = SUBTRACT(SUM(weight_kg WHERE full_name = 'Emil Blonsky'), SUM(weight_kg WHERE full_name = 'Charles Chandler')); Emil Blonsky is the full name of superhero; Charles Chandler is the full name of superhero;", "SQL": "SELECT ( SELECT weight_kg FROM superhero WHERE full_name LIKE 'Emil Blonsky' ) - ( SELECT weight_kg FROM superhero WHERE full_name LIKE 'Charles Chandler' ) AS CALCULATE", "question_toks": ["Calculate", "the", "difference", "between", "Emil", "Blonsky", "'s", "weight", "and", "Charles", "Chandler", "'s", "weight", "."], "SQL_toks": ["SELECT", "(", "SELECT", "weight_kg", "FROM", "superhero", "WHERE", "full_name", "LIKE", "'Emil", "Blonsky", "'", ")", "-", "(", "SELECT", "weight_kg", "FROM", "superhero", "WHERE", "full_name", "LIKE", "'Charles", "Chandler", "'", ")", "AS", "CALCULATE"], "evidence_toks": ["difference", "=", "SUBTRACT", "(", "SUM", "(", "weight_kg", "WHERE", "full_name", "=", "'Emil", "Blonsky", "'", ")", ",", "SUM", "(", "weight_kg", "WHERE", "full_name", "=", "'Charles", "Chandler", "'", ")", ")", ";", "Emil", "Blonsky", "is", "the", "full", "name", "of", "superhero", ";", "Charles", "Chandler", "is", "the", "full", "name", "of", "superhero", ";"], "difficulty": "moderate", "templatized_domain_statements": ["Hero name Emil Blonsky refers to superhero.full_name = 'Emil Blonsky'", "Hero name Charles Chandler refers to superhero.full_name = 'Charles Chandler'", "'difference between Emil Blonsky's weight and Charles Chandler's weight' refers to ( SELECT weight_kg FROM superhero WHERE full_name LIKE 'Emil Blonsky' ) - ( SELECT weight_kg FROM superhero WHERE full_name LIKE 'Charles Chandler' )"]}, {"db_id": "superhero", "question": "How many superheroes have a neutral alignment?", "evidence": "neutral alignment refers to alignment_id = 3;", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'", "question_toks": ["How", "many", "superheroes", "have", "a", "neutral", "alignment", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "alignment", "AS", "T2", "ON", "T1.alignment_id", "=", "T2.id", "WHERE", "T2.alignment", "=", "'Neutral", "'"], "evidence_toks": ["neutral", "alignment", "refers", "to", "alignment_id", "=", "3", ";"], "difficulty": "simple", "templatized_domain_statements": ["'neutral alignment' refers to alignment.alignment = 'Neutral'"]}, {"db_id": "superhero", "question": "State all of 3-D Man's attributes along with their values.", "evidence": "3-D Man is the superhero_name. attributes refers to attribute_name; values refers to attribute_value;", "SQL": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = '3-D Man'", "question_toks": ["State", "all", "of", "3-D", "Man", "'s", "attributes", "along", "with", "their", "values", "."], "SQL_toks": ["SELECT", "T3.attribute_name", ",", "T2.attribute_value", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "attribute", "AS", "T3", "ON", "T2.attribute_id", "=", "T3.id", "WHERE", "T1.superhero_name", "=", "'", "3-D", "Man", "'"], "evidence_toks": ["3-D", "Man", "is", "the", "superhero_name", ".", "attributes", "refers", "to", "attribute_name", ";", "values", "refers", "to", "attribute_value", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'3-D Man' refers to is the superhero.superhero_name = '3-D Man'", "'State all attributes' refers to hero_attribute.attribute_name", "'along with attribute values' refers to hero_attribute.attribute_value"]}, {"db_id": "superhero", "question": "What is the publisher for Hawkman, Karate Kid and Speedy?", "evidence": "publisher refers to publisher_name; Hawkman refers to superhero_name = 'Hawkman'; Karate Kid refers to superhero_name = 'Karate Kid'; Speedy refers to superhero_name = 'Speedy';", "SQL": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')", "question_toks": ["What", "is", "the", "publisher", "for", "Hawkman", ",", "Karate", "Kid", "and", "Speedy", "?"], "SQL_toks": ["SELECT", "T2.publisher_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T1.superhero_name", "IN", "(", "'Hawkman", "'", ",", "'Karate", "Kid", "'", ",", "'Speedy", "'", ")"], "evidence_toks": ["publisher", "refers", "to", "publisher_name", ";", "Hawkman", "refers", "to", "superhero_name", "=", "'Hawkman", "'", ";", "Karate", "Kid", "refers", "to", "superhero_name", "=", "'Karate", "Kid", "'", ";", "Speedy", "refers", "to", "superhero_name", "=", "'Speedy", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'What is the publisher' refers to publisher.publisher_name", "'Superhero Hawkman' refers to superhero.superhero_name = 'Hawkman'", "'Superhero Karate Kid' refers to superhero.superhero_name = 'Karate Kid'", "'Superhero Speedy' refers to superhero.superhero_name = 'Speedy'"]}, {"db_id": "superhero", "question": "How many superheroes didn't have any publisher?", "evidence": "didn't have any publisher refers to publisher.id = 1;", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.id = 1", "question_toks": ["How", "many", "superheroes", "did", "n't", "have", "any", "publisher", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T2.id", "=", "1"], "evidence_toks": ["did", "n't", "have", "any", "publisher", "refers", "to", "publisher.id", "=", "1", ";"], "difficulty": "simple", "templatized_domain_statements": ["'didn't have any publisher' refers to 'publisher.id = 1'"]}, {"db_id": "superhero", "question": "Find the ratio between male superheroes and female superheroes.", "evidence": "ratio = DIVIDE(SUM(gender_id = 1) / SUM(gender_id = 2)); male superheroes refers to gender_id = 1; female superheroes refers to gender_id = 2;", "SQL": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Male' THEN T1.id ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.gender = 'Female' THEN T1.id ELSE NULL END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id", "question_toks": ["Find", "the", "ratio", "between", "male", "superheroes", "and", "female", "superheroes", "."], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T2.gender", "=", "'Male", "'", "THEN", "T1.id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "/", "COUNT", "(", "CASE", "WHEN", "T2.gender", "=", "'Female", "'", "THEN", "T1.id", "ELSE", "NULL", "END", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "gender", "AS", "T2", "ON", "T1.gender_id", "=", "T2.id"], "evidence_toks": ["ratio", "=", "DIVIDE", "(", "SUM", "(", "gender_id", "=", "1", ")", "/", "SUM", "(", "gender_id", "=", "2", ")", ")", ";", "male", "superheroes", "refers", "to", "gender_id", "=", "1", ";", "female", "superheroes", "refers", "to", "gender_id", "=", "2", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'male superheroes' refers to gender.gender = 'Male'", "'female superheroes' refers to gender.gender = 'Female'", "'sum of all male superheroes' refers to COUNT(CASE WHEN gender.gender = 'Male' THEN superhero.id ELSE NULL END) AS REAL)"]}, {"db_id": "superhero", "question": "Who is the tallest superhero?", "evidence": "who refers to superhero_name; tallest superhero refers to MAX(height_cm);", "SQL": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1", "question_toks": ["Who", "is", "the", "tallest", "superhero", "?"], "SQL_toks": ["SELECT", "superhero_name", "FROM", "superhero", "ORDER", "BY", "height_cm", "DESC", "LIMIT", "1"], "evidence_toks": ["who", "refers", "to", "superhero_name", ";", "tallest", "superhero", "refers", "to", "MAX", "(", "height_cm", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'superhero' refers to superhero.superhero_name", "'tallest superhero' refers to ORDER BY superhero.height_cm DESC LIMIT 1"]}, {"db_id": "superhero", "question": "What is the power ID of cryokinesis?", "evidence": "power ID refers to superpower.id; cryokinesis refers to power_name = 'cryokinesis';", "SQL": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis'", "question_toks": ["What", "is", "the", "power", "ID", "of", "cryokinesis", "?"], "SQL_toks": ["SELECT", "id", "FROM", "superpower", "WHERE", "power_name", "=", "'Cryokinesis", "'"], "evidence_toks": ["power", "ID", "refers", "to", "superpower.id", ";", "cryokinesis", "refers", "to", "power_name", "=", "'cryokinesis", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'What is the power ID' refers to superpower.id", "'of cryokinesis' refers to superpower.power_name = 'Cryokinesis'"]}, {"db_id": "superhero", "question": "Provide the name of superhero with superhero ID 294.", "evidence": "name of superhero refers to superhero_name; superhero ID 294 refers to superhero.id = 294;", "SQL": "SELECT superhero_name FROM superhero WHERE id = 294", "question_toks": ["Provide", "the", "name", "of", "superhero", "with", "superhero", "ID", "294", "."], "SQL_toks": ["SELECT", "superhero_name", "FROM", "superhero", "WHERE", "id", "=", "294"], "evidence_toks": ["name", "of", "superhero", "refers", "to", "superhero_name", ";", "superhero", "ID", "294", "refers", "to", "superhero.id", "=", "294", ";"], "difficulty": "simple", "templatized_domain_statements": ["'Provide the name of superhero' refers to superhero.superhero_name", "with superhero ID {100} refers to superhero.id = 100"]}, {"db_id": "superhero", "question": "Provide the eye colour of the superhero who has Karen Beecher-Duncan as their full name.", "evidence": "eye colour refers to colour.colour where eye_colour_id = colour.id; Karen Beecher-Duncan is the full name of superhero;", "SQL": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'", "question_toks": ["Provide", "the", "eye", "colour", "of", "the", "superhero", "who", "has", "Karen", "Beecher-Duncan", "as", "their", "full", "name", "."], "SQL_toks": ["SELECT", "T2.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T1.full_name", "=", "'Karen", "Beecher-Duncan", "'"], "evidence_toks": ["eye", "colour", "refers", "to", "colour.colour", "where", "eye_colour_id", "=", "colour.id", ";", "Karen", "Beecher-Duncan", "is", "the", "full", "name", "of", "superhero", ";"], "difficulty": "simple", "templatized_domain_statements": ["'eye colour of the superhero' refers to colour.colour", "Karen Beecher-Duncan as their full name refers to superhero.full_name = 'Karen Beecher-Duncan'"]}, {"db_id": "superhero", "question": "What is the superpowers of the superhero has Helen Parr as their full name?", "evidence": "superpowers refers to power_name; Helen Parr is the full name of superhero;", "SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr'", "question_toks": ["What", "is", "the", "superpowers", "of", "the", "superhero", "has", "Helen", "Parr", "as", "their", "full", "name", "?"], "SQL_toks": ["SELECT", "T3.power_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T1.full_name", "=", "'Helen", "Parr", "'"], "evidence_toks": ["superpowers", "refers", "to", "power_name", ";", "Helen", "Parr", "is", "the", "full", "name", "of", "superhero", ";"], "difficulty": "simple", "templatized_domain_statements": ["'superpowers of the superhero' refers to superpower.power_name", "Helen Parr as their full name refers to superhero.full_name = 'Helen Parr'"]}, {"db_id": "superhero", "question": "Find the race of the superhero who weighs 108kg and is 188cm tall.", "evidence": "weighs 108kg refers to weight_kg = 108; 188cm tall refers to height_cm = 188;", "SQL": "SELECT DISTINCT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188", "question_toks": ["Find", "the", "race", "of", "the", "superhero", "who", "weighs", "108kg", "and", "is", "188cm", "tall", "."], "SQL_toks": ["SELECT", "DISTINCT", "T2.race", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T1.weight_kg", "=", "108", "AND", "T1.height_cm", "=", "188"], "evidence_toks": ["weighs", "108kg", "refers", "to", "weight_kg", "=", "108", ";", "188cm", "tall", "refers", "to", "height_cm", "=", "188", ";"], "difficulty": "simple", "templatized_domain_statements": ["'who weighs {100} kg' refers to superhero.weight_kg = 100", "'who is {100} cm tall' refers to superhero.height_cm = 100", "The superhero who weighs {100} kg and is {100} cm tall refers to T1.weight_kg = {100} AND T1.height_cm = 100"]}, {"db_id": "superhero", "question": "List the skin colour of the superheroes with 100 attribute value.", "evidence": "skin colour refers to colour.colour where skin_colour_id = colour.id; 100 attribute value refers to attribute_value = 100;", "SQL": "SELECT DISTINCT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T3.attribute_value = 100", "question_toks": ["List", "the", "skin", "colour", "of", "the", "superheroes", "with", "100", "attribute", "value", "."], "SQL_toks": ["SELECT", "DISTINCT", "T2.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.skin_colour_id", "=", "T2.id", "INNER", "JOIN", "hero_attribute", "AS", "T3", "ON", "T1.id", "=", "T3.hero_id", "WHERE", "T3.attribute_value", "=", "100"], "evidence_toks": ["skin", "colour", "refers", "to", "colour.colour", "where", "skin_colour_id", "=", "colour.id", ";", "100", "attribute", "value", "refers", "to", "attribute_value", "=", "100", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'List the skin colour of the superheroes' refers to colour.colour", "'skin colour with 100 attribute value' refers to hero_attribute.attribute_value = 100"]}, {"db_id": "superhero", "question": "Count the good female superheroes.", "evidence": "good refers to alignment.id = 1; female refers to gender.id = 2;", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Good' AND T3.gender = 'Female'", "question_toks": ["Count", "the", "good", "female", "superheroes", "."], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "alignment", "AS", "T2", "ON", "T1.alignment_id", "=", "T2.id", "INNER", "JOIN", "gender", "AS", "T3", "ON", "T1.gender_id", "=", "T3.id", "WHERE", "T2.alignment", "=", "'Good", "'", "AND", "T3.gender", "=", "'Female", "'"], "evidence_toks": ["good", "refers", "to", "alignment.id", "=", "1", ";", "female", "refers", "to", "gender.id", "=", "2", ";"], "difficulty": "simple", "templatized_domain_statements": ["'good superheroes' refers to alignment.alignment = 'Good'", "'female superheroes' refers to gender.gender = 'Female'"]}, {"db_id": "superhero", "question": "Provide the names of superheroes with attribute value between 75 to 80.", "evidence": "names of superheroes refers to superhero_name; attribute value between 75 to 80 refers to attribute_value BETWEEN 75 AND 80;", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80", "question_toks": ["Provide", "the", "names", "of", "superheroes", "with", "attribute", "value", "between", "75", "to", "80", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "WHERE", "T2.attribute_value", "BETWEEN", "75", "AND", "80"], "evidence_toks": ["names", "of", "superheroes", "refers", "to", "superhero_name", ";", "attribute", "value", "between", "75", "to", "80", "refers", "to", "attribute_value", "BETWEEN", "75", "AND", "80", ";"], "difficulty": "simple", "templatized_domain_statements": ["'Provide the names of superheroes' refers to superhero.superhero_name", "attribute value between {100} to {100} refers to hero_attribute.attribute_value BETWEEN 100 AND 100"]}, {"db_id": "superhero", "question": "How strong is the Hulk?", "evidence": "how strong refers to attribute_value WHERE attribute_name = 'Strength'; the Hulk refers to superhero_name = 'Hulk';", "SQL": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength'", "question_toks": ["How", "strong", "is", "the", "Hulk", "?"], "SQL_toks": ["SELECT", "T2.attribute_value", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "attribute", "AS", "T3", "ON", "T2.attribute_id", "=", "T3.id", "WHERE", "T1.superhero_name", "=", "'Hulk", "'", "AND", "T3.attribute_name", "=", "'Strength", "'"], "evidence_toks": ["how", "strong", "refers", "to", "attribute_value", "WHERE", "attribute_name", "=", "'Strength", "'", ";", "the", "Hulk", "refers", "to", "superhero_name", "=", "'Hulk", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'the Hulk' refers to superhero.superhero_name = 'Hulk'", "'How strong' refers to attribute.attribute_name = 'Strength'"]}, {"db_id": "superhero", "question": "List down Ajax's superpowers.", "evidence": "Ajax refers to superhero_name = 'Ajax'; superpowers refers to power_name;", "SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'", "question_toks": ["List", "down", "Ajax", "'s", "superpowers", "."], "SQL_toks": ["SELECT", "T3.power_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T1.superhero_name", "=", "'Ajax", "'"], "evidence_toks": ["Ajax", "refers", "to", "superhero_name", "=", "'Ajax", "'", ";", "superpowers", "refers", "to", "power_name", ";"], "difficulty": "simple", "templatized_domain_statements": ["'Ajax' refers to superhero.superhero_name = 'Ajax'", "'superpowers' refers to superpower.power_name"]}, {"db_id": "superhero", "question": "How many female superheroes are in Marvel Comics?", "evidence": "female refers to gender = 'Female'; Marvel Comics refers to publisher_name = 'Marvel Comics';", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.gender = 'Female'", "question_toks": ["How", "many", "female", "superheroes", "are", "in", "Marvel", "Comics", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "gender", "AS", "T3", "ON", "T1.gender_id", "=", "T3.id", "WHERE", "T2.publisher_name", "=", "'Marvel", "Comics", "'", "AND", "T3.gender", "=", "'Female", "'"], "evidence_toks": ["female", "refers", "to", "gender", "=", "'Female", "'", ";", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["female refers to gender.gender = 'Female'", "'female superheroes in Marvel Comics' refers to publisher.publisher_name = 'Marvel Comics'"]}, {"db_id": "superhero", "question": "What is the average height of a non-human superhero in Dark Horse Comics?", "evidence": "average = AVG(height_cm); non-human superhero refers to race <> 'Human'; Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';", "SQL": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.race != 'Human'", "question_toks": ["What", "is", "the", "average", "height", "of", "a", "non-human", "superhero", "in", "Dark", "Horse", "Comics", "?"], "SQL_toks": ["SELECT", "AVG", "(", "T1.height_cm", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "race", "AS", "T3", "ON", "T1.race_id", "=", "T3.id", "WHERE", "T2.publisher_name", "=", "'Dark", "Horse", "Comics", "'", "AND", "T3.race", "!", "=", "'Human", "'"], "evidence_toks": ["average", "=", "AVG", "(", "height_cm", ")", ";", "non-human", "superhero", "refers", "to", "race", "<", ">", "'Human", "'", ";", "Dark", "Horse", "Comics", "refers", "to", "publisher_name", "=", "'Dark", "Horse", "Comics", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'height of a superhero' refers to superhero.height_cm", "'non-human superhero' refers to race.race != 'Human'", "Dark Horse Comics refers to publisher.publisher_name = 'Dark Horse Comics'"]}, {"db_id": "superhero", "question": "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.", "evidence": "DC refers to publisher_name = 'DC Comics'; Marvel Comics refers to publisher_name = 'Marvel Comics'; if SUM(publisher_name = 'DC Comics') > SUM(publisher_name = 'Marvel Comics'), it means DC Comics published more superheroes than Marvel Comics; if SUM(publisher_name = 'Marvel Comics') > SUM(publisher_name = 'Marvel Comics'), it means Marvel Comics published more heroes than DC Comics; difference = SUBTRACT(SUM(publisher_name = 'DC Comics'), SUM(publisher_name = 'Marvel Comics'));", "SQL": "SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id", "question_toks": ["Which", "publisher", "created", "more", "superheroes", ":", "DC", "or", "Marvel", "Comics", "?", "Find", "the", "difference", "in", "the", "number", "of", "superheroes", "."], "SQL_toks": ["SELECT", "SUM", "(", "CASE", "WHEN", "T2.publisher_name", "=", "'DC", "Comics", "'", "THEN", "1", "ELSE", "0", "END", ")", "-", "SUM", "(", "CASE", "WHEN", "T2.publisher_name", "=", "'Marvel", "Comics", "'", "THEN", "1", "ELSE", "0", "END", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id"], "evidence_toks": ["DC", "refers", "to", "publisher_name", "=", "'DC", "Comics", "'", ";", "Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'", ";", "if", "SUM", "(", "publisher_name", "=", "'DC", "Comics", "'", ")", ">", "SUM", "(", "publisher_name", "=", "'Marvel", "Comics", "'", ")", ",", "it", "means", "DC", "Comics", "published", "more", "superheroes", "than", "Marvel", "Comics", ";", "if", "SUM", "(", "publisher_name", "=", "'Marvel", "Comics", "'", ")", ">", "SUM", "(", "publisher_name", "=", "'Marvel", "Comics", "'", ")", ",", "it", "means", "Marvel", "Comics", "published", "more", "heroes", "than", "DC", "Comics", ";", "difference", "=", "SUBTRACT", "(", "SUM", "(", "publisher_name", "=", "'DC", "Comics", "'", ")", ",", "SUM", "(", "publisher_name", "=", "'Marvel", "Comics", "'", ")", ")", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'DC' refers to publisher.publisher_name = 'DC Comics'", "'Marvel Comics' refers to publisher.publisher_name = 'Marvel Comics'", "'number of superheroes published by DC Comics' refers to SUM(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)", "'number of superheroes published by Marvel Comics' refers to SUM(CASE WHEN publisher.publisher_name = 'Marvel' THEN 1 ELSE 0 END)"]}, {"db_id": "superhero", "question": "Identify the weakest attribute of the Black Panther.", "evidence": "weakest attribute refers to attribute_name WHERE MIN(attribute_value); Black Panther refers to superhero_name = 'Black Panther';", "SQL": "SELECT T3.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Black Panther' ORDER BY T2.attribute_value ASC LIMIT 1", "question_toks": ["Identify", "the", "weakest", "attribute", "of", "the", "Black", "Panther", "."], "SQL_toks": ["SELECT", "T3.attribute_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "attribute", "AS", "T3", "ON", "T2.attribute_id", "=", "T3.id", "WHERE", "T1.superhero_name", "=", "'Black", "Panther", "'", "ORDER", "BY", "T2.attribute_value", "ASC", "LIMIT", "1"], "evidence_toks": ["weakest", "attribute", "refers", "to", "attribute_name", "WHERE", "MIN", "(", "attribute_value", ")", ";", "Black", "Panther", "refers", "to", "superhero_name", "=", "'Black", "Panther", "'", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'Black Panther' refers to superhero.superhero_name = 'Black Panther'", "'Identify the weakest attribute' refers to ORDER BY hero_attribute.attribute_value ASC LIMIT 1"]}, {"db_id": "superhero", "question": "What is Abomination's eye colour?", "evidence": "Abomination refers to superhero_name = 'Abomination'; eye colour refers to colour.colour where eye_colour_id = colour.id;", "SQL": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'", "question_toks": ["What", "is", "Abomination", "'s", "eye", "colour", "?"], "SQL_toks": ["SELECT", "T2.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T1.superhero_name", "=", "'Abomination", "'"], "evidence_toks": ["Abomination", "refers", "to", "superhero_name", "=", "'Abomination", "'", ";", "eye", "colour", "refers", "to", "colour.colour", "where", "eye_colour_id", "=", "colour.id", ";"], "difficulty": "simple", "templatized_domain_statements": ["'is Abomination's' refers to superhero.superhero_name = 'Abomination'", "'eye colour' refers to colour.colour"]}, {"db_id": "superhero", "question": "Name the superhero, otherwise known as Charles Chandler.", "evidence": "name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;", "SQL": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'", "question_toks": ["Name", "the", "superhero", ",", "otherwise", "known", "as", "Charles", "Chandler", "."], "SQL_toks": ["SELECT", "superhero_name", "FROM", "superhero", "WHERE", "full_name", "=", "'Charles", "Chandler", "'"], "evidence_toks": ["name", "the", "superhero", "refers", "to", "superhero_name", ";", "Charles", "Chandler", "is", "the", "full", "name", "of", "superhero", ";"], "difficulty": "simple", "templatized_domain_statements": ["'Name the superhero' refers to superhero.superhero_name", "'known as Charles Chandler', refers to superhero.full_name = 'Charles Chandler'."]}, {"db_id": "superhero", "question": "Give the hero ID of superhero with the lowest attribute value.", "evidence": "lowest attribute value refers to MIN(attribute_value);", "SQL": "SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )", "question_toks": ["Give", "the", "hero", "ID", "of", "superhero", "with", "the", "lowest", "attribute", "value", "."], "SQL_toks": ["SELECT", "hero_id", "FROM", "hero_attribute", "WHERE", "attribute_value", "=", "(", "SELECT", "MIN", "(", "attribute_value", ")", "FROM", "hero_attribute", ")"], "evidence_toks": ["lowest", "attribute", "value", "refers", "to", "MIN", "(", "attribute_value", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'lowest attribute value' refers to MIN(hero_attribute.attribute_value)"]}, {"db_id": "superhero", "question": "Provide the full name of the superhero named Alien.", "evidence": "FALSE;", "SQL": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'", "question_toks": ["Provide", "the", "full", "name", "of", "the", "superhero", "named", "Alien", "."], "SQL_toks": ["SELECT", "full_name", "FROM", "superhero", "WHERE", "superhero_name", "=", "'Alien", "'"], "evidence_toks": ["FALSE", ";"], "difficulty": "simple", "templatized_domain_statements": ["'superhero named Alien' refers to superhero.superhero_name = 'Alien'."]}, {"db_id": "superhero", "question": "In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.", "evidence": "weight less than 100 refers to weight_kg < 100", "SQL": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'Brown'", "question_toks": ["In", "superheroes", "with", "weight", "less", "than", "100", ",", "list", "the", "full", "name", "of", "the", "superheroes", "with", "brown", "eyes", "."], "SQL_toks": ["SELECT", "T1.full_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T1.weight_kg", "<", "100", "AND", "T2.colour", "=", "'Brown", "'"], "evidence_toks": ["weight", "less", "than", "100", "refers", "to", "weight_kg", "<", "100"], "difficulty": "simple", "templatized_domain_statements": ["'weight less than {100}' refers to superhero.weight_kg < 100"]}, {"db_id": "superhero", "question": "List the attribute value of the superhero named Aquababy.", "evidence": "FALSE;", "SQL": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'", "question_toks": ["List", "the", "attribute", "value", "of", "the", "superhero", "named", "Aquababy", "."], "SQL_toks": ["SELECT", "T2.attribute_value", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "WHERE", "T1.superhero_name", "=", "'Aquababy", "'"], "evidence_toks": ["FALSE", ";"], "difficulty": "simple", "templatized_domain_statements": ["'superhero named Aquababy' refers to superhero.superhero_name = 'Aquababy'", "'List the attribute value' refers to hero_attribute.attribute_value"]}, {"db_id": "superhero", "question": "List the hero ID of superheroes have intellegence as their power.", "evidence": "hero ID refers to superhero.id; have intelligence as their power refers to power_name = 'Intelligence';", "SQL": "SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Intelligence'", "question_toks": ["List", "the", "hero", "ID", "of", "superheroes", "have", "intellegence", "as", "their", "power", "."], "SQL_toks": ["SELECT", "T1.hero_id", "FROM", "hero_power", "AS", "T1", "INNER", "JOIN", "superpower", "AS", "T2", "ON", "T1.power_id", "=", "T2.id", "WHERE", "T2.power_name", "=", "'Intelligence", "'"], "evidence_toks": ["hero", "ID", "refers", "to", "superhero.id", ";", "have", "intelligence", "as", "their", "power", "refers", "to", "power_name", "=", "'Intelligence", "'", ";"], "difficulty": "simple", "templatized_domain_statements": ["'hero ID of superheroes' refers to hero_power.hero_id", "'have intelligence as their power' refers to superpower.power_name = 'Intelligence'"]}]