[{"db_id": "superhero", "question": "Please list the full names of all the superheroes with over 15 super powers.", "evidence": "15 super powers refers to COUNT(full_name) > 15", "SQL": "SELECT DISTINCT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.full_name HAVING COUNT(T2.power_id) > 15", "question_toks": ["Please", "list", "the", "full", "names", "of", "all", "the", "superheroes", "with", "over", "15", "super", "powers", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.full_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "GROUP", "BY", "T1.full_name", "HAVING", "COUNT", "(", "T2.power_id", ")", ">", "15"], "evidence_toks": ["15", "super", "powers", "refers", "to", "COUNT", "(", "full_name", ")", ">", "15"], "difficulty": "simple"}, {"db_id": "superhero", "question": "How many superheroes have blue eyes?", "evidence": "blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id;", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'", "question_toks": ["How", "many", "superheroes", "have", "blue", "eyes", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T2.colour", "=", "'Blue", "'"], "evidence_toks": ["blue", "eyes", "refers", "to", "colour", "=", "'Blue", "'", "and", "eye_colour_id", "=", "colour.id", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "What is the colour of Apocalypse's skin?", "evidence": "Apocalypse refers to superhero_name = 'Apocalypse'; colour of skin refers to colour where skin_colour_id = colour.id", "SQL": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'", "question_toks": ["What", "is", "the", "colour", "of", "Apocalypse", "'s", "skin", "?"], "SQL_toks": ["SELECT", "T2.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T1.superhero_name", "=", "'Apocalypse", "'"], "evidence_toks": ["Apocalypse", "refers", "to", "superhero_name", "=", "'Apocalypse", "'", ";", "colour", "of", "skin", "refers", "to", "colour", "where", "skin_colour_id", "=", "colour.id"], "difficulty": "simple"}, {"db_id": "superhero", "question": "How many superheroes did DC Comics publish?", "evidence": "superheroes that DC Comics published refers to publisher_name = 'DC Comics'", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'", "question_toks": ["How", "many", "superheroes", "did", "DC", "Comics", "publish", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T2.publisher_name", "=", "'DC", "Comics", "'"], "evidence_toks": ["superheroes", "that", "DC", "Comics", "published", "refers", "to", "publisher_name", "=", "'DC", "Comics", "'"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Which publisher published the slowest superhero?", "evidence": "the slowest superhero refers to attribute_name = 'Speed' where MIN(attribute_value); publisher refers to publisher_name", "SQL": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Speed' ORDER BY T3.attribute_value LIMIT 1", "question_toks": ["Which", "publisher", "published", "the", "slowest", "superhero", "?"], "SQL_toks": ["SELECT", "T2.publisher_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "hero_attribute", "AS", "T3", "ON", "T1.id", "=", "T3.hero_id", "INNER", "JOIN", "attribute", "AS", "T4", "ON", "T3.attribute_id", "=", "T4.id", "WHERE", "T4.attribute_name", "=", "'Speed", "'", "ORDER", "BY", "T3.attribute_value", "LIMIT", "1"], "evidence_toks": ["the", "slowest", "superhero", "refers", "to", "attribute_name", "=", "'Speed", "'", "where", "MIN", "(", "attribute_value", ")", ";", "publisher", "refers", "to", "publisher_name"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "How many gold-eyed superheroes did Marvel Comics publish?", "evidence": "gold-eyed refers to colour = 'Gold' where eye_colour_id = colour.id; superheroes that Marvel Comics published refers to publisher_name = 'Marvel Comics'", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Gold'", "question_toks": ["How", "many", "gold-eyed", "superheroes", "did", "Marvel", "Comics", "publish", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "colour", "AS", "T3", "ON", "T1.eye_colour_id", "=", "T3.id", "WHERE", "T2.publisher_name", "=", "'Marvel", "Comics", "'", "AND", "T3.colour", "=", "'Gold", "'"], "evidence_toks": ["gold-eyed", "refers", "to", "colour", "=", "'Gold", "'", "where", "eye_colour_id", "=", "colour.id", ";", "superheroes", "that", "Marvel", "Comics", "published", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "How many superheroes with blonde hair are there?", "evidence": "superheroes with blonde hair refers to colour = 'Blond' where hair_colour_id = colour.id", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'", "question_toks": ["How", "many", "superheroes", "with", "blonde", "hair", "are", "there", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.hair_colour_id", "=", "T2.id", "WHERE", "T2.colour", "=", "'Blond", "'"], "evidence_toks": ["superheroes", "with", "blonde", "hair", "refers", "to", "colour", "=", "'Blond", "'", "where", "hair_colour_id", "=", "colour.id"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Who is the dumbest superhero?", "evidence": "the dumbest superhero refers to MIN(attribute_value) where attribute_name = 'Intelligence'", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1", "question_toks": ["Who", "is", "the", "dumbest", "superhero", "?"], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "attribute", "AS", "T3", "ON", "T2.attribute_id", "=", "T3.id", "WHERE", "T3.attribute_name", "=", "'Intelligence", "'", "ORDER", "BY", "T2.attribute_value", "LIMIT", "1"], "evidence_toks": ["the", "dumbest", "superhero", "refers", "to", "MIN", "(", "attribute_value", ")", "where", "attribute_name", "=", "'Intelligence", "'"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "What are the names of the superheroes with the power of death touch?", "evidence": "name of superheroes refers to refers to superhero_name; the power of death touch refers to power_name = 'Death Touch'", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'", "question_toks": ["What", "are", "the", "names", "of", "the", "superheroes", "with", "the", "power", "of", "death", "touch", "?"], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T3.power_name", "=", "'Death", "Touch", "'"], "evidence_toks": ["name", "of", "superheroes", "refers", "to", "refers", "to", "superhero_name", ";", "the", "power", "of", "death", "touch", "refers", "to", "power_name", "=", "'Death", "Touch", "'"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "What is the name of the superhero that has the most powers?", "evidence": "name of the superhero refers to superhero_name; superhero that has the most powers refers to MAX(COUNT(superhero_name))", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name ORDER BY COUNT(T2.hero_id) DESC LIMIT 1", "question_toks": ["What", "is", "the", "name", "of", "the", "superhero", "that", "has", "the", "most", "powers", "?"], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "GROUP", "BY", "T1.superhero_name", "ORDER", "BY", "COUNT", "(", "T2.hero_id", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["name", "of", "the", "superhero", "refers", "to", "superhero_name", ";", "superhero", "that", "has", "the", "most", "powers", "refers", "to", "MAX", "(", "COUNT", "(", "superhero_name", ")", ")"], "difficulty": "simple"}, {"db_id": "superhero", "question": "How many vampire superheroes are there?", "evidence": "vampire superheroes refers to race = 'Vampire'", "SQL": "SELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'", "question_toks": ["How", "many", "vampire", "superheroes", "are", "there", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.superhero_name", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T2.race", "=", "'Vampire", "'"], "evidence_toks": ["vampire", "superheroes", "refers", "to", "race", "=", "'Vampire", "'"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Give the publisher ID of Star Trek.", "evidence": "Star Treck is the publisher_name;", "SQL": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'", "question_toks": ["Give", "the", "publisher", "ID", "of", "Star", "Trek", "."], "SQL_toks": ["SELECT", "id", "FROM", "publisher", "WHERE", "publisher_name", "=", "'Star", "Trek", "'"], "evidence_toks": ["Star", "Treck", "is", "the", "publisher_name", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "What is the eye colour of superhero with superhero ID 75?", "evidence": "eye colour refers to colour where eye_colour_id = colour.id;", "SQL": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75", "question_toks": ["What", "is", "the", "eye", "colour", "of", "superhero", "with", "superhero", "ID", "75", "?"], "SQL_toks": ["SELECT", "T2.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T1.id", "=", "75"], "evidence_toks": ["eye", "colour", "refers", "to", "colour", "where", "eye_colour_id", "=", "colour.id", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Provide the superpowers of the superhero called Deathlok.", "evidence": "superpowers refers to power_name; Deathlok refers to superhero_name = 'Deathlok'", "SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'", "question_toks": ["Provide", "the", "superpowers", "of", "the", "superhero", "called", "Deathlok", "."], "SQL_toks": ["SELECT", "T3.power_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T1.superhero_name", "=", "'Deathlok", "'"], "evidence_toks": ["superpowers", "refers", "to", "power_name", ";", "Deathlok", "refers", "to", "superhero_name", "=", "'Deathlok", "'"], "difficulty": "simple"}, {"db_id": "superhero", "question": "What is the average weight of all female superheroes?", "evidence": "female refers to gender_id = 2; average weight refers to AVG(weight_kg)", "SQL": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'", "question_toks": ["What", "is", "the", "average", "weight", "of", "all", "female", "superheroes", "?"], "SQL_toks": ["SELECT", "AVG", "(", "T1.weight_kg", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "gender", "AS", "T2", "ON", "T1.gender_id", "=", "T2.id", "WHERE", "T2.gender", "=", "'Female", "'"], "evidence_toks": ["female", "refers", "to", "gender_id", "=", "2", ";", "average", "weight", "refers", "to", "AVG", "(", "weight_kg", ")"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Give the name of the alien superheroes.", "evidence": "alien superheroes refers to race = 'Alien'; name of superhero refers to superhero_name;", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'", "question_toks": ["Give", "the", "name", "of", "the", "alien", "superheroes", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T2.race", "=", "'Alien", "'"], "evidence_toks": ["alien", "superheroes", "refers", "to", "race", "=", "'Alien", "'", ";", "name", "of", "superhero", "refers", "to", "superhero_name", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "What is the superpower of hero ID 56?", "evidence": "superpower refers to hero_power", "SQL": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56", "question_toks": ["What", "is", "the", "superpower", "of", "hero", "ID", "56", "?"], "SQL_toks": ["SELECT", "T2.power_name", "FROM", "hero_power", "AS", "T1", "INNER", "JOIN", "superpower", "AS", "T2", "ON", "T1.power_id", "=", "T2.id", "WHERE", "T1.hero_id", "=", "56"], "evidence_toks": ["superpower", "refers", "to", "hero_power"], "difficulty": "simple"}, {"db_id": "superhero", "question": "How many bad superheroes are there?", "evidence": "bad superheroes refers to alignment_id = Bad", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'", "question_toks": ["How", "many", "bad", "superheroes", "are", "there", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "alignment", "AS", "T2", "ON", "T1.alignment_id", "=", "T2.id", "WHERE", "T2.alignment", "=", "'Bad", "'"], "evidence_toks": ["bad", "superheroes", "refers", "to", "alignment_id", "=", "Bad"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Identify the race of the superhero who weighed 169 kg.", "evidence": "weighed 169 kg refers to weight_kg = 169", "SQL": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169", "question_toks": ["Identify", "the", "race", "of", "the", "superhero", "who", "weighed", "169", "kg", "."], "SQL_toks": ["SELECT", "T2.race", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T1.weight_kg", "=", "169"], "evidence_toks": ["weighed", "169", "kg", "refers", "to", "weight_kg", "=", "169"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Provide the hair colour of the human superhero who is 185 cm tall.", "evidence": "185 cm tall refers to height_cm = 185; human superhero refers to race = 'human'; hair colour refers to colour where hair_colour_id = colour.id;", "SQL": "SELECT DISTINCT T3.colour FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T1.height_cm = 185 AND T2.race = 'Human'", "question_toks": ["Provide", "the", "hair", "colour", "of", "the", "human", "superhero", "who", "is", "185", "cm", "tall", "."], "SQL_toks": ["SELECT", "DISTINCT", "T3.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "INNER", "JOIN", "colour", "AS", "T3", "ON", "T1.hair_colour_id", "=", "T3.id", "WHERE", "T1.height_cm", "=", "185", "AND", "T2.race", "=", "'Human", "'"], "evidence_toks": ["185", "cm", "tall", "refers", "to", "height_cm", "=", "185", ";", "human", "superhero", "refers", "to", "race", "=", "'human", "'", ";", "hair", "colour", "refers", "to", "colour", "where", "hair_colour_id", "=", "colour.id", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "What is the eye clolour of the heaviest superhero?", "evidence": "the heaviest superhero refers to MAX(weight_kg); eye colour refers to colour where eye_colour_id = colour.id;", "SQL": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id ORDER BY T1.weight_kg DESC LIMIT 1", "question_toks": ["What", "is", "the", "eye", "clolour", "of", "the", "heaviest", "superhero", "?"], "SQL_toks": ["SELECT", "T2.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "ORDER", "BY", "T1.weight_kg", "DESC", "LIMIT", "1"], "evidence_toks": ["the", "heaviest", "superhero", "refers", "to", "MAX", "(", "weight_kg", ")", ";", "eye", "colour", "refers", "to", "colour", "where", "eye_colour_id", "=", "colour.id", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?", "evidence": "height between 150 to 180 refers to height_cm BETWEEN 150 AND 180; heroes published by Marvel Comics refers to publisher_id = 13; calculation = MULTIPLY(DIVIDE(SUM(publisher.id = 13)), COUNT(publisher.id), 100)", "SQL": "SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180", "question_toks": ["In", "superheroes", "with", "height", "between", "150", "to", "180", ",", "what", "is", "the", "percentage", "of", "heroes", "published", "by", "Marvel", "Comics", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T2.publisher_name", "=", "'Marvel", "Comics", "'", "THEN", "1", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T1.height_cm", "BETWEEN", "150", "AND", "180"], "evidence_toks": ["height", "between", "150", "to", "180", "refers", "to", "height_cm", "BETWEEN", "150", "AND", "180", ";", "heroes", "published", "by", "Marvel", "Comics", "refers", "to", "publisher_id", "=", "13", ";", "calculation", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUM", "(", "publisher.id", "=", "13", ")", ")", ",", "COUNT", "(", "publisher.id", ")", ",", "100", ")"], "difficulty": "challenging"}, {"db_id": "superhero", "question": "Which power do superheroes have the most of?", "evidence": "power that superheroes have the most refers to MAX(COUNT(power_name))", "SQL": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(T1.hero_id) DESC LIMIT 1", "question_toks": ["Which", "power", "do", "superheroes", "have", "the", "most", "of", "?"], "SQL_toks": ["SELECT", "T2.power_name", "FROM", "hero_power", "AS", "T1", "INNER", "JOIN", "superpower", "AS", "T2", "ON", "T1.power_id", "=", "T2.id", "GROUP", "BY", "T2.power_name", "ORDER", "BY", "COUNT", "(", "T1.hero_id", ")", "DESC", "LIMIT", "1"], "evidence_toks": ["power", "that", "superheroes", "have", "the", "most", "refers", "to", "MAX", "(", "COUNT", "(", "power_name", ")", ")"], "difficulty": "simple"}, {"db_id": "superhero", "question": "How many heroes have stealth power?", "evidence": "stealth power refers to power_name = 'stealth';", "SQL": "SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'", "question_toks": ["How", "many", "heroes", "have", "stealth", "power", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.hero_id", ")", "FROM", "hero_power", "AS", "T1", "INNER", "JOIN", "superpower", "AS", "T2", "ON", "T1.power_id", "=", "T2.id", "WHERE", "T2.power_name", "=", "'Stealth", "'"], "evidence_toks": ["stealth", "power", "refers", "to", "power_name", "=", "'stealth", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "What is the hero's full name with the highest attribute in strength?", "evidence": "highest attribute in strength refers to MAX(attribute_value) WHERE attribute_name = 'strength';", "SQL": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' ORDER BY T2.attribute_value DESC LIMIT 1", "question_toks": ["What", "is", "the", "hero", "'s", "full", "name", "with", "the", "highest", "attribute", "in", "strength", "?"], "SQL_toks": ["SELECT", "T1.full_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "attribute", "AS", "T3", "ON", "T2.attribute_id", "=", "T3.id", "WHERE", "T3.attribute_name", "=", "'Strength", "'", "ORDER", "BY", "T2.attribute_value", "DESC", "LIMIT", "1"], "evidence_toks": ["highest", "attribute", "in", "strength", "refers", "to", "MAX", "(", "attribute_value", ")", "WHERE", "attribute_name", "=", "'strength", "'", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "How many superheroes were published by Dark Horse Comics?", "evidence": "published by Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'", "question_toks": ["How", "many", "superheroes", "were", "published", "by", "Dark", "Horse", "Comics", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T2.publisher_name", "=", "'Dark", "Horse", "Comics", "'"], "evidence_toks": ["published", "by", "Dark", "Horse", "Comics", "refers", "to", "publisher_name", "=", "'Dark", "Horse", "Comics", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "List the name of superheroes with flight power.", "evidence": "name of superheroes refers to superhero_name; flight power refers to power_name = 'Flight';", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'", "question_toks": ["List", "the", "name", "of", "superheroes", "with", "flight", "power", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T3.power_name", "=", "'Flight", "'"], "evidence_toks": ["name", "of", "superheroes", "refers", "to", "superhero_name", ";", "flight", "power", "refers", "to", "power_name", "=", "'Flight", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.", "evidence": "which superhero refers to superhero_name; the same eyes, hair and skin colour refers to hair_colour_id = skin_colour_id AND hair_colour_id = eye_colour_id; publisher refers to publisher_name;", "SQL": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T1.hair_colour_id = T1.skin_colour_id = T3.id", "question_toks": ["Which", "superhero", "has", "the", "same", "eyes", ",", "hair", "and", "skin", "colour", "?", "Indicate", "the", "publisher", "of", "the", "superhero", "."], "SQL_toks": ["SELECT", "T1.superhero_name", ",", "T2.publisher_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "colour", "AS", "T3", "ON", "T1.eye_colour_id", "=", "T1.hair_colour_id", "=", "T1.skin_colour_id", "=", "T3.id"], "evidence_toks": ["which", "superhero", "refers", "to", "superhero_name", ";", "the", "same", "eyes", ",", "hair", "and", "skin", "colour", "refers", "to", "hair_colour_id", "=", "skin_colour_id", "AND", "hair_colour_id", "=", "eye_colour_id", ";", "publisher", "refers", "to", "publisher_name", ";"], "difficulty": "challenging"}, {"db_id": "superhero", "question": "What is the percentage of blue female superheroes among all female superheroes?", "evidence": "percentage = MULTIPLY(DIVIDE(SUM(colour = 'Blue' WHERE gender = 'Female'), COUNT(gender = 'Female')), 100); blue refers to the color; female refers to gender = 'Female';", "SQL": "SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female'", "question_toks": ["What", "is", "the", "percentage", "of", "blue", "female", "superheroes", "among", "all", "female", "superheroes", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T3.colour", "=", "'Blue", "'", "THEN", "T1.id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "gender", "AS", "T2", "ON", "T1.gender_id", "=", "T2.id", "INNER", "JOIN", "colour", "AS", "T3", "ON", "T1.skin_colour_id", "=", "T3.id", "WHERE", "T2.gender", "=", "'Female", "'"], "evidence_toks": ["percentage", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUM", "(", "colour", "=", "'Blue", "'", "WHERE", "gender", "=", "'Female", "'", ")", ",", "COUNT", "(", "gender", "=", "'Female", "'", ")", ")", ",", "100", ")", ";", "blue", "refers", "to", "the", "color", ";", "female", "refers", "to", "gender", "=", "'Female", "'", ";"], "difficulty": "challenging"}, {"db_id": "superhero", "question": "What is the gender of Agent 13 hero?", "evidence": "Agent 13 hero refers to superhero_name = 'Agent 13';", "SQL": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'", "question_toks": ["What", "is", "the", "gender", "of", "Agent", "13", "hero", "?"], "SQL_toks": ["SELECT", "T2.gender", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "gender", "AS", "T2", "ON", "T1.gender_id", "=", "T2.id", "WHERE", "T1.superhero_name", "=", "'Agent", "13", "'"], "evidence_toks": ["Agent", "13", "hero", "refers", "to", "superhero_name", "=", "'Agent", "13", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Provide superheroes' names who have the adaptation power.", "evidence": "adaptation power refers to power_name = 'Adaptation';", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'", "question_toks": ["Provide", "superheroes", "'", "names", "who", "have", "the", "adaptation", "power", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T3.power_name", "=", "'Adaptation", "'"], "evidence_toks": ["adaptation", "power", "refers", "to", "power_name", "=", "'Adaptation", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "How many powers does Amazo hero have?", "evidence": "Amazo hero refers to superhero_name = 'Amazo';", "SQL": "SELECT COUNT(T1.power_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'", "question_toks": ["How", "many", "powers", "does", "Amazo", "hero", "have", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.power_id", ")", "FROM", "hero_power", "AS", "T1", "INNER", "JOIN", "superhero", "AS", "T2", "ON", "T1.hero_id", "=", "T2.id", "WHERE", "T2.superhero_name", "=", "'Amazo", "'"], "evidence_toks": ["Amazo", "hero", "refers", "to", "superhero_name", "=", "'Amazo", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "List the heroes' names whose eyes and hair colours are both black.", "evidence": "heroes' names refers to superhero_name; eyes and hair colours are both black refers to eye_colour_id AND hair_colour_id WHERE colour.colour = 'Black';", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id AND T1.hair_colour_id = T2.id WHERE T2.colour = 'Black'", "question_toks": ["List", "the", "heroes", "'", "names", "whose", "eyes", "and", "hair", "colours", "are", "both", "black", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "AND", "T1.hair_colour_id", "=", "T2.id", "WHERE", "T2.colour", "=", "'Black", "'"], "evidence_toks": ["heroes", "'", "names", "refers", "to", "superhero_name", ";", "eyes", "and", "hair", "colours", "are", "both", "black", "refers", "to", "eye_colour_id", "AND", "hair_colour_id", "WHERE", "colour.colour", "=", "'Black", "'", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "Provide the full names of vampire heroes.", "evidence": "vampire heroes refers to race = 'Vampire';", "SQL": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'", "question_toks": ["Provide", "the", "full", "names", "of", "vampire", "heroes", "."], "SQL_toks": ["SELECT", "T1.full_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T2.race", "=", "'Vampire", "'"], "evidence_toks": ["vampire", "heroes", "refers", "to", "race", "=", "'Vampire", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Describe the names of neutral alignment superheroes.", "evidence": "names of superheroes refers to superhero_name; neutral alignment refers to alignment = 'Neutral';", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'", "question_toks": ["Describe", "the", "names", "of", "neutral", "alignment", "superheroes", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "alignment", "AS", "T2", "ON", "T1.alignment_id", "=", "T2.id", "WHERE", "T2.alignment", "=", "'Neutral", "'"], "evidence_toks": ["names", "of", "superheroes", "refers", "to", "superhero_name", ";", "neutral", "alignment", "refers", "to", "alignment", "=", "'Neutral", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "How many heroes have the highest attribute value in strength?", "evidence": "highest attribute value in strength refers to MAX(attribute_value) WHERE attribute_name = 'Strength';", "SQL": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute )", "question_toks": ["How", "many", "heroes", "have", "the", "highest", "attribute", "value", "in", "strength", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.hero_id", ")", "FROM", "hero_attribute", "AS", "T1", "INNER", "JOIN", "attribute", "AS", "T2", "ON", "T1.attribute_id", "=", "T2.id", "WHERE", "T2.attribute_name", "=", "'Strength", "'", "AND", "T1.attribute_value", "=", "(", "SELECT", "MAX", "(", "attribute_value", ")", "FROM", "hero_attribute", ")"], "evidence_toks": ["highest", "attribute", "value", "in", "strength", "refers", "to", "MAX", "(", "attribute_value", ")", "WHERE", "attribute_name", "=", "'Strength", "'", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "What are the race and alignment of Cameron Hicks?", "evidence": "Cameron Hicks refers to superhero_name = 'Cameron Hicks';", "SQL": "SELECT T2.race, T3.alignment FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T1.superhero_name = 'Cameron Hicks'", "question_toks": ["What", "are", "the", "race", "and", "alignment", "of", "Cameron", "Hicks", "?"], "SQL_toks": ["SELECT", "T2.race", ",", "T3.alignment", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "INNER", "JOIN", "alignment", "AS", "T3", "ON", "T1.alignment_id", "=", "T3.id", "WHERE", "T1.superhero_name", "=", "'Cameron", "Hicks", "'"], "evidence_toks": ["Cameron", "Hicks", "refers", "to", "superhero_name", "=", "'Cameron", "Hicks", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Calculate the average height for each superhero.", "evidence": "average = DIVIDE(SUM(height_cm), COUNT(full_name));", "SQL": "SELECT CAST(SUM(height_cm) AS REAL) / COUNT(full_name) FROM superhero", "question_toks": ["Calculate", "the", "average", "height", "for", "each", "superhero", "."], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "height_cm", ")", "AS", "REAL", ")", "/", "COUNT", "(", "full_name", ")", "FROM", "superhero"], "evidence_toks": ["average", "=", "DIVIDE", "(", "SUM", "(", "height_cm", ")", ",", "COUNT", "(", "full_name", ")", ")", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "What is Abomination's superpower?", "evidence": "Abomination refers to superhero_name = 'Abomination'; superpower refers to power_name;", "SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'", "question_toks": ["What", "is", "Abomination", "'s", "superpower", "?"], "SQL_toks": ["SELECT", "T3.power_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T1.superhero_name", "=", "'Abomination", "'"], "evidence_toks": ["Abomination", "refers", "to", "superhero_name", "=", "'Abomination", "'", ";", "superpower", "refers", "to", "power_name", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Among the superheroes with the race of god/eternal, how many of them are male", "evidence": "race \"god/eternal\" refers to race_id = 21; male refers to gender.id = 1", "SQL": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T1.race_id = 21 AND T1.gender_id = 1", "question_toks": ["Among", "the", "superheroes", "with", "the", "race", "of", "god/eternal", ",", "how", "many", "of", "them", "are", "male"], "SQL_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "INNER", "JOIN", "gender", "AS", "T3", "ON", "T3.id", "=", "T1.gender_id", "WHERE", "T1.race_id", "=", "21", "AND", "T1.gender_id", "=", "1"], "evidence_toks": ["race", "``", "god/eternal", "''", "refers", "to", "race_id", "=", "21", ";", "male", "refers", "to", "gender.id", "=", "1"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Which hero was the fastest?", "evidence": "which hero refers to superhero_name; fastest refers to MAX(attribute_value) WHERE attribute_name = 'Speed';", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1", "question_toks": ["Which", "hero", "was", "the", "fastest", "?"], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "attribute", "AS", "T3", "ON", "T2.attribute_id", "=", "T3.id", "WHERE", "T3.attribute_name", "=", "'Speed", "'", "ORDER", "BY", "T2.attribute_value", "DESC", "LIMIT", "1"], "evidence_toks": ["which", "hero", "refers", "to", "superhero_name", ";", "fastest", "refers", "to", "MAX", "(", "attribute_value", ")", "WHERE", "attribute_name", "=", "'Speed", "'", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "Which superheroes have blue eyes with brown hair?", "evidence": "which superheroes refers to superhero_name; blue eyes refers to eye_colour_id = 7; brown hair refers to hair_colour_id = 9;", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown'", "question_toks": ["Which", "superheroes", "have", "blue", "eyes", "with", "brown", "hair", "?"], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "INNER", "JOIN", "colour", "AS", "T3", "ON", "T1.hair_colour_id", "=", "T3.id", "WHERE", "T2.colour", "=", "'Blue", "'", "AND", "T3.colour", "=", "'Brown", "'"], "evidence_toks": ["which", "superheroes", "refers", "to", "superhero_name", ";", "blue", "eyes", "refers", "to", "eye_colour_id", "=", "7", ";", "brown", "hair", "refers", "to", "hair_colour_id", "=", "9", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "Calculate the percentage of superheroes with blue eyes.", "evidence": "percentage = MULTIPLY(DIVIDE(SUM(superhero_name WHERE eye_colour_id = 7), COUNT(superhero_name)), 100.0); blue eyes refers to eye_colour_id = 7;", "SQL": "SELECT CAST(COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id", "question_toks": ["Calculate", "the", "percentage", "of", "superheroes", "with", "blue", "eyes", "."], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T2.colour", "=", "'Blue", "'", "THEN", "1", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id"], "evidence_toks": ["percentage", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUM", "(", "superhero_name", "WHERE", "eye_colour_id", "=", "7", ")", ",", "COUNT", "(", "superhero_name", ")", ")", ",", "100.0", ")", ";", "blue", "eyes", "refers", "to", "eye_colour_id", "=", "7", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "List the full names of superheroes with missing weight.", "evidence": "missing weight refers to weight_kg = 0 OR weight_kg = NULL;", "SQL": "SELECT DISTINCT full_name FROM superhero WHERE full_name IS NOT NULL AND (weight_kg IS NULL OR weight_kg = 0)", "question_toks": ["List", "the", "full", "names", "of", "superheroes", "with", "missing", "weight", "."], "SQL_toks": ["SELECT", "DISTINCT", "full_name", "FROM", "superhero", "WHERE", "full_name", "IS", "NOT", "NULL", "AND", "(", "weight_kg", "IS", "NULL", "OR", "weight_kg", "=", "0", ")"], "evidence_toks": ["missing", "weight", "refers", "to", "weight_kg", "=", "0", "OR", "weight_kg", "=", "NULL", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "What is the publisher name of the superhero ID 38?", "evidence": "superhero ID 38 refers to superhero.id = 38;", "SQL": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38", "question_toks": ["What", "is", "the", "publisher", "name", "of", "the", "superhero", "ID", "38", "?"], "SQL_toks": ["SELECT", "T2.publisher_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T1.id", "=", "38"], "evidence_toks": ["superhero", "ID", "38", "refers", "to", "superhero.id", "=", "38", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "What is the race of the superhero with maximum attribute value?", "evidence": "maximum attribute value refers to MAX(attribute_value);", "SQL": "SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id ORDER BY T2.attribute_value DESC LIMIT 1", "question_toks": ["What", "is", "the", "race", "of", "the", "superhero", "with", "maximum", "attribute", "value", "?"], "SQL_toks": ["SELECT", "T3.race", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_attribute", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "race", "AS", "T3", "ON", "T1.race_id", "=", "T3.id", "ORDER", "BY", "T2.attribute_value", "DESC", "LIMIT", "1"], "evidence_toks": ["maximum", "attribute", "value", "refers", "to", "MAX", "(", "attribute_value", ")", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Give the alignment and superpowers of the superhero named Atom IV.", "evidence": "superpowers refers to power_name;", "SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T1.superhero_name = 'Atom IV'", "question_toks": ["Give", "the", "alignment", "and", "superpowers", "of", "the", "superhero", "named", "Atom", "IV", "."], "SQL_toks": ["SELECT", "T3.power_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T3.id", "=", "T2.power_id", "WHERE", "T1.superhero_name", "=", "'Atom", "IV", "'"], "evidence_toks": ["superpowers", "refers", "to", "power_name", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "List down at least five full names of superheroes with blue eyes.", "evidence": "blue eyes refers to colour.colour = 'Blue' WHERE eye_colour_id = colour.id;", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5", "question_toks": ["List", "down", "at", "least", "five", "full", "names", "of", "superheroes", "with", "blue", "eyes", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T2.colour", "=", "'Blue", "'", "LIMIT", "5"], "evidence_toks": ["blue", "eyes", "refers", "to", "colour.colour", "=", "'Blue", "'", "WHERE", "eye_colour_id", "=", "colour.id", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Calculate the average attribute value of all neutral superheroes.", "evidence": "average = AVG(attribute_value); neutral superheroes refers to alignment_id = 3;", "SQL": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T3.alignment = 'Neutral'", "question_toks": ["Calculate", "the", "average", "attribute", "value", "of", "all", "neutral", "superheroes", "."], "SQL_toks": ["SELECT", "AVG", "(", "T1.attribute_value", ")", "FROM", "hero_attribute", "AS", "T1", "INNER", "JOIN", "superhero", "AS", "T2", "ON", "T1.hero_id", "=", "T2.id", "INNER", "JOIN", "alignment", "AS", "T3", "ON", "T2.alignment_id", "=", "T3.id", "WHERE", "T3.alignment", "=", "'Neutral", "'"], "evidence_toks": ["average", "=", "AVG", "(", "attribute_value", ")", ";", "neutral", "superheroes", "refers", "to", "alignment_id", "=", "3", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Give the race of the blue-haired male superhero.", "evidence": "blue-haired refers to colour.colour = 'blue' WHERE hair_colour_id = colour.id; male refers to gender = 'male';", "SQL": "SELECT T3.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T2.colour = 'Blue' AND T4.gender = 'Male'", "question_toks": ["Give", "the", "race", "of", "the", "blue-haired", "male", "superhero", "."], "SQL_toks": ["SELECT", "T3.race", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.hair_colour_id", "=", "T2.id", "INNER", "JOIN", "race", "AS", "T3", "ON", "T1.race_id", "=", "T3.id", "INNER", "JOIN", "gender", "AS", "T4", "ON", "T1.gender_id", "=", "T4.id", "WHERE", "T2.colour", "=", "'Blue", "'", "AND", "T4.gender", "=", "'Male", "'"], "evidence_toks": ["blue-haired", "refers", "to", "colour.colour", "=", "'blue", "'", "WHERE", "hair_colour_id", "=", "colour.id", ";", "male", "refers", "to", "gender", "=", "'male", "'", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "Among the bad superheroes, what is the percentage of female superheroes?", "evidence": "bad superheroes refers to alignment.id = 2; percentage = MULTIPLY(DIVIDE(SUM(gender.id = 2 WHERE alignment.id = 2), COUNT(alignment.id = 2)), 100.0); female refers to gender.id = 2;", "SQL": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad'", "question_toks": ["Among", "the", "bad", "superheroes", ",", "what", "is", "the", "percentage", "of", "female", "superheroes", "?"], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T3.gender", "=", "'Female", "'", "THEN", "T1.id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "alignment", "AS", "T2", "ON", "T1.alignment_id", "=", "T2.id", "INNER", "JOIN", "gender", "AS", "T3", "ON", "T1.gender_id", "=", "T3.id", "WHERE", "T2.alignment", "=", "'Bad", "'"], "evidence_toks": ["bad", "superheroes", "refers", "to", "alignment.id", "=", "2", ";", "percentage", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUM", "(", "gender.id", "=", "2", "WHERE", "alignment.id", "=", "2", ")", ",", "COUNT", "(", "alignment.id", "=", "2", ")", ")", ",", "100.0", ")", ";", "female", "refers", "to", "gender.id", "=", "2", ";"], "difficulty": "challenging"}, {"db_id": "superhero", "question": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.", "evidence": "missing weight data refers to weight_kg = 0 OR T1.weight_kg = NULL; difference = SUBTRACT(SUM(colour.id = 7), SUM(colour.id = 1)); blue eyes refers to eye_colour_id WHERE colour.id = 7; no eye color refers to eye_colour_id WHERE colour.id = 1;", "SQL": "SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg = NULL", "question_toks": ["In", "superheroes", "with", "missing", "weight", "data", ",", "calculate", "the", "difference", "between", "the", "number", "of", "superheroes", "with", "blue", "eyes", "and", "no", "eye", "color", "."], "SQL_toks": ["SELECT", "SUM", "(", "CASE", "WHEN", "T2.id", "=", "7", "THEN", "1", "ELSE", "0", "END", ")", "-", "SUM", "(", "CASE", "WHEN", "T2.id", "=", "1", "THEN", "1", "ELSE", "0", "END", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T1.weight_kg", "=", "0", "OR", "T1.weight_kg", "=", "NULL"], "evidence_toks": ["missing", "weight", "data", "refers", "to", "weight_kg", "=", "0", "OR", "T1.weight_kg", "=", "NULL", ";", "difference", "=", "SUBTRACT", "(", "SUM", "(", "colour.id", "=", "7", ")", ",", "SUM", "(", "colour.id", "=", "1", ")", ")", ";", "blue", "eyes", "refers", "to", "eye_colour_id", "WHERE", "colour.id", "=", "7", ";", "no", "eye", "color", "refers", "to", "eye_colour_id", "WHERE", "colour.id", "=", "1", ";"], "difficulty": "challenging"}, {"db_id": "superhero", "question": "How many green-skinned villains are there in the superhero universe?", "evidence": "green-skinned refers to colour.colour = 'Green' WHERE skin_colour_id = colour.id; villains refers to alignment = 'Bad';", "SQL": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.alignment = 'Bad' AND T3.colour = 'Green'", "question_toks": ["How", "many", "green-skinned", "villains", "are", "there", "in", "the", "superhero", "universe", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "alignment", "AS", "T2", "ON", "T1.alignment_id", "=", "T2.id", "INNER", "JOIN", "colour", "AS", "T3", "ON", "T1.skin_colour_id", "=", "T3.id", "WHERE", "T2.alignment", "=", "'Bad", "'", "AND", "T3.colour", "=", "'Green", "'"], "evidence_toks": ["green-skinned", "refers", "to", "colour.colour", "=", "'Green", "'", "WHERE", "skin_colour_id", "=", "colour.id", ";", "villains", "refers", "to", "alignment", "=", "'Bad", "'", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "Identify superheroes who can control wind and list their names in alphabetical order.", "evidence": "superheroes refers to superhero_name; can control wind refers to power_name = 'Wind Control';", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name", "question_toks": ["Identify", "superheroes", "who", "can", "control", "wind", "and", "list", "their", "names", "in", "alphabetical", "order", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T3.power_name", "=", "'Wind", "Control", "'", "ORDER", "BY", "T1.superhero_name"], "evidence_toks": ["superheroes", "refers", "to", "superhero_name", ";", "can", "control", "wind", "refers", "to", "power_name", "=", "'Wind", "Control", "'", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "Identify the gender of the superhero who has the ability of Phoenix Force.", "evidence": "ability of Phoenix Force refers to power_name = 'Phoenix Force';", "SQL": "SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force'", "question_toks": ["Identify", "the", "gender", "of", "the", "superhero", "who", "has", "the", "ability", "of", "Phoenix", "Force", "."], "SQL_toks": ["SELECT", "T4.gender", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "INNER", "JOIN", "gender", "AS", "T4", "ON", "T1.gender_id", "=", "T4.id", "WHERE", "T3.power_name", "=", "'Phoenix", "Force", "'"], "evidence_toks": ["ability", "of", "Phoenix", "Force", "refers", "to", "power_name", "=", "'Phoenix", "Force", "'", ";"], "difficulty": "moderate"}, {"db_id": "superhero", "question": "Identify the heaviest superhero in DC Comics.", "evidence": "heaviest refers to MAX(weight_kg); DC Comics refers to publisher_name = 'DC Comics'; superhero refers to superhero_name;", "SQL": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ORDER BY T1.weight_kg DESC LIMIT 1", "question_toks": ["Identify", "the", "heaviest", "superhero", "in", "DC", "Comics", "."], "SQL_toks": ["SELECT", "T1.superhero_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "WHERE", "T2.publisher_name", "=", "'DC", "Comics", "'", "ORDER", "BY", "T1.weight_kg", "DESC", "LIMIT", "1"], "evidence_toks": ["heaviest", "refers", "to", "MAX", "(", "weight_kg", ")", ";", "DC", "Comics", "refers", "to", "publisher_name", "=", "'DC", "Comics", "'", ";", "superhero", "refers", "to", "superhero_name", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Count the fastest superheroes.", "evidence": "fastest refers to attribute_value = 100 WHERE attribute_name = 'Speed';", "SQL": "SELECT COUNT(T3.superhero_name) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Speed' ORDER BY T1.attribute_value DESC LIMIT 1", "question_toks": ["Count", "the", "fastest", "superheroes", "."], "SQL_toks": ["SELECT", "COUNT", "(", "T3.superhero_name", ")", "FROM", "hero_attribute", "AS", "T1", "INNER", "JOIN", "attribute", "AS", "T2", "ON", "T1.attribute_id", "=", "T2.id", "INNER", "JOIN", "superhero", "AS", "T3", "ON", "T1.hero_id", "=", "T3.id", "WHERE", "T2.attribute_name", "=", "'Speed", "'", "ORDER", "BY", "T1.attribute_value", "DESC", "LIMIT", "1"], "evidence_toks": ["fastest", "refers", "to", "attribute_value", "=", "100", "WHERE", "attribute_name", "=", "'Speed", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Name the tallest superhero.", "evidence": "tallest superhero refers to MAX(height_cm);", "SQL": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1", "question_toks": ["Name", "the", "tallest", "superhero", "."], "SQL_toks": ["SELECT", "superhero_name", "FROM", "superhero", "ORDER", "BY", "height_cm", "DESC", "LIMIT", "1"], "evidence_toks": ["tallest", "superhero", "refers", "to", "MAX", "(", "height_cm", ")", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Among all superheroes created by George Lucas, identify the percentage of female superheroes.", "evidence": "created by George Lucas refers to publisher_name = 'George Lucas'; percentage = MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'George Lucas'), COUNT(publisher_name = 'George Lucas')), 100.0); female refers to gender = 'Female';", "SQL": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'", "question_toks": ["Among", "all", "superheroes", "created", "by", "George", "Lucas", ",", "identify", "the", "percentage", "of", "female", "superheroes", "."], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T3.gender", "=", "'Female", "'", "THEN", "1", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "gender", "AS", "T3", "ON", "T1.gender_id", "=", "T3.id", "WHERE", "T2.publisher_name", "=", "'George", "Lucas", "'"], "evidence_toks": ["created", "by", "George", "Lucas", "refers", "to", "publisher_name", "=", "'George", "Lucas", "'", ";", "percentage", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUM", "(", "gender", "=", "'Female", "'", "WHERE", "publisher_name", "=", "'George", "Lucas", "'", ")", ",", "COUNT", "(", "publisher_name", "=", "'George", "Lucas", "'", ")", ")", ",", "100.0", ")", ";", "female", "refers", "to", "gender", "=", "'Female", "'", ";"], "difficulty": "challenging"}, {"db_id": "superhero", "question": "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.", "evidence": "Marvel Comics refers to publisher_name = 'Marvel Comics'; percentage = MULTIPLY(DIVIDE(SUM(alignment = 'Good' WHERE publisher_name = 'Marvel Comics'), COUNT(publisher_name = 'Marvel Comics')), 100.0); good superheroes refers to alignment = 'Good';", "SQL": "SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'", "question_toks": ["Among", "all", "superheroes", "in", "Marvel", "Comics", ",", "identify", "the", "percentage", "of", "'good", "'", "superheroes", "."], "SQL_toks": ["SELECT", "CAST", "(", "COUNT", "(", "CASE", "WHEN", "T3.alignment", "=", "'Good", "'", "THEN", "T1.id", "ELSE", "NULL", "END", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.id", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "publisher", "AS", "T2", "ON", "T1.publisher_id", "=", "T2.id", "INNER", "JOIN", "alignment", "AS", "T3", "ON", "T1.alignment_id", "=", "T3.id", "WHERE", "T2.publisher_name", "=", "'Marvel", "Comics", "'"], "evidence_toks": ["Marvel", "Comics", "refers", "to", "publisher_name", "=", "'Marvel", "Comics", "'", ";", "percentage", "=", "MULTIPLY", "(", "DIVIDE", "(", "SUM", "(", "alignment", "=", "'Good", "'", "WHERE", "publisher_name", "=", "'Marvel", "Comics", "'", ")", ",", "COUNT", "(", "publisher_name", "=", "'Marvel", "Comics", "'", ")", ")", ",", "100.0", ")", ";", "good", "superheroes", "refers", "to", "alignment", "=", "'Good", "'", ";"], "difficulty": "challenging"}, {"db_id": "superhero", "question": "What is the total number of superheroes that have John as their first name?", "evidence": "have John as their first name refers to full_name LIKE 'John%';", "SQL": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%'", "question_toks": ["What", "is", "the", "total", "number", "of", "superheroes", "that", "have", "John", "as", "their", "first", "name", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "id", ")", "FROM", "superhero", "WHERE", "full_name", "LIKE", "'John", "%", "'"], "evidence_toks": ["have", "John", "as", "their", "first", "name", "refers", "to", "full_name", "LIKE", "'John", "%", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Provide the weight and race of the superhero with superhero ID 40.", "evidence": "weight refers to weight_kg; superhero ID 40 refers to superhero.id = 40;", "SQL": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40", "question_toks": ["Provide", "the", "weight", "and", "race", "of", "the", "superhero", "with", "superhero", "ID", "40", "."], "SQL_toks": ["SELECT", "T1.weight_kg", ",", "T2.race", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "race", "AS", "T2", "ON", "T1.race_id", "=", "T2.id", "WHERE", "T1.id", "=", "40"], "evidence_toks": ["weight", "refers", "to", "weight_kg", ";", "superhero", "ID", "40", "refers", "to", "superhero.id", "=", "40", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "Calculate the average height of all neutral superheroes.", "evidence": "", "SQL": "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'", "question_toks": ["Calculate", "the", "average", "height", "of", "all", "neutral", "superheroes", "."], "SQL_toks": ["SELECT", "AVG", "(", "T1.height_cm", ")", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "alignment", "AS", "T2", "ON", "T1.alignment_id", "=", "T2.id", "WHERE", "T2.alignment", "=", "'Neutral", "'"], "evidence_toks": [], "difficulty": "simple"}, {"db_id": "superhero", "question": "Give the eye colour of Blackwulf.", "evidence": "eye colour refers to colour.colour where eye_colour_id = colour.id; Blackwulf refers to superhero_name = 'Blackwulf';", "SQL": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'", "question_toks": ["Give", "the", "eye", "colour", "of", "Blackwulf", "."], "SQL_toks": ["SELECT", "T2.colour", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "colour", "AS", "T2", "ON", "T1.eye_colour_id", "=", "T2.id", "WHERE", "T1.superhero_name", "=", "'Blackwulf", "'"], "evidence_toks": ["eye", "colour", "refers", "to", "colour.colour", "where", "eye_colour_id", "=", "colour.id", ";", "Blackwulf", "refers", "to", "superhero_name", "=", "'Blackwulf", "'", ";"], "difficulty": "simple"}, {"db_id": "superhero", "question": "List the power of superheroes with height greater than 80% of the average height of all superheroes.", "evidence": "power of superheroes refers to power_name; height greater than 80% of the average height of all superheroes = height_cm > MULTIPLY(AVG(height_cm), 0.8);", "SQL": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm * 100 > ( SELECT AVG(height_cm) FROM superhero ) * 80", "question_toks": ["List", "the", "power", "of", "superheroes", "with", "height", "greater", "than", "80", "%", "of", "the", "average", "height", "of", "all", "superheroes", "."], "SQL_toks": ["SELECT", "T3.power_name", "FROM", "superhero", "AS", "T1", "INNER", "JOIN", "hero_power", "AS", "T2", "ON", "T1.id", "=", "T2.hero_id", "INNER", "JOIN", "superpower", "AS", "T3", "ON", "T2.power_id", "=", "T3.id", "WHERE", "T1.height_cm", "*", "100", ">", "(", "SELECT", "AVG", "(", "height_cm", ")", "FROM", "superhero", ")", "*", "80"], "evidence_toks": ["power", "of", "superheroes", "refers", "to", "power_name", ";", "height", "greater", "than", "80", "%", "of", "the", "average", "height", "of", "all", "superheroes", "=", "height_cm", ">", "MULTIPLY", "(", "AVG", "(", "height_cm", ")", ",", "0.8", ")", ";"], "difficulty": "moderate"}]