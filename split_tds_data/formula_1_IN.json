[{"db_id": "formula_1", "question": "Please list the reference names of the drivers who are eliminated in the first period in race number 18.", "evidence": "driver reference name refers to driverRef; first qualifying period refers to q1; drivers who are eliminated in the first qualifying period refers to 5 drivers with MAX(q1); race number refers to raceId;", "SQL": "SELECT T2.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 18 ORDER BY T1.q1 DESC LIMIT 5", "question_toks": ["Please", "list", "the", "reference", "names", "of", "the", "drivers", "who", "are", "eliminated", "in", "the", "first", "period", "in", "race", "number", "18", "."], "SQL_toks": ["SELECT", "T2.driverRef", "FROM", "qualifying", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T1.raceId", "=", "18", "ORDER", "BY", "T1.q1", "DESC", "LIMIT", "5"], "evidence_toks": ["driver", "reference", "name", "refers", "to", "driverRef", ";", "first", "qualifying", "period", "refers", "to", "q1", ";", "drivers", "who", "are", "eliminated", "in", "the", "first", "qualifying", "period", "refers", "to", "5", "drivers", "with", "MAX", "(", "q1", ")", ";", "race", "number", "refers", "to", "raceId", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'value that cost more converted mana for the face' refers to ORDER BY cards.faceConvertedManaCost LIMIT 1"]}, {"db_id": "formula_1", "question": "What is the surname of the driver with the best lap time in race number 19 in the second period?", "evidence": "race number refers to raceId; second qualifying period refers to q2; best lap time refers to MIN(q2);", "SQL": "SELECT T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 19 ORDER BY T1.q2 ASC LIMIT 1", "question_toks": ["What", "is", "the", "surname", "of", "the", "driver", "with", "the", "best", "lap", "time", "in", "race", "number", "19", "in", "the", "second", "period", "?"], "SQL_toks": ["SELECT", "T2.surname", "FROM", "qualifying", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T1.raceId", "=", "19", "ORDER", "BY", "T1.q2", "ASC", "LIMIT", "1"], "evidence_toks": ["race", "number", "refers", "to", "raceId", ";", "second", "qualifying", "period", "refers", "to", "q2", ";", "best", "lap", "time", "refers", "to", "MIN", "(", "q2", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'frame style ranking below 100 on EDHRec' refers to cards.edhrecRank < 100", "'cards with 2015 frame style' refers to cards.frameVersion = 2015"]}, {"db_id": "formula_1", "question": "Please list the year during which the race is held on circuits in Shanghai.", "evidence": "Shanghai is a name of location;", "SQL": "SELECT T2.year FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.location = 'Shanghai'", "question_toks": ["Please", "list", "the", "year", "during", "which", "the", "race", "is", "held", "on", "circuits", "in", "Shanghai", "."], "SQL_toks": ["SELECT", "T2.year", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.location", "=", "'Shanghai", "'"], "evidence_toks": ["Shanghai", "is", "a", "name", "of", "location", ";"], "difficulty": "simple", "templatized_domain_statements": ["'cards have missing or degraded properties and values' refers to cards.hasContentWarning = 1", "'illustrated by Stephen Daniel' refers to cards.artist = 'Stephen Daniel'"]}, {"db_id": "formula_1", "question": "Where can the introduction of the races held on Circuit de Barcelona-Catalunya be found?", "evidence": "introduction of races refers to url; Circuit de Barcelona-Catalunya is a name of circuit;", "SQL": "SELECT DISTINCT T1.url FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Circuit de Barcelona-Catalunya'", "question_toks": ["Where", "can", "the", "introduction", "of", "the", "races", "held", "on", "Circuit", "de", "Barcelona-Catalunya", "be", "found", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.url", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.name", "=", "'Circuit", "de", "Barcelona-Catalunya", "'"], "evidence_toks": ["introduction", "of", "races", "refers", "to", "url", ";", "Circuit", "de", "Barcelona-Catalunya", "is", "a", "name", "of", "circuit", ";"], "difficulty": "simple", "templatized_domain_statements": ["'card named 'Sublime Epiphany' with number 74s' refers to cards.name = 'Sublime Epiphany' AND cards.number = '74'", "'number 74s' refers to cards.number = '74s'", "'information about rulings' refers to rulings.text"]}, {"db_id": "formula_1", "question": "Please give the name of the race held on the circuits in Germany.", "evidence": "Germany is a name of country;", "SQL": "SELECT DISTINCT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.country = 'Germany'", "question_toks": ["Please", "give", "the", "name", "of", "the", "race", "held", "on", "the", "circuits", "in", "Germany", "."], "SQL_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.country", "=", "'Germany", "'"], "evidence_toks": ["Germany", "is", "a", "name", "of", "country", ";"], "difficulty": "simple", "templatized_domain_statements": ["'artist with the most ruling information' refers to ORDER BY COUNT(DISTINCT cards.uuid) DESC LIMIT 1", "'the card is a promotional printing' refers to cards.isPromo = 1"]}, {"db_id": "formula_1", "question": "Please list the positions of the circuits built by the constructor Renault.", "evidence": "Renault is a name of constructor;", "SQL": "SELECT DISTINCT T1.position FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T2.constructorId = T1.constructorId WHERE T2.name = 'Renault'", "question_toks": ["Please", "list", "the", "positions", "of", "the", "circuits", "built", "by", "the", "constructor", "Renault", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.position", "FROM", "constructorStandings", "AS", "T1", "INNER", "JOIN", "constructors", "AS", "T2", "ON", "T2.constructorId", "=", "T1.constructorId", "WHERE", "T2.name", "=", "'Renault", "'"], "evidence_toks": ["Renault", "is", "a", "name", "of", "constructor", ";"], "difficulty": "simple", "templatized_domain_statements": ["'alternative language in Japanese' refers to foreign_data.language = 'Japanese'"]}, {"db_id": "formula_1", "question": "How many races in the year 2009 are held on Albert Park Grand Prix Circuit?", "evidence": "", "SQL": "SELECT COUNT(T2.circuitID) FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Albert Park GrAND Prix Circuit' AND T2.year = 2009", "question_toks": ["How", "many", "races", "in", "the", "year", "2009", "are", "held", "on", "Albert", "Park", "Grand", "Prix", "Circuit", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.circuitID", ")", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.name", "=", "'Albert", "Park", "GrAND", "Prix", "Circuit", "'", "AND", "T2.year", "=", "2009"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'cards availabe in Chinese Simplified' refers to foreign_data.language = 'Chinese Simplified'", "'percentage of the cards availabe in Chinese Simplified' refers to CAST(SUM(CASE WHEN foreign_data.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id)"]}, {"db_id": "formula_1", "question": "What is the location coordinates of the circuits for Australian Grand Prix?", "evidence": "location coordinates refers to (lat, lng);", "SQL": "SELECT DISTINCT T1.location, T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.name = 'Australian GrAND Prix'", "question_toks": ["What", "is", "the", "location", "coordinates", "of", "the", "circuits", "for", "Australian", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.location", ",", "T1.lat", ",", "T1.lng", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T2.name", "=", "'Australian", "GrAND", "Prix", "'"], "evidence_toks": ["location", "coordinates", "refers", "to", "(", "lat", ",", "lng", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'keyword found on card 'Angel of Mercy'' refers to cards.keywords WHERE cards.name = 'Angel of Mercy'"]}, {"db_id": "formula_1", "question": "Where can I find the information about the races held on Sepang International Circuit?", "evidence": "information about races refers to url;", "SQL": "SELECT DISTINCT T1.url FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Sepang International Circuit'", "question_toks": ["Where", "can", "I", "find", "the", "information", "about", "the", "races", "held", "on", "Sepang", "International", "Circuit", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.url", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.name", "=", "'Sepang", "International", "Circuit", "'"], "evidence_toks": ["information", "about", "races", "refers", "to", "url", ";"], "difficulty": "simple", "templatized_domain_statements": ["'type of promotion' refers to promoTypes", "'type of promotion' refers to cards.promoTypes"]}, {"db_id": "formula_1", "question": "Give the coordinate position for Abu Dhabi Grand Prix.", "evidence": "coordinate position refers to (lat, lng);", "SQL": "SELECT DISTINCT T1.location, T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.name = 'Abu Dhabi GrAND Prix'", "question_toks": ["Give", "the", "coordinate", "position", "for", "Abu", "Dhabi", "Grand", "Prix", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.location", ",", "T1.lat", ",", "T1.lng", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T2.name", "=", "'Abu", "Dhabi", "GrAND", "Prix", "'"], "evidence_toks": ["coordinate", "position", "refers", "to", "(", "lat", ",", "lng", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'border color of card \"Ancestor's Chosen\"' refers to cards.borderColor WHERE cards.name = \"Ancestor's Chosen\""]}, {"db_id": "formula_1", "question": "For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality?", "evidence": "race number refers to raceId;", "SQL": "SELECT DISTINCT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 355 AND T1.q2 LIKE '1:40%'", "question_toks": ["For", "the", "driver", "who", "had", "the", "Q2", "time", "as", "0:01:40", "in", "the", "qualifying", "race", "No", ".", "355", ",", "what", "is", "his", "nationality", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T2.nationality", "FROM", "qualifying", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T1.raceId", "=", "355", "AND", "T1.q2", "LIKE", "'", "1:40", "%", "'"], "evidence_toks": ["race", "number", "refers", "to", "raceId", ";"], "difficulty": "simple", "templatized_domain_statements": ["'the set that card 'Angel of Mercy' is in' refers to set_translations.name = 'Angel of Mercy'"]}, {"db_id": "formula_1", "question": "For the Bahrain Grand Prix in 2007, how many drivers finished the game?", "evidence": "drivers who finished the race refers to time>0;", "SQL": "SELECT COUNT(T3.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.year = 2007 AND T1.name = 'Bahrain GrAND Prix' AND T2.time IS NULL", "question_toks": ["For", "the", "Bahrain", "Grand", "Prix", "in", "2007", ",", "how", "many", "drivers", "finished", "the", "game", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T3.driverId", ")", "FROM", "races", "AS", "T1", "INNER", "JOIN", "results", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "ON", "T3.driverId", "=", "T2.driverId", "WHERE", "T1.year", "=", "2007", "AND", "T1.name", "=", "'Bahrain", "GrAND", "Prix", "'", "AND", "T2.time", "IS", "NULL"], "evidence_toks": ["drivers", "who", "finished", "the", "race", "refers", "to", "time", ">", "0", ";"], "difficulty": "simple", "templatized_domain_statements": ["'legalities whose status is restricted' refers to legalities.status = 'Restricted'", "'cards of legalities whose status is restricted have text boxes' refers to legalities.status = 'Restricted' AND cards.isTextless = 0"]}, {"db_id": "formula_1", "question": "Show me the season page of year when the race No. 901 took place.", "evidence": "race number refers to raceId;", "SQL": "SELECT T2.url FROM races AS T1 INNER JOIN seasons AS T2 ON T2.year = T1.year WHERE T1.raceId = 901", "question_toks": ["Show", "me", "the", "season", "page", "of", "year", "when", "the", "race", "No", ".", "901", "took", "place", "."], "SQL_toks": ["SELECT", "T2.url", "FROM", "races", "AS", "T1", "INNER", "JOIN", "seasons", "AS", "T2", "ON", "T2.year", "=", "T1.year", "WHERE", "T1.raceId", "=", "901"], "evidence_toks": ["race", "number", "refers", "to", "raceId", ";"], "difficulty": "simple", "templatized_domain_statements": ["'of card \"Cloudchaser Eagle\"' refers to cards.name = 'Cloudchaser Eagle'"]}, {"db_id": "formula_1", "question": "For the race happened on 2015/11/29, how many drivers finished the game?", "evidence": "game and race are synonyms; drivers who finished the race refers to time>0;", "SQL": "SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.date = '2015-11-29' AND T2.time IS NULL", "question_toks": ["For", "the", "race", "happened", "on", "2015/11/29", ",", "how", "many", "drivers", "finished", "the", "game", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.driverId", ")", "FROM", "races", "AS", "T1", "INNER", "JOIN", "results", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "WHERE", "T1.date", "=", "'2015-11-29", "'", "AND", "T2.time", "IS", "NULL"], "evidence_toks": ["game", "and", "race", "are", "synonyms", ";", "drivers", "who", "finished", "the", "race", "refers", "to", "time", ">", "0", ";"], "difficulty": "simple", "templatized_domain_statements": ["'the type of card \"Benalish Knight\"' refers to cards.type"]}, {"db_id": "formula_1", "question": "For all the drivers who finished the game in race No. 592, who is the oldest?", "evidence": "drivers who finished the race refers to time>0; oldest driver refers to oldest dob;", "SQL": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T2.raceId = 592 AND T2.time IS NULL AND T1.dob IS NOT NULL ORDER BY T1.dob ASC LIMIT 1", "question_toks": ["For", "all", "the", "drivers", "who", "finished", "the", "game", "in", "race", "No", ".", "592", ",", "who", "is", "the", "oldest", "?"], "SQL_toks": ["SELECT", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "INNER", "JOIN", "results", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T2.raceId", "=", "592", "AND", "T2.time", "IS", "NULL", "AND", "T1.dob", "IS", "NOT", "NULL", "ORDER", "BY", "T1.dob", "ASC", "LIMIT", "1"], "evidence_toks": ["drivers", "who", "finished", "the", "race", "refers", "to", "time", ">", "0", ";", "oldest", "driver", "refers", "to", "oldest", "dob", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'playing card \"Benalish Knight\"' refers to cards.name = 'Benalish Knight'", "'rule of playing card' refers to legalities.format"]}, {"db_id": "formula_1", "question": "Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website.", "evidence": "player and driver are synonyms; race number refers to raceId; introduction website of the drivers refers to url;", "SQL": "SELECT DISTINCT T2.forename, T2.surname, T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 161 AND T1.time LIKE '1:27%'", "question_toks": ["Who", "was", "the", "player", "that", "got", "the", "lap", "time", "of", "0:01:27", "in", "the", "race", "No", ".", "161", "?", "Show", "his", "introduction", "website", "."], "SQL_toks": ["SELECT", "DISTINCT", "T2.forename", ",", "T2.surname", ",", "T2.url", "FROM", "lapTimes", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T1.raceId", "=", "161", "AND", "T1.time", "LIKE", "'", "1:27", "%", "'"], "evidence_toks": ["player", "and", "driver", "are", "synonyms", ";", "race", "number", "refers", "to", "raceId", ";", "introduction", "website", "of", "the", "drivers", "refers", "to", "url", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'illustrated the card art in Phyrexian' refers to foreign_data.language = 'Phyrexian'", "'names of the artists who illustrated the card art in Phyrexian' refers to cards.artist"]}, {"db_id": "formula_1", "question": "For the driver who set the fastest lap speed in race No.933, where does he come from?", "evidence": "fastest lap speed refers to MIN(fastestLapSpeed);", "SQL": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T2.raceId = 933 AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1", "question_toks": ["For", "the", "driver", "who", "set", "the", "fastest", "lap", "speed", "in", "race", "No.933", ",", "where", "does", "he", "come", "from", "?"], "SQL_toks": ["SELECT", "T1.nationality", "FROM", "drivers", "AS", "T1", "INNER", "JOIN", "results", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T2.raceId", "=", "933", "AND", "T2.fastestLapTime", "IS", "NOT", "NULL", "ORDER", "BY", "T2.fastestLapSpeed", "DESC", "LIMIT", "1"], "evidence_toks": ["fastest", "lap", "speed", "refers", "to", "MIN", "(", "fastestLapSpeed", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'illustrated in German' refers to foreign_data.language = 'German'", "'reprinted' refers to cards.isReprint = 1"]}, {"db_id": "formula_1", "question": "Where is Malaysian Grand Prix held? Give the location coordinates.", "evidence": "location coordinates refers to (lat, lng);", "SQL": "SELECT DISTINCT T1.location, T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.name = 'Malaysian GrAND Prix'", "question_toks": ["Where", "is", "Malaysian", "Grand", "Prix", "held", "?", "Give", "the", "location", "coordinates", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.location", ",", "T1.lat", ",", "T1.lng", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T2.name", "=", "'Malaysian", "GrAND", "Prix", "'"], "evidence_toks": ["location", "coordinates", "refers", "to", "(", "lat", ",", "lng", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'borderless cards' refers to cards.borderColor = 'borderless'", "'illustrated in Russian' refers to foreign_data.language = 'Russian'"]}, {"db_id": "formula_1", "question": "For the constructor which got the highest point in the race No. 9 , what is its introduction website?", "evidence": "race number refers to raceId; introduction website of the constructor refers to url;", "SQL": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T2.constructorId = T1.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1", "question_toks": ["For", "the", "constructor", "which", "got", "the", "highest", "point", "in", "the", "race", "No", ".", "9", ",", "what", "is", "its", "introduction", "website", "?"], "SQL_toks": ["SELECT", "T2.url", "FROM", "constructorResults", "AS", "T1", "INNER", "JOIN", "constructors", "AS", "T2", "ON", "T2.constructorId", "=", "T1.constructorId", "WHERE", "T1.raceId", "=", "9", "ORDER", "BY", "T1.points", "DESC", "LIMIT", "1"], "evidence_toks": ["race", "number", "refers", "to", "raceId", ";", "introduction", "website", "of", "the", "constructor", "refers", "to", "url", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'cards with toughness of (100)' refers to cards.toughness = 100"]}, {"db_id": "formula_1", "question": "What's Lucas di Grassi's Q1 result in the race No. 345?", "evidence": "race number refers to raceId;", "SQL": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 345 AND T2.forename = 'Lucas' AND T2.surname = 'di Grassi'", "question_toks": ["What", "'s", "Lucas", "di", "Grassi", "'s", "Q1", "result", "in", "the", "race", "No", ".", "345", "?"], "SQL_toks": ["SELECT", "T1.q1", "FROM", "qualifying", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T1.raceId", "=", "345", "AND", "T2.forename", "=", "'Lucas", "'", "AND", "T2.surname", "=", "'di", "Grassi", "'"], "evidence_toks": ["race", "number", "refers", "to", "raceId", ";"], "difficulty": "simple", "templatized_domain_statements": ["'black border cards' refers to cards.borderColor = 'black'", "'available on mtgo' refers to cards.availability = 'mtgo'", "'only available on mtgo' refers to cards.availability = 'mtgo'"]}, {"db_id": "formula_1", "question": "For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from?", "evidence": "race number refers to raceId;", "SQL": "SELECT DISTINCT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 347 AND T1.q2 LIKE '1:15%'", "question_toks": ["For", "the", "driver", "who", "had", "the", "Q2", "time", "as", "0:01:15", "in", "race", "No", ".", "347", ",", "where", "is", "he", "from", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T2.nationality", "FROM", "qualifying", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T1.raceId", "=", "347", "AND", "T1.q2", "LIKE", "'", "1:15", "%", "'"], "evidence_toks": ["race", "number", "refers", "to", "raceId", ";"], "difficulty": "simple", "templatized_domain_statements": ["'converted mana cost of (100)' refers to cards.convertedManaCost = 100"]}, {"db_id": "formula_1", "question": "In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?", "evidence": "race number refers to raceId;", "SQL": "SELECT T2.code FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 45 AND T1.q3 LIKE '1:33%'", "question_toks": ["In", "the", "race", "No", ".", "45", ",", "for", "the", "driver", "who", "had", "the", "Q3", "time", "as", "0:01:33", ",", "what", "is", "his", "abbreviated", "code", "?"], "SQL_toks": ["SELECT", "T2.code", "FROM", "qualifying", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T1.raceId", "=", "45", "AND", "T1.q3", "LIKE", "'", "1:33", "%", "'"], "evidence_toks": ["race", "number", "refers", "to", "raceId", ";"], "difficulty": "simple", "templatized_domain_statements": ["'have subtype other than \"Angel\"' refers to cards.subtypes != 'Angel'"]}, {"db_id": "formula_1", "question": "For all the drivers who finished the game in race No. 872, who is the youngest?", "evidence": "race number refers to raceId; drivers who finished the race refers to time>0; the youngest is a driver where MAX(dob);", "SQL": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T2.raceId = 872 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1", "question_toks": ["For", "all", "the", "drivers", "who", "finished", "the", "game", "in", "race", "No", ".", "872", ",", "who", "is", "the", "youngest", "?"], "SQL_toks": ["SELECT", "T1.forename", ",", "T1.surname", "FROM", "drivers", "AS", "T1", "INNER", "JOIN", "results", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T2.raceId", "=", "872", "AND", "T2.time", "IS", "NOT", "NULL", "ORDER", "BY", "T1.dob", "DESC", "LIMIT", "1"], "evidence_toks": ["race", "number", "refers", "to", "raceId", ";", "drivers", "who", "finished", "the", "race", "refers", "to", "time", ">", "0", ";", "the", "youngest", "is", "a", "driver", "where", "MAX", "(", "dob", ")", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'cards that only available in paper' refers to cards.availability = 'paper'", "'only available in paper and Japanese language' refers to cards.availability = 'paper' AND foreign_data.language = 'Japanese'"]}, {"db_id": "formula_1", "question": "Who was the driver that got the best lap time in the race No. 348? Give his full name.", "evidence": "race number refers to raceId; the best lap time refers to MIN(time)", "SQL": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 348 ORDER BY T1.time ASC LIMIT 1", "question_toks": ["Who", "was", "the", "driver", "that", "got", "the", "best", "lap", "time", "in", "the", "race", "No", ".", "348", "?", "Give", "his", "full", "name", "."], "SQL_toks": ["SELECT", "T2.forename", ",", "T2.surname", "FROM", "lapTimes", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T1.raceId", "=", "348", "ORDER", "BY", "T1.time", "ASC", "LIMIT", "1"], "evidence_toks": ["race", "number", "refers", "to", "raceId", ";", "the", "best", "lap", "time", "refers", "to", "MIN", "(", "time", ")"], "difficulty": "simple", "templatized_domain_statements": ["'cards in set 10E' refers to set_translations.setCode = '10E'", "'cards in set 10E with converted mana of (100) have translation' refers to cards.convertedManaCost = 100 AND set_translations.setCode = '10E'"]}, {"db_id": "formula_1", "question": "Which year was the first Singapore Grand Prix?", "evidence": "the first race refers to race happened in min(year);", "SQL": "SELECT year FROM races WHERE name = 'Singapore GrAND Prix' ORDER BY year ASC LIMIT 1", "question_toks": ["Which", "year", "was", "the", "first", "Singapore", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "year", "FROM", "races", "WHERE", "name", "=", "'Singapore", "GrAND", "Prix", "'", "ORDER", "BY", "year", "ASC", "LIMIT", "1"], "evidence_toks": ["the", "first", "race", "refers", "to", "race", "happened", "in", "min", "(", "year", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'name of cards with original types of Creature - Elf' refers to cards.originalType = 'Creature - Elf'"]}, {"db_id": "formula_1", "question": "Name the first race recorded. What are the other races that happened within the same month and year of that race.", "evidence": "the first race refers to year = year(min(date)) and month = month(min(date));", "SQL": "SELECT name FROM races WHERE STRFTIME('%Y', date) = ( SELECT STRFTIME('%Y', date) FROM races ORDER BY date ASC LIMIT 1 ) AND STRFTIME('%m', date) = ( SELECT STRFTIME('%m', date) FROM races ORDER BY date ASC LIMIT 1 )", "question_toks": ["Name", "the", "first", "race", "recorded", ".", "What", "are", "the", "other", "races", "that", "happened", "within", "the", "same", "month", "and", "year", "of", "that", "race", "."], "SQL_toks": ["SELECT", "name", "FROM", "races", "WHERE", "STRFTIME", "(", "'", "%", "Y", "'", ",", "date", ")", "=", "(", "SELECT", "STRFTIME", "(", "'", "%", "Y", "'", ",", "date", ")", "FROM", "races", "ORDER", "BY", "date", "ASC", "LIMIT", "1", ")", "AND", "STRFTIME", "(", "'", "%", "m", "'", ",", "date", ")", "=", "(", "SELECT", "STRFTIME", "(", "'", "%", "m", "'", ",", "date", ")", "FROM", "races", "ORDER", "BY", "date", "ASC", "LIMIT", "1", ")"], "evidence_toks": ["the", "first", "race", "refers", "to", "year", "=", "year", "(", "min", "(", "date", ")", ")", "and", "month", "=", "month", "(", "min", "(", "date", ")", ")", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'cards from ID 1-20' refers to cards.id BETWEEN 1 AND 20"]}, {"db_id": "formula_1", "question": "When was the last f1 season whereby Brands Hatch hosted the British Grand Prix?", "evidence": "the last refers to year(max);", "SQL": "SELECT T2.date FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Brands Hatch' AND T2.name = 'British GrAND Prix' ORDER BY T2.year DESC LIMIT 1", "question_toks": ["When", "was", "the", "last", "f1", "season", "whereby", "Brands", "Hatch", "hosted", "the", "British", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "T2.date", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.name", "=", "'Brands", "Hatch", "'", "AND", "T2.name", "=", "'British", "GrAND", "Prix", "'", "ORDER", "BY", "T2.year", "DESC", "LIMIT", "1"], "evidence_toks": ["the", "last", "refers", "to", "year", "(", "max", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'Among the Artifact cards' refers to cards.originalType = 'Artifact'", "'black color' refers to cards.colors = 'B'", "'comes with foreign language translation' refers to cards.uuid = foreign_data.uuid"]}, {"db_id": "formula_1", "question": "How many seasons has Silverstone Circuit hosted the British Grand Prix?", "evidence": "British Grand Prix is the name of race;", "SQL": "SELECT COUNT(T2.circuitid) FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Silverstone Circuit' AND T2.name = 'British GrAND Prix'", "question_toks": ["How", "many", "seasons", "has", "Silverstone", "Circuit", "hosted", "the", "British", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.circuitid", ")", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.name", "=", "'Silverstone", "Circuit", "'", "AND", "T2.name", "=", "'British", "GrAND", "Prix", "'"], "evidence_toks": ["British", "Grand", "Prix", "is", "the", "name", "of", "race", ";"], "difficulty": "simple", "templatized_domain_statements": ["'cards with rarity of uncommon' refers to cards.rarity = 'uncommon'"]}, {"db_id": "formula_1", "question": "State the driver with the most points scored. Find his full name with that points.", "evidence": "the most points scored refers to max(points); full name contains forename and surname.", "SQL": "SELECT T3.forename, T3.surname, T2.points FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId ORDER BY T2.points DESC LIMIT 1", "question_toks": ["State", "the", "driver", "with", "the", "most", "points", "scored", ".", "Find", "his", "full", "name", "with", "that", "points", "."], "SQL_toks": ["SELECT", "T3.forename", ",", "T3.surname", ",", "T2.points", "FROM", "races", "AS", "T1", "INNER", "JOIN", "driverStandings", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "ON", "T3.driverId", "=", "T2.driverId", "ORDER", "BY", "T2.points", "DESC", "LIMIT", "1"], "evidence_toks": ["the", "most", "points", "scored", "refers", "to", "max", "(", "points", ")", ";", "full", "name", "contains", "forename", "and", "surname", "."], "difficulty": "moderate", "templatized_domain_statements": ["'cards designed by Volcan Ba\u00c7\u00b5a' refers to cards.artist = 'Volcan Ba\u00c7\u00b5a'", "'foil non-powerful' refers to cards.cardKingdomId IS NULL AND cards.cardKingdomFoilId IS NULL"]}, {"db_id": "formula_1", "question": "Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.", "evidence": "", "SQL": "SELECT T3.forename, T3.surname, T2.points FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Chinese GrAND Prix' AND T1.year = 2017 ORDER BY T2.points DESC LIMIT 3", "question_toks": ["Name", "the", "top", "3", "drivers", "and", "the", "points", "they", "scored", "in", "the", "2017", "Chinese", "Grand", "Prix", "."], "SQL_toks": ["SELECT", "T3.forename", ",", "T3.surname", ",", "T2.points", "FROM", "races", "AS", "T1", "INNER", "JOIN", "driverStandings", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "ON", "T3.driverId", "=", "T2.driverId", "WHERE", "T1.name", "=", "'Chinese", "GrAND", "Prix", "'", "AND", "T1.year", "=", "2017", "ORDER", "BY", "T2.points", "DESC", "LIMIT", "3"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'cards designed by UDON' refers to cards.artist = 'UDON'", "'available in mtgo print type' refers to cards.availability = 'mtgo'", "'cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1' refers to cards.hand = -1 AND cards.artist = 'UDON' AND cards.Availability = 'print' AND cards.type = 'mtgo'"]}, {"db_id": "formula_1", "question": "What is the average lap time for Sebastian Vettel in the 2009 Chinese Grand Prix?", "evidence": "AVG(time);", "SQL": "SELECT AVG(T2.milliseconds) FROM races AS T1 INNER JOIN lapTimes AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Sebastian' AND T3.surname = 'Vettel' AND T1.year = 2009 AND T1.name = 'Chinese GrAND Prix'", "question_toks": ["What", "is", "the", "average", "lap", "time", "for", "Sebastian", "Vettel", "in", "the", "2009", "Chinese", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "AVG", "(", "T2.milliseconds", ")", "FROM", "races", "AS", "T1", "INNER", "JOIN", "lapTimes", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "ON", "T3.driverId", "=", "T2.driverId", "WHERE", "T3.forename", "=", "'Sebastian", "'", "AND", "T3.surname", "=", "'Vettel", "'", "AND", "T1.year", "=", "2009", "AND", "T1.name", "=", "'Chinese", "GrAND", "Prix", "'"], "evidence_toks": ["AVG", "(", "time", ")", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'have a sensitive content warning' refers to cards.hasContentWarning = 1", "'available on paper' refers to cards.availability = 'paper'", "'1993 frame version' refers to cards.frameVersion = 1993"]}, {"db_id": "formula_1", "question": "List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.", "evidence": "", "SQL": "SELECT T1.name, T1.location, T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.country = 'USA' AND T2.year = 2006", "question_toks": ["List", "circuits", "in", "USA", "which", "hosted", "f1", "races", "in", "2006", ".", "State", "the", "name", "and", "location", "of", "circuit", "and", "the", "name", "of", "the", "race", "it", "hosted", "."], "SQL_toks": ["SELECT", "T1.name", ",", "T1.location", ",", "T2.name", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.country", "=", "'USA", "'", "AND", "T2.year", "=", "2006"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'unconverted mana' refers to cards.manaCost", "'all the cards created by Rob Alexander' refers to cards.artist = 'Rob Alexander'"]}, {"db_id": "formula_1", "question": "Name the races along with its circuit name and location for f1 races hosted in September 2005.", "evidence": "in September 2005 refers to month(date) = 9 and year = 2005", "SQL": "SELECT DISTINCT T2.name, T1.name, T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.year = 2005 AND STRFTIME('%m', T2.date) = '09'", "question_toks": ["Name", "the", "races", "along", "with", "its", "circuit", "name", "and", "location", "for", "f1", "races", "hosted", "in", "September", "2005", "."], "SQL_toks": ["SELECT", "DISTINCT", "T2.name", ",", "T1.name", ",", "T1.location", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T2.year", "=", "2005", "AND", "STRFTIME", "(", "'", "%", "m", "'", ",", "T2.date", ")", "=", "'09", "'"], "evidence_toks": ["in", "September", "2005", "refers", "to", "month", "(", "date", ")", "=", "9", "and", "year", "=", "2005"], "difficulty": "simple", "templatized_domain_statements": ["'cards translated into Spanish' refers to set_translations.language = 'Spanish'", "'Lists the set code of all cards' refers to set_translations.setCode"]}, {"db_id": "formula_1", "question": "How many times did Michael Schumacher won from races hosted in Sepang International Circuit?", "evidence": "win from races refers to max(points)", "SQL": "SELECT SUM(T2.wins) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T2.driverId = T1.driverId INNER JOIN races AS T3 ON T3.raceId = T2.raceId INNER JOIN circuits AS T4 ON T4.circuitId = T3.circuitId WHERE T1.forename = 'Michael' AND T1.surname = 'Schumacher' AND T4.name = 'Sepang International Circuit'", "question_toks": ["How", "many", "times", "did", "Michael", "Schumacher", "won", "from", "races", "hosted", "in", "Sepang", "International", "Circuit", "?"], "SQL_toks": ["SELECT", "SUM", "(", "T2.wins", ")", "FROM", "drivers", "AS", "T1", "INNER", "JOIN", "driverStandings", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "INNER", "JOIN", "races", "AS", "T3", "ON", "T3.raceId", "=", "T2.raceId", "INNER", "JOIN", "circuits", "AS", "T4", "ON", "T4.circuitId", "=", "T3.circuitId", "WHERE", "T1.forename", "=", "'Michael", "'", "AND", "T1.surname", "=", "'Schumacher", "'", "AND", "T4.name", "=", "'Sepang", "International", "Circuit", "'"], "evidence_toks": ["win", "from", "races", "refers", "to", "max", "(", "points", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'maximum starting maximum hand size of +3' refers to cards.hand = '+3'", "'legendary frame effect cards' refers to cards.frameEffects = 'legendary'", "'percentage of legendary frame effect cards have a maximum starting maximum hand size of +3' refers to SUM(CASE WHEN cards.hand = '+3' THEN 1.0 ELSE 0 END) / COUNT(cards.id) * 100 WHERE cards.frameEffects = 'legendary'"]}, {"db_id": "formula_1", "question": "State the race and year of race in which Michael Schumacher had his fastest lap.", "evidence": "fastest lap refers to min(milliseconds)", "SQL": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' ORDER BY T2.milliseconds ASC LIMIT 1", "question_toks": ["State", "the", "race", "and", "year", "of", "race", "in", "which", "Michael", "Schumacher", "had", "his", "fastest", "lap", "."], "SQL_toks": ["SELECT", "T1.name", ",", "T1.year", "FROM", "races", "AS", "T1", "INNER", "JOIN", "lapTimes", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "ON", "T3.driverId", "=", "T2.driverId", "WHERE", "T3.forename", "=", "'Michael", "'", "AND", "T3.surname", "=", "'Schumacher", "'", "ORDER", "BY", "T2.milliseconds", "ASC", "LIMIT", "1"], "evidence_toks": ["fastest", "lap", "refers", "to", "min", "(", "milliseconds", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'Story Spotlight cards that also have a text box' refers to cards.isStorySpotlight = 1 and cards.isTextless = 0", "'percentage of Story Spotlight cards that also have a text box' refers to CAST(SUM(CASE WHEN isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id)"]}, {"db_id": "formula_1", "question": "Which was Lewis Hamilton first race? What was his points recorded for his first race event?", "evidence": "first race refers to min(Year)", "SQL": "SELECT T1.name, T2.points FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T1.year ASC LIMIT 1", "question_toks": ["Which", "was", "Lewis", "Hamilton", "first", "race", "?", "What", "was", "his", "points", "recorded", "for", "his", "first", "race", "event", "?"], "SQL_toks": ["SELECT", "T1.name", ",", "T2.points", "FROM", "races", "AS", "T1", "INNER", "JOIN", "driverStandings", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "ON", "T3.driverId", "=", "T2.driverId", "WHERE", "T3.forename", "=", "'Lewis", "'", "AND", "T3.surname", "=", "'Hamilton", "'", "ORDER", "BY", "T1.year", "ASC", "LIMIT", "1"], "evidence_toks": ["first", "race", "refers", "to", "min", "(", "Year", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'cards in Spanish' refers to foreign_data.language = 'Spanish'", "'percentage of cards in Spanish' refers to (SUM(CASE WHEN language = 'Spanish' THEN 1 ELSE 0 END) * 100 / COUNT(*))"]}, {"db_id": "formula_1", "question": "What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.", "evidence": "", "SQL": "SELECT T3.lap, T2.name, T1.name, T2.year, T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN lapTimes AS T3 ON T3.raceId = T2.raceId ORDER BY T3.lap DESC LIMIT 1", "question_toks": ["What", "is", "the", "most", "laps", "f1", "races", "had", "?", "Name", "the", "race", ",", "year", "and", "circuit", "location", "where", "the", "races", "with", "most", "laps", "was", "hosted", "."], "SQL_toks": ["SELECT", "T3.lap", ",", "T2.name", ",", "T1.name", ",", "T2.year", ",", "T1.location", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T1.circuitId", "=", "T2.circuitId", "INNER", "JOIN", "lapTimes", "AS", "T3", "ON", "T3.raceId", "=", "T2.raceId", "ORDER", "BY", "T3.lap", "DESC", "LIMIT", "1"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["inside the Commander block' refers to sets.block = 'Commander'", "'sets are inside' refers to set_translations.setCode", "'Brazilian Portuguese translated sets' refers to set_translations.language = 'Portuguese (Brazil)'"]}, {"db_id": "formula_1", "question": "Which of these circuits is located at a higher altitude, Silverstone Circuit, Hockenheimring or Hungaroring?", "evidence": "higher altitude refers to max(alt)", "SQL": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1", "question_toks": ["Which", "of", "these", "circuits", "is", "located", "at", "a", "higher", "altitude", ",", "Silverstone", "Circuit", ",", "Hockenheimring", "or", "Hungaroring", "?"], "SQL_toks": ["SELECT", "name", "FROM", "circuits", "WHERE", "name", "IN", "(", "'Silverstone", "Circuit", "'", ",", "'Hockenheimring", "'", ",", "'Hungaroring", "'", ")", "ORDER", "BY", "lat", "DESC", "LIMIT", "1"], "evidence_toks": ["higher", "altitude", "refers", "to", "max", "(", "alt", ")"], "difficulty": "simple", "templatized_domain_statements": ["'null power cards' refers to cards.power IS NULL", "'If you have two Lords of the Pit, you can sacrifice them to each other' ruling text refers to rulings.text"]}, {"db_id": "formula_1", "question": "What's the reference name of Marina Bay Street Circuit?", "evidence": "reference name refers to circuitRef", "SQL": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'", "question_toks": ["What", "'s", "the", "reference", "name", "of", "Marina", "Bay", "Street", "Circuit", "?"], "SQL_toks": ["SELECT", "circuitRef", "FROM", "circuits", "WHERE", "name", "=", "'Marina", "Bay", "Street", "Circuit", "'"], "evidence_toks": ["reference", "name", "refers", "to", "circuitRef"], "difficulty": "simple", "templatized_domain_statements": ["'cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces' refers to cards.Side IS NULL"]}, {"db_id": "formula_1", "question": "In which country can I find the circuit with the highest altitude?", "evidence": "highest altitude refers to max(alt)", "SQL": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1", "question_toks": ["In", "which", "country", "can", "I", "find", "the", "circuit", "with", "the", "highest", "altitude", "?"], "SQL_toks": ["SELECT", "country", "FROM", "circuits", "ORDER", "BY", "alt", "DESC", "LIMIT", "1"], "evidence_toks": ["highest", "altitude", "refers", "to", "max", "(", "alt", ")"], "difficulty": "simple", "templatized_domain_statements": ["'the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\"' refers to foreign_data.flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation'"]}, {"db_id": "formula_1", "question": "How many drivers don't have a code?", "evidence": "don't have a code refers to code is null", "SQL": "SELECT COUNT(driverId) - COUNT(CASE WHEN code IS NOT NULL THEN code END) FROM drivers", "question_toks": ["How", "many", "drivers", "do", "n't", "have", "a", "code", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "driverId", ")", "-", "COUNT", "(", "CASE", "WHEN", "code", "IS", "NOT", "NULL", "THEN", "code", "END", ")", "FROM", "drivers"], "evidence_toks": ["do", "n't", "have", "a", "code", "refers", "to", "code", "is", "null"], "difficulty": "simple", "templatized_domain_statements": ["'foreign name of the card in French' refers to foreign_data.language = 'French'", "'black border color' refers to cards.borderColor = 'black'"]}, {"db_id": "formula_1", "question": "Which country is the oldest driver from?", "evidence": "oldest driver refers to min(dob)", "SQL": "SELECT nationality FROM drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1", "question_toks": ["Which", "country", "is", "the", "oldest", "driver", "from", "?"], "SQL_toks": ["SELECT", "nationality", "FROM", "drivers", "WHERE", "dob", "IS", "NOT", "NULL", "ORDER", "BY", "dob", "ASC", "LIMIT", "1"], "evidence_toks": ["oldest", "driver", "refers", "to", "min", "(", "dob", ")"], "difficulty": "simple", "templatized_domain_statements": ["'cards without power are in French' refers to foreign_data.language = 'French'", "'cards without power' refers to cards.power IS NULL OR cards.power LIKE '%*%'", "'percentage of cards without power are in French' refers to CAST(SUM(CASE WHEN foreign_data.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id) WHERE cards.power IS NULL OR cards.power LIKE '%*%'"]}, {"db_id": "formula_1", "question": "Please list the surnames of all the Italian drivers.", "evidence": "Italian refers to nationality = 'italian'", "SQL": "SELECT surname FROM drivers WHERE nationality = 'Italian'", "question_toks": ["Please", "list", "the", "surnames", "of", "all", "the", "Italian", "drivers", "."], "SQL_toks": ["SELECT", "surname", "FROM", "drivers", "WHERE", "nationality", "=", "'Italian", "'"], "evidence_toks": ["Italian", "refers", "to", "nationality", "=", "'italian", "'"], "difficulty": "simple", "templatized_domain_statements": ["'Japanese translated sets' refers to set_translations.language = 'Japanese'", "'Japanese translated sets are expansion sets' refers to sets.type = 'expansion'", "'percentage of Japanese translated sets' refers to CAST(SUM(CASE WHEN set_translations.language = 'Japanese' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(sets.id)"]}, {"db_id": "formula_1", "question": "Which circuit did the 2009 Spanish Grand Prix use?", "evidence": "", "SQL": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.year = 2009 AND T2.name = 'Spanish GrAND Prix'", "question_toks": ["Which", "circuit", "did", "the", "2009", "Spanish", "Grand", "Prix", "use", "?"], "SQL_toks": ["SELECT", "T1.name", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T2.year", "=", "2009", "AND", "T2.name", "=", "'Spanish", "GrAND", "Prix", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'kind of printing' refers to cards.availability", "'printing is on the card that Daren Bader created' refers to cards.artist = 'Daren Bader'"]}, {"db_id": "formula_1", "question": "Please give more information about the Formula_1 races that used the Silverstone Circuit.", "evidence": "more information refers to url", "SQL": "SELECT DISTINCT T1.url FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Silverstone Circuit'", "question_toks": ["Please", "give", "more", "information", "about", "the", "Formula_1", "races", "that", "used", "the", "Silverstone", "Circuit", "."], "SQL_toks": ["SELECT", "DISTINCT", "T1.url", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.name", "=", "'Silverstone", "Circuit", "'"], "evidence_toks": ["more", "information", "refers", "to", "url"], "difficulty": "simple", "templatized_domain_statements": ["'are oversized' refers to cards.isOversized = 1", "'reprinted' refers to cards.isReprint = 1", "'printed for promotions' refers to cards.isPromo = 1"]}, {"db_id": "formula_1", "question": "How many Formula_1 races took place on the circuits in Italy?", "evidence": "", "SQL": "SELECT COUNT(T2.circuitId) FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.country = 'Italy'", "question_toks": ["How", "many", "Formula_1", "races", "took", "place", "on", "the", "circuits", "in", "Italy", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.circuitId", ")", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.country", "=", "'Italy", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'unknown power cards' refers to cards.power IS NULL OR cards.power = '*'", "'promotional types for arena league' refers to cards.promoTypes = 'arenaleague'"]}, {"db_id": "formula_1", "question": "Please list the exact dates on which a Formula_1 race took place on the Albert Park Grand Prix Circuit.", "evidence": "", "SQL": "SELECT T2.date FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Albert Park GrAND Prix Circuit'", "question_toks": ["Please", "list", "the", "exact", "dates", "on", "which", "a", "Formula_1", "race", "took", "place", "on", "the", "Albert", "Park", "Grand", "Prix", "Circuit", "."], "SQL_toks": ["SELECT", "T2.date", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T1.name", "=", "'Albert", "Park", "GrAND", "Prix", "Circuit", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'the card with the multiverse number (100)' refers to foreign_data.multiverseid = 100"]}, {"db_id": "formula_1", "question": "Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.", "evidence": "link of the website refers to url", "SQL": "SELECT T1.url FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.year = 2009 AND T2.name = 'Spanish GrAND Prix'", "question_toks": ["Please", "give", "the", "link", "of", "the", "website", "that", "shows", "more", "information", "about", "the", "circuits", "the", "Spanish", "Grand", "Prix", "used", "in", "2009", "."], "SQL_toks": ["SELECT", "T1.url", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T2.circuitID", "=", "T1.circuitId", "WHERE", "T2.year", "=", "2009", "AND", "T2.name", "=", "'Spanish", "GrAND", "Prix", "'"], "evidence_toks": ["link", "of", "the", "website", "refers", "to", "url"], "difficulty": "simple", "templatized_domain_statements": ["'don't appear in Magic: The Gathering Online' refers to sets.mtgoCode IS NULL"]}, {"db_id": "formula_1", "question": "What's the fastest lap time ever in a race for Lewis Hamilton?", "evidence": "fastest lap time ever refers to min(fastestLapTime)", "SQL": "SELECT T2.fastestLapTime FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1", "question_toks": ["What", "'s", "the", "fastest", "lap", "time", "ever", "in", "a", "race", "for", "Lewis", "Hamilton", "?"], "SQL_toks": ["SELECT", "T2.fastestLapTime", "FROM", "drivers", "AS", "T1", "INNER", "JOIN", "results", "AS", "T2", "ON", "T2.driverId", "=", "T1.driverId", "WHERE", "T1.forename", "=", "'Lewis", "'", "AND", "T1.surname", "=", "'Hamilton", "'", "AND", "T2.fastestLapTime", "IS", "NOT", "NULL", "ORDER", "BY", "T2.fastestLapTime", "ASC", "LIMIT", "1"], "evidence_toks": ["fastest", "lap", "time", "ever", "refers", "to", "min", "(", "fastestLapTime", ")"], "difficulty": "simple", "templatized_domain_statements": ["'set number (100)' refers to set_translations.id = 100"]}, {"db_id": "formula_1", "question": "Please list the Formula_1 races that Lewis Hamilton participated.", "evidence": "", "SQL": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton'", "question_toks": ["Please", "list", "the", "Formula_1", "races", "that", "Lewis", "Hamilton", "participated", "."], "SQL_toks": ["SELECT", "T1.name", "FROM", "races", "AS", "T1", "INNER", "JOIN", "results", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "ON", "T3.driverId", "=", "T2.driverId", "WHERE", "T3.forename", "=", "'Lewis", "'", "AND", "T3.surname", "=", "'Hamilton", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'Italian-language cards' refers to set_translations.language = 'Italian'"]}, {"db_id": "formula_1", "question": "In which years did Lewis Hamilton participate in a Formula_1 race?", "evidence": "", "SQL": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton'", "question_toks": ["In", "which", "years", "did", "Lewis", "Hamilton", "participate", "in", "a", "Formula_1", "race", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T1.year", "FROM", "races", "AS", "T1", "INNER", "JOIN", "results", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "ON", "T3.driverId", "=", "T2.driverId", "WHERE", "T3.forename", "=", "'Lewis", "'", "AND", "T3.surname", "=", "'Hamilton", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'available outside of the United States' refers to sets.isForeignOnly = 1", "'has foil cards' refers to sets.isFoilOnly = 1", "'with Japanese writing on them' refers to set_translations.language = 'Japanese'"]}, {"db_id": "formula_1", "question": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?", "evidence": "managed to finish the race refers to time is not null", "SQL": "SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Australian GrAND Prix' AND T1.year = 2008 AND T2.time IS NOT NULL", "question_toks": ["How", "many", "drivers", "managed", "to", "finish", "the", "race", "in", "the", "2008", "Australian", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T2.driverId", ")", "FROM", "races", "AS", "T1", "INNER", "JOIN", "results", "AS", "T2", "ON", "T2.raceId", "=", "T1.raceId", "WHERE", "T1.name", "=", "'Australian", "GrAND", "Prix", "'", "AND", "T1.year", "=", "2008", "AND", "T2.time", "IS", "NOT", "NULL"], "evidence_toks": ["managed", "to", "finish", "the", "race", "refers", "to", "time", "is", "not", "null"], "difficulty": "simple", "templatized_domain_statements": ["'just in Japanese' refers to set_translations.language = 'Japanese'", "'not in Magic: The Gathering Online' refers to sets.mtgoCode IS NULL"]}, {"db_id": "formula_1", "question": "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?", "evidence": "", "SQL": "SELECT T1.fastestLap FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.name = 'Australian GrAND Prix' AND T2.year = 2008 AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'", "question_toks": ["Which", "was", "the", "fastest", "lap", "for", "Lewis", "Hamilton", "in", "the", "2008", "Australian", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "T1.fastestLap", "FROM", "results", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "on", "T1.driverId", "=", "T3.driverId", "WHERE", "T2.name", "=", "'Australian", "GrAND", "Prix", "'", "AND", "T2.year", "=", "2008", "AND", "T3.forename", "=", "'Lewis", "'", "AND", "T3.surname", "=", "'Hamilton", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'frame effect as extendedart' refers to cards.frameEffects = 'extendedart'"]}, {"db_id": "formula_1", "question": "What is the rate of drivers completing all the laps in the 2008 Australian Grand Prix?", "evidence": "completing all the laps refers to time is not null; rate = divide(COUNT(raceID where time is not null), COUNT(raceID))", "SQL": "SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.resultId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian GrAND Prix' AND T2.year = 2008", "question_toks": ["What", "is", "the", "rate", "of", "drivers", "completing", "all", "the", "laps", "in", "the", "2008", "Australian", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "IIF", "(", "T1.time", "IS", "NOT", "NULL", ",", "1", ",", "0", ")", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.resultId", ")", "FROM", "results", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T1.raceId", "=", "T2.raceId", "WHERE", "T2.name", "=", "'Australian", "GrAND", "Prix", "'", "AND", "T2.year", "=", "2008"], "evidence_toks": ["completing", "all", "the", "laps", "refers", "to", "time", "is", "not", "null", ";", "rate", "=", "divide", "(", "COUNT", "(", "raceID", "where", "time", "is", "not", "null", ")", ",", "COUNT", "(", "raceID", ")", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'Among black card borders' refers to cards.borderColor = 'black'", "'which card has full artwork' refers to cards.isFullArt = 1"]}, {"db_id": "formula_1", "question": "How many circuits are there in Melbourne, Australia?", "evidence": "Australia is the country; Melbourne is the location of circuit;", "SQL": "SELECT COUNT(circuitId) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia'", "question_toks": ["How", "many", "circuits", "are", "there", "in", "Melbourne", ",", "Australia", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "circuitId", ")", "FROM", "circuits", "WHERE", "location", "=", "'Melbourne", "'", "AND", "country", "=", "'Australia", "'"], "evidence_toks": ["Australia", "is", "the", "country", ";", "Melbourne", "is", "the", "location", "of", "circuit", ";"], "difficulty": "simple", "templatized_domain_statements": ["'set code' refers to sets.code"]}, {"db_id": "formula_1", "question": "How many British drivers were born after 1980?", "evidence": "born after 1980 refers to year (dob) >1980;", "SQL": "SELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) > '1980'", "question_toks": ["How", "many", "British", "drivers", "were", "born", "after", "1980", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "driverId", ")", "FROM", "drivers", "WHERE", "nationality", "=", "'British", "'", "AND", "STRFTIME", "(", "'", "%", "Y", "'", ",", "dob", ")", ">", "'1980", "'"], "evidence_toks": ["born", "after", "1980", "refers", "to", "year", "(", "dob", ")", ">", "1980", ";"], "difficulty": "simple", "templatized_domain_statements": ["'code of sets have expansion type of 'expansion'' refers to sets.code WHERE sets.type = 'expansion'"]}, {"db_id": "formula_1", "question": "What are the average points of British constructors?", "evidence": "average points = AVG(points); British is a nationality", "SQL": "SELECT AVG(T1.points) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 on T1.constructorId = T2.constructorId WHERE T2.nationality = 'British'", "question_toks": ["What", "are", "the", "average", "points", "of", "British", "constructors", "?"], "SQL_toks": ["SELECT", "AVG", "(", "T1.points", ")", "FROM", "constructorStandings", "AS", "T1", "INNER", "JOIN", "constructors", "AS", "T2", "on", "T1.constructorId", "=", "T2.constructorId", "WHERE", "T2.nationality", "=", "'British", "'"], "evidence_toks": ["average", "points", "=", "AVG", "(", "points", ")", ";", "British", "is", "a", "nationality"], "difficulty": "simple", "templatized_domain_statements": ["'code of sets have expansion commander type' refers to sets.code WHERE sets.type = 'commander'"]}, {"db_id": "formula_1", "question": "How many French constructors have a lap number of over 50?", "evidence": "lap numbers of over 50 refers to laps > 50;", "SQL": "SELECT COUNT(DISTINCT T2.constructorId) FROM results AS T1 INNER JOIN constructors AS T2 on T1.constructorId = T2.constructorId WHERE T1.laps > 50 AND T2.nationality = 'French'", "question_toks": ["How", "many", "French", "constructors", "have", "a", "lap", "number", "of", "over", "50", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "DISTINCT", "T2.constructorId", ")", "FROM", "results", "AS", "T1", "INNER", "JOIN", "constructors", "AS", "T2", "on", "T1.constructorId", "=", "T2.constructorId", "WHERE", "T1.laps", ">", "50", "AND", "T2.nationality", "=", "'French", "'"], "evidence_toks": ["lap", "numbers", "of", "over", "50", "refers", "to", "laps", ">", "50", ";"], "difficulty": "simple", "templatized_domain_statements": ["'cards that are designed by Aaron Miller' refers to cards.artist = 'Aaron Miller'", "'are incredibly powerful' refers to cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL"]}, {"db_id": "formula_1", "question": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.", "evidence": "from 2007 to 2009 refers to year between 2007 and 2009; race completion refers to time is not null; percentage = Divide(COUNT(DriverID where time is not null and year between 2007 and 2009),Count (DriverID where year between 2007 and 2009))*100;", "SQL": "SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009", "question_toks": ["Please", "calculate", "the", "race", "completion", "percentage", "of", "Japanese", "drivers", "from", "2007", "to", "2009", "."], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "IIF", "(", "T1.time", "IS", "NOT", "NULL", ",", "1", ",", "0", ")", ")", "AS", "REAL", ")", "*", "100", "/", "COUNT", "(", "T1.raceId", ")", "FROM", "results", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "on", "T1.driverId", "=", "T3.driverId", "WHERE", "T3.nationality", "=", "'Japanese", "'", "AND", "T2.year", "BETWEEN", "2007", "AND", "2009"], "evidence_toks": ["from", "2007", "to", "2009", "refers", "to", "year", "between", "2007", "and", "2009", ";", "race", "completion", "refers", "to", "time", "is", "not", "null", ";", "percentage", "=", "Divide", "(", "COUNT", "(", "DriverID", "where", "time", "is", "not", "null", "and", "year", "between", "2007", "and", "2009", ")", ",", "Count", "(", "DriverID", "where", "year", "between", "2007", "and", "2009", ")", ")", "*100", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'cards available in paper' refers to cards.availability LIKE '%paper%'", "'have a positive starting maximum hand size' refers to cards.hAND LIKE '+%' AND cards.hAND != '+0'"]}, {"db_id": "formula_1", "question": "What is the average time of rounds for each year?", "evidence": "average time of round refers to Divide(SUM(time),SUM(round)) group by year;", "SQL": "SELECT SUM(time) / SUM(round) FROM races GROUP BY year HAVING SUM(time) / SUM(round) IS NOT NULL", "question_toks": ["What", "is", "the", "average", "time", "of", "rounds", "for", "each", "year", "?"], "SQL_toks": ["SELECT", "SUM", "(", "time", ")", "/", "SUM", "(", "round", ")", "FROM", "races", "GROUP", "BY", "year", "HAVING", "SUM", "(", "time", ")", "/", "SUM", "(", "round", ")", "IS", "NOT", "NULL"], "evidence_toks": ["average", "time", "of", "round", "refers", "to", "Divide", "(", "SUM", "(", "time", ")", ",", "SUM", "(", "round", ")", ")", "group", "by", "year", ";"], "difficulty": "simple", "templatized_domain_statements": ["'unconverted mana cost of the card \"Ancestor's Chosen\"' refers to cards.manaCost WHERE name = 'Ancestor`s Chosen'"]}, {"db_id": "formula_1", "question": "Which driver has the fastest lap time? Please give their forenames and surnames.", "evidence": "", "SQL": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId ORDER BY T1.fastestLapTime DESC LIMIT 1", "question_toks": ["Which", "driver", "has", "the", "fastest", "lap", "time", "?", "Please", "give", "their", "forenames", "and", "surnames", "."], "SQL_toks": ["SELECT", "T2.forename", ",", "T2.surname", "FROM", "results", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "on", "T1.driverId", "=", "T2.driverId", "ORDER", "BY", "T1.fastestLapTime", "DESC", "LIMIT", "1"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'have unknown power' refers to cards.power LIKE '%*%' OR cards.power IS NULL"]}, {"db_id": "formula_1", "question": "What is the fastest lap number of the champion in 2009?", "evidence": "in 2009 refers to year = 2009; champion refers to rank = 1;", "SQL": "SELECT T1.fastestLap FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T2.year = 2009 AND T1.rank = 1", "question_toks": ["What", "is", "the", "fastest", "lap", "number", "of", "the", "champion", "in", "2009", "?"], "SQL_toks": ["SELECT", "T1.fastestLap", "FROM", "results", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "WHERE", "T2.year", "=", "2009", "AND", "T1.rank", "=", "1"], "evidence_toks": ["in", "2009", "refers", "to", "year", "=", "2009", ";", "champion", "refers", "to", "rank", "=", "1", ";"], "difficulty": "simple", "templatized_domain_statements": ["'cards that are a promotional painting' refers to cards.isPromo = 1", "'cards that have multiple faces on the same card' refers to cards.side IS NOT NULL"]}, {"db_id": "formula_1", "question": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?", "evidence": "born before 1985 refers to year(dob)<1985; in 2000 to 2005 refers to year between 2000 and 2005; percentage = Divide(COUNT(driverId where year (dob) <1985 and laps >50),COUNT(DriverID where year between 2000 and 2005) *100;", "SQL": "SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / SUM(IIF(STRFTIME('%Y', T3.dob) < '1985', 1, 0)) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005", "question_toks": ["From", "2000", "to", "2005", ",", "what", "percentage", "of", "drivers", "who", "were", "born", "before", "1985", "and", "the", "lap", "numbers", "were", "over", "50", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "IIF", "(", "STRFTIME", "(", "'", "%", "Y", "'", ",", "T3.dob", ")", "<", "'1985", "'", "AND", "T1.laps", ">", "50", ",", "1", ",", "0", ")", ")", "AS", "REAL", ")", "*", "100", "/", "SUM", "(", "IIF", "(", "STRFTIME", "(", "'", "%", "Y", "'", ",", "T3.dob", ")", "<", "'1985", "'", ",", "1", ",", "0", ")", ")", "FROM", "results", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "on", "T1.driverId", "=", "T3.driverId", "WHERE", "T2.year", "BETWEEN", "2000", "AND", "2005"], "evidence_toks": ["born", "before", "1985", "refers", "to", "year", "(", "dob", ")", "<", "1985", ";", "in", "2000", "to", "2005", "refers", "to", "year", "between", "2000", "and", "2005", ";", "percentage", "=", "Divide", "(", "COUNT", "(", "driverId", "where", "year", "(", "dob", ")", "<", "1985", "and", "laps", ">", "50", ")", ",", "COUNT", "(", "DriverID", "where", "year", "between", "2000", "and", "2005", ")", "*100", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'cards that have the promotional type of \"bundle\"' refers to cards.promoTypes = 'bundle'", "'websites where I can purchase the cards that have the promotional type of \"bundle\"' refers to cards.purchaseUrls"]}, {"db_id": "formula_1", "question": "How many driver participated in race ID number 18?", "evidence": "", "SQL": "SELECT COUNT(driverId) FROM target WHERE raceId = 18", "question_toks": ["How", "many", "driver", "participated", "in", "race", "ID", "number", "18", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "driverId", ")", "FROM", "target", "WHERE", "raceId", "=", "18"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["\"Serra Angel\" refers to cards.name = 'Serra Angel'", "\"Shrine Keeper\" refers to cards.name = 'Shrine Keeper'", "'card costs more converted mana' refers to ORDER BY cards.convertedManaCost DESC LIMIT 1"]}, {"db_id": "formula_1", "question": "State code numbers of top 3 yougest drivers. How many Brazillian drivers among them?", "evidence": "youngest driver refers to Max (year(dob));", "SQL": "SELECT COUNT(*) FROM ( SELECT T1.nationality FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T1.dob DESC LIMIT 3 ) AS T3 WHERE T3.nationality = 'Brazillian'", "question_toks": ["State", "code", "numbers", "of", "top", "3", "yougest", "drivers", ".", "How", "many", "Brazillian", "drivers", "among", "them", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.nationality", "FROM", "drivers", "AS", "T1", "INNER", "JOIN", "lapTimes", "AS", "T2", "ON", "T1.driverId", "=", "T2.driverId", "ORDER", "BY", "T1.dob", "DESC", "LIMIT", "3", ")", "AS", "T3", "WHERE", "T3.nationality", "=", "'Brazillian", "'"], "evidence_toks": ["youngest", "driver", "refers", "to", "Max", "(", "year", "(", "dob", ")", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'card whose promotional name is \"Battra, Dark Destroyer\"' refers to cards.flavorName = 'Battra, Dark Destroyer'"]}, {"db_id": "formula_1", "question": "State the racing year which has the fastest lap time?", "evidence": "fatest lap time refers to Min(time);", "SQL": "SELECT T2.year FROM lapTimes AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId ORDER BY T1.time LIMIT 1", "question_toks": ["State", "the", "racing", "year", "which", "has", "the", "fastest", "lap", "time", "?"], "SQL_toks": ["SELECT", "T2.year", "FROM", "lapTimes", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "ORDER", "BY", "T1.time", "LIMIT", "1"], "evidence_toks": ["fatest", "lap", "time", "refers", "to", "Min", "(", "time", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'the set of cards with \"Ancestor's Chosen\" is in' refers to set_translations.language = 'Italian'", "'the set of cards with \"Ancestor's Chosen\" is in' refers to cards.name = \"Ancestor's Chosen\""]}, {"db_id": "formula_1", "question": "On what year did the youngest driver had his first qualifying race? State the name, date and time of the race.", "evidence": "youngest driver refers to Max (year(dob));", "SQL": "SELECT T3.year, T3.name, T3.date, T3.time FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T1.driverId = ( SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1 ) ORDER BY T3.date ASC LIMIT 1", "question_toks": ["On", "what", "year", "did", "the", "youngest", "driver", "had", "his", "first", "qualifying", "race", "?", "State", "the", "name", ",", "date", "and", "time", "of", "the", "race", "."], "SQL_toks": ["SELECT", "T3.year", ",", "T3.name", ",", "T3.date", ",", "T3.time", "FROM", "qualifying", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "on", "T1.driverId", "=", "T2.driverId", "INNER", "JOIN", "races", "AS", "T3", "on", "T1.raceId", "=", "T3.raceId", "WHERE", "T1.driverId", "=", "(", "SELECT", "driverId", "FROM", "drivers", "ORDER", "BY", "dob", "DESC", "LIMIT", "1", ")", "ORDER", "BY", "T3.date", "ASC", "LIMIT", "1"], "evidence_toks": ["youngest", "driver", "refers", "to", "Max", "(", "year", "(", "dob", ")", ")", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'the set of cards with \"Ancestor's Chosen\" in it' refers to cards.name = \"Ancestor's Chosen\"", "'Korean version' refers to set_translations.language = 'Korean'"]}, {"db_id": "formula_1", "question": "What is the website of the constructor who tallied the most total wins.", "evidence": "introduction website refers to url;", "SQL": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 on T1.constructorId = T2.constructorId ORDER BY T2.wins DESC LIMIT 1", "question_toks": ["What", "is", "the", "website", "of", "the", "constructor", "who", "tallied", "the", "most", "total", "wins", "."], "SQL_toks": ["SELECT", "T1.url", "FROM", "constructors", "AS", "T1", "INNER", "JOIN", "constructorStandings", "AS", "T2", "on", "T1.constructorId", "=", "T2.constructorId", "ORDER", "BY", "T2.wins", "DESC", "LIMIT", "1"], "evidence_toks": ["introduction", "website", "refers", "to", "url", ";"], "difficulty": "simple", "templatized_domain_statements": ["\"Hauptset Zehnte Edition\"' refers to set_translations.translation = 'Hauptset Zehnte Edition'", "'number of cards in the base set of \"Hauptset Zehnte Edition\"' refers to sets.baseSetSize"]}, {"db_id": "formula_1", "question": "In which race did the fastest 1st lap time was recorded? Please indicate the time in milliseconds.", "evidence": "fastest refers to Min(time);", "SQL": "SELECT T1.raceId FROM lapTimes AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T1.lap = 1 ORDER BY T1.time LIMIT 1", "question_toks": ["In", "which", "race", "did", "the", "fastest", "1st", "lap", "time", "was", "recorded", "?", "Please", "indicate", "the", "time", "in", "milliseconds", "."], "SQL_toks": ["SELECT", "T1.raceId", "FROM", "lapTimes", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "WHERE", "T1.lap", "=", "1", "ORDER", "BY", "T1.time", "LIMIT", "1"], "evidence_toks": ["fastest", "refers", "to", "Min", "(", "time", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'the name of the set \"Eighth Edition\"' refers to sets.name = 'Eighth Edition'", "'language' refers to set_translations.language = 'Chinese Simplified'", "'the Simplified Chinese translation of the name' refers to set_translations.translation"]}, {"db_id": "formula_1", "question": "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?", "evidence": "top 10 refers to rank <11; AVG(fastestLapTime);", "SQL": "SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T1.rank < 11 AND T2.year = 2006 AND T2.name = 'United States GrAND Prix'", "question_toks": ["What", "is", "the", "average", "fastest", "lap", "time", "of", "the", "top", "10", "drivers", "in", "the", "2006", "United", "States", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "AVG", "(", "T1.fastestLapTime", ")", "FROM", "results", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "WHERE", "T1.rank", "<", "11", "AND", "T2.year", "=", "2006", "AND", "T2.name", "=", "'United", "States", "GrAND", "Prix", "'"], "evidence_toks": ["top", "10", "refers", "to", "rank", "<", "11", ";", "AVG", "(", "fastestLapTime", ")", ";"], "difficulty": "simple", "templatized_domain_statements": ["'the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online' refers to cards.name = 'Angel of Mercy'", "'appear on Magic: The Gathering Online' refers to sets.mtgoCode IS NOT NULL"]}, {"db_id": "formula_1", "question": "List down top 5 German drivers who has the shortest average pit stop duration and were born between 1980-1985.", "evidence": "born between 1980-1985 refers to 1980< year(dob)>1985; Average pitstop duration refers to Divide(SUM(duration),COUNT(duration)); shortest average refers to Min(avg(duration));", "SQL": "SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 5", "question_toks": ["List", "down", "top", "5", "German", "drivers", "who", "has", "the", "shortest", "average", "pit", "stop", "duration", "and", "were", "born", "between", "1980-1985", "."], "SQL_toks": ["SELECT", "T2.forename", ",", "T2.surname", "FROM", "pitStops", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "on", "T1.driverId", "=", "T2.driverId", "WHERE", "T2.nationality", "=", "'German", "'", "AND", "STRFTIME", "(", "'", "%", "Y", "'", ",", "T2.dob", ")", "BETWEEN", "'1980", "'", "AND", "'1985", "'", "GROUP", "BY", "T2.forename", ",", "T2.surname", "ORDER", "BY", "AVG", "(", "T1.duration", ")", "LIMIT", "5"], "evidence_toks": ["born", "between", "1980-1985", "refers", "to", "1980", "<", "year", "(", "dob", ")", ">", "1985", ";", "Average", "pitstop", "duration", "refers", "to", "Divide", "(", "SUM", "(", "duration", ")", ",", "COUNT", "(", "duration", ")", ")", ";", "shortest", "average", "refers", "to", "Min", "(", "avg", "(", "duration", ")", ")", ";"], "difficulty": "challenging", "templatized_domain_statements": ["'the set \"Hauptset Zehnte Edition\"' refers to set_translations.translation = 'Hauptset Zehnte Edition'", "'expansion type' refers to sets.type"]}, {"db_id": "formula_1", "question": "Who is the champion of the Canadian Grand Prix in 2008? Indicate his finish time.", "evidence": "the time of the champion shows in the format of \"minutes: seconds.millionsecond\" in which Max(time);", "SQL": "SELECT T2.time FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.name = 'Canadian GrAND Prix' AND T2.year = 2008 ORDER BY T2.time DESC LIMIT 1", "question_toks": ["Who", "is", "the", "champion", "of", "the", "Canadian", "Grand", "Prix", "in", "2008", "?", "Indicate", "his", "finish", "time", "."], "SQL_toks": ["SELECT", "T2.time", "FROM", "results", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "INNER", "JOIN", "drivers", "AS", "T3", "on", "T1.driverId", "=", "T3.driverId", "WHERE", "T2.name", "=", "'Canadian", "GrAND", "Prix", "'", "AND", "T2.year", "=", "2008", "ORDER", "BY", "T2.time", "DESC", "LIMIT", "1"], "evidence_toks": ["the", "time", "of", "the", "champion", "shows", "in", "the", "format", "of", "``", "minutes", ":", "seconds.millionsecond", "''", "in", "which", "Max", "(", "time", ")", ";"], "difficulty": "moderate", "templatized_domain_statements": ["'Among the sets in the block \"Ice Age\"' refers to sets.block = 'Ice Age'", "'Italian translation' refers to set_translations.language = 'Italian'"]}, {"db_id": "formula_1", "question": "Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.", "evidence": "FFull name refers to forname+surname; Nationality refers to German; Date of birth refers to dob; year(dob) BETWEEN '1971' AND '1985'", "SQL": "SELECT forename, surname, url, dob FROM drivers WHERE nationality = 'German' AND STRFTIME('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC", "question_toks": ["Find", "the", "full", "name", ",", "Wiki", "Pedia", "page", "link", ",", "and", "date", "of", "birth", "of", "German", "drivers", "born", "between", "1971", "and", "1985", ".", "List", "it", "in", "descending", "order", "of", "date", "of", "birth", "."], "SQL_toks": ["SELECT", "forename", ",", "surname", ",", "url", ",", "dob", "FROM", "drivers", "WHERE", "nationality", "=", "'German", "'", "AND", "STRFTIME", "(", "'", "%", "Y", "'", ",", "dob", ")", "BETWEEN", "'1971", "'", "AND", "'1985", "'", "ORDER", "BY", "dob", "DESC"], "evidence_toks": ["FFull", "name", "refers", "to", "forname+surname", ";", "Nationality", "refers", "to", "German", ";", "Date", "of", "birth", "refers", "to", "dob", ";", "year", "(", "dob", ")", "BETWEEN", "'1971", "'", "AND", "'1985", "'"], "difficulty": "moderate", "templatized_domain_statements": ["'Among the sets of cards that have an Italian translation' refers to set_translations.language = 'Italian'", "'cards that have an translation' refers to set_translations.translation IS NOT NULL", "'base set number of under 10' refers to sets.baseSetSize < 10"]}, {"db_id": "formula_1", "question": "What is the annual average number of races held during the first 10 years of the 21st century?", "evidence": "races in date between '2000-01-01' and '2010-12-31'", "SQL": "SELECT CAST(SUM(CASE WHEN year BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS REAL) / 10 FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31'", "question_toks": ["What", "is", "the", "annual", "average", "number", "of", "races", "held", "during", "the", "first", "10", "years", "of", "the", "21st", "century", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "CASE", "WHEN", "year", "BETWEEN", "2000", "AND", "2010", "THEN", "1", "ELSE", "0", "END", ")", "AS", "REAL", ")", "/", "10", "FROM", "races", "WHERE", "date", "BETWEEN", "'2000-01-01", "'", "AND", "'2010-12-31", "'"], "evidence_toks": ["races", "in", "date", "between", "'2000-01-01", "'", "and", "'2010-12-31", "'"], "difficulty": "simple", "templatized_domain_statements": ["'cards in the set Coldsnap' refers to sets.name = 'Coldsnap'", "'cards in the set Coldsnap have a black border color' refers to cards.borderColor = 'black'"]}, {"db_id": "formula_1", "question": "Which racetrack hosted the most recent race? Indicate the full location.", "evidence": "full location refers to location+country; most recent race = MAX(date)\n\n", "SQL": "SELECT T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId ORDER BY T2.date DESC LIMIT 1", "question_toks": ["Which", "racetrack", "hosted", "the", "most", "recent", "race", "?", "Indicate", "the", "full", "location", "."], "SQL_toks": ["SELECT", "T1.location", "FROM", "circuits", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "ON", "T1.circuitId", "=", "T2.circuitId", "ORDER", "BY", "T2.date", "DESC", "LIMIT", "1"], "evidence_toks": ["full", "location", "refers", "to", "location+country", ";", "most", "recent", "race", "=", "MAX", "(", "date", ")"], "difficulty": "simple", "templatized_domain_statements": ["'the set Coldsnap' refers to sets.name = 'Coldsnap'", "'card number (100)' refers to cards.number = 100"]}, {"db_id": "formula_1", "question": "What is the name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?", "evidence": "Ranked 1st in the 3rd qualifying race refer to MIN(q3); 2008 is the year of race; name of racer = forename, surname", "SQL": "SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY q3 ASC LIMIT 1", "question_toks": ["What", "is", "the", "name", "of", "the", "racer", "who", "ranked", "1st", "in", "the", "3rd", "qualifying", "race", "held", "in", "the", "Marina", "Bay", "Street", "Circuit", "in", "2008", "?"], "SQL_toks": ["SELECT", "T2.forename", ",", "T2.surname", "FROM", "qualifying", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "on", "T1.driverId", "=", "T2.driverId", "INNER", "JOIN", "races", "AS", "T3", "ON", "T1.raceid", "=", "T3.raceid", "WHERE", "T3.circuitId", "IN", "(", "SELECT", "circuitId", "FROM", "circuits", "WHERE", "name", "=", "'Marina", "Bay", "Street", "Circuit", "'", ")", "ORDER", "BY", "q3", "ASC", "LIMIT", "1"], "evidence_toks": ["Ranked", "1st", "in", "the", "3rd", "qualifying", "race", "refer", "to", "MIN", "(", "q3", ")", ";", "2008", "is", "the", "year", "of", "race", ";", "name", "of", "racer", "=", "forename", ",", "surname"], "difficulty": "challenging", "templatized_domain_statements": ["'German type' refers to foreign_data.language = 'German'", "'German type of the card \"Ancestor's Chosen\"' refers to foreign_data.type where foreign_data.language = 'German' and cards.name = \"Ancestor's Chosen\""]}, {"db_id": "formula_1", "question": "As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.", "evidence": "full name refers to forename+surname; Youngest racer = MIN(dob)\n", "SQL": "SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN driverStandings AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T2.raceId = T3.raceId ORDER BY T1.dob DESC LIMIT 1", "question_toks": ["As", "of", "the", "present", ",", "what", "is", "the", "full", "name", "of", "the", "youngest", "racer", "?", "Indicate", "her", "nationality", "and", "the", "name", "of", "the", "race", "to", "which", "he/she", "first", "joined", "."], "SQL_toks": ["SELECT", "T1.forename", ",", "T1.surname", ",", "T1.nationality", ",", "T3.name", "FROM", "drivers", "AS", "T1", "INNER", "JOIN", "driverStandings", "AS", "T2", "on", "T1.driverId", "=", "T2.driverId", "INNER", "JOIN", "races", "AS", "T3", "on", "T2.raceId", "=", "T3.raceId", "ORDER", "BY", "T1.dob", "DESC", "LIMIT", "1"], "evidence_toks": ["full", "name", "refers", "to", "forename+surname", ";", "Youngest", "racer", "=", "MIN", "(", "dob", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'cards with a converted mana cost of (100)' refers to cards.convertedManaCost = 100", "'cards set Coldsnap' refers to sets.name = 'Coldsnap'", "'percentage of the cards with a converted mana cost of (100)' refers to CAST(SUM(CASE WHEN cards.convertedManaCost = 100 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id)"]}, {"db_id": "formula_1", "question": "How many accidents did the driver who had the highest number accidents in the Canadian Grand Prix have?", "evidence": "highest number of accidents refers to MAX(statusID) where statusid = 3; Canadian Grand Prix refers to the race of name\n", "SQL": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN status AS T3 on T1.statusId = T3.statusId WHERE T3.statusId = 3 AND T2.name = 'Canadian GrAND Prix'", "question_toks": ["How", "many", "accidents", "did", "the", "driver", "who", "had", "the", "highest", "number", "accidents", "in", "the", "Canadian", "Grand", "Prix", "have", "?"], "SQL_toks": ["SELECT", "COUNT", "(", "T1.driverId", ")", "FROM", "results", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "INNER", "JOIN", "status", "AS", "T3", "on", "T1.statusId", "=", "T3.statusId", "WHERE", "T3.statusId", "=", "3", "AND", "T2.name", "=", "'Canadian", "GrAND", "Prix", "'"], "evidence_toks": ["highest", "number", "of", "accidents", "refers", "to", "MAX", "(", "statusID", ")", "where", "statusid", "=", "3", ";", "Canadian", "Grand", "Prix", "refers", "to", "the", "race", "of", "name"], "difficulty": "moderate", "templatized_domain_statements": ["'keyrune code' refers to sets.keyruneCode"]}, {"db_id": "formula_1", "question": "What was the longest time a driver had ever spent at a pit stop?", "evidence": "longest time spent at pitstop refers to MAX(duration)", "SQL": "SELECT duration FROM pitStops ORDER BY duration DESC LIMIT 1", "question_toks": ["What", "was", "the", "longest", "time", "a", "driver", "had", "ever", "spent", "at", "a", "pit", "stop", "?"], "SQL_toks": ["SELECT", "duration", "FROM", "pitStops", "ORDER", "BY", "duration", "DESC", "LIMIT", "1"], "evidence_toks": ["longest", "time", "spent", "at", "pitstop", "refers", "to", "MAX", "(", "duration", ")"], "difficulty": "simple", "templatized_domain_statements": ["'magic card market name' refers to sets.mcmName"]}, {"db_id": "formula_1", "question": "Among all the lap records set on various circuits, what is the time for the fastest one?", "evidence": "", "SQL": "SELECT time FROM lapTimes ORDER BY time LIMIT 1", "question_toks": ["Among", "all", "the", "lap", "records", "set", "on", "various", "circuits", ",", "what", "is", "the", "time", "for", "the", "fastest", "one", "?"], "SQL_toks": ["SELECT", "time", "FROM", "lapTimes", "ORDER", "BY", "time", "LIMIT", "1"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'the number of cards' refers to sets.baseSetSize", "'the set of \"Rinascita di Alara\"' refers to set_translations.translation = 'Rinascita di Alara'"]}, {"db_id": "formula_1", "question": "During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?", "evidence": "", "SQL": "SELECT T1.lap FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2011 AND T3.name = 'Australian GrAND Prix'", "question_toks": ["During", "which", "lap", "did", "Lewis", "Hamilton", "take", "a", "pit", "stop", "during", "the", "2011", "Australian", "Grand", "Prix", "?"], "SQL_toks": ["SELECT", "T1.lap", "FROM", "pitStops", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "on", "T1.driverId", "=", "T2.driverId", "INNER", "JOIN", "races", "AS", "T3", "on", "T1.raceId", "=", "T3.raceId", "WHERE", "T2.forename", "=", "'Lewis", "'", "AND", "T2.surname", "=", "'Hamilton", "'", "AND", "T3.year", "=", "2011", "AND", "T3.name", "=", "'Australian", "GrAND", "Prix", "'"], "evidence_toks": [], "difficulty": "simple", "templatized_domain_statements": ["'the set \"Huiti\u00e8me \u00e9dition\"' refers to set_translations.translation = 'Huiti\u00e8me \u00e9dition'", "'expansion type' refers to sets.type"]}, {"db_id": "formula_1", "question": "What is the lap record set by Lewis Hamilton in a Formula_1 race?", "evidence": "lap recod means the fastest time recorded which refers to time", "SQL": "SELECT T1.time FROM lapTimes AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'", "question_toks": ["What", "is", "the", "lap", "record", "set", "by", "Lewis", "Hamilton", "in", "a", "Formula_1", "race", "?"], "SQL_toks": ["SELECT", "T1.time", "FROM", "lapTimes", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "on", "T1.driverId", "=", "T2.driverId", "WHERE", "T2.forename", "=", "'Lewis", "'", "AND", "T2.surname", "=", "'Hamilton", "'"], "evidence_toks": ["lap", "recod", "means", "the", "fastest", "time", "recorded", "which", "refers", "to", "time"], "difficulty": "simple", "templatized_domain_statements": ["'translations of the name' refers to COUNT(DISTINCT set_translations.translation)", "'many translations' refers to set_translations.translation IS NOT NULL", "'the name of the set \"Salvat 2011\"' refers to sets.name = 'Salvat 2011'"]}, {"db_id": "formula_1", "question": "Which driver created the shortest lap time ever record in a Formula_1 race? Please give his full name.", "evidence": "shortest lap time refers to MIN(time)", "SQL": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId ORDER BY T1.time LIMIT 1", "question_toks": ["Which", "driver", "created", "the", "shortest", "lap", "time", "ever", "record", "in", "a", "Formula_1", "race", "?", "Please", "give", "his", "full", "name", "."], "SQL_toks": ["SELECT", "T2.forename", ",", "T2.surname", "FROM", "lapTimes", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "on", "T1.driverId", "=", "T2.driverId", "ORDER", "BY", "T1.time", "LIMIT", "1"], "evidence_toks": ["shortest", "lap", "time", "refers", "to", "MIN", "(", "time", ")"], "difficulty": "simple", "templatized_domain_statements": ["'release date for the set' refers to sets.releaseDate ", "'the set \"Ola de fr\u00edo\"' refers to set_translations.translation = 'Ola de fr\u00edo'"]}, {"db_id": "formula_1", "question": "Please list the lap records for the circuits in Italy.", "evidence": "lap record means the fastest time recorded which refers to time", "SQL": "SELECT T1.time FROM lapTimes AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'", "question_toks": ["Please", "list", "the", "lap", "records", "for", "the", "circuits", "in", "Italy", "."], "SQL_toks": ["SELECT", "T1.time", "FROM", "lapTimes", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "INNER", "JOIN", "circuits", "AS", "T3", "on", "T2.circuitId", "=", "T3.circuitId", "WHERE", "T3.country", "=", "'Italy", "'"], "evidence_toks": ["lap", "record", "means", "the", "fastest", "time", "recorded", "which", "refers", "to", "time"], "difficulty": "simple", "templatized_domain_statements": ["'the expansion type for the set in it' refers to sets.type", "'the set which card \"Samite Pilgrim\" in it' refers to cards.name = 'Samite Pilgrim'"]}, {"db_id": "formula_1", "question": "In which Formula_1 race was the lap record for the Albert Park Grand Prix Circuit set?", "evidence": "lap record means the fastest time recorded which refers to time", "SQL": "SELECT DISTINCT T2.name FROM lapTimes AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.name = 'Albert Park GrAND Prix Circuit'", "question_toks": ["In", "which", "Formula_1", "race", "was", "the", "lap", "record", "for", "the", "Albert", "Park", "Grand", "Prix", "Circuit", "set", "?"], "SQL_toks": ["SELECT", "DISTINCT", "T2.name", "FROM", "lapTimes", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "INNER", "JOIN", "circuits", "AS", "T3", "on", "T2.circuitId", "=", "T3.circuitId", "WHERE", "T3.name", "=", "'Albert", "Park", "GrAND", "Prix", "Circuit", "'"], "evidence_toks": ["lap", "record", "means", "the", "fastest", "time", "recorded", "which", "refers", "to", "time"], "difficulty": "moderate", "templatized_domain_statements": ["'the set 'World Championship Decks 2004'' refers to sets.name = 'World Championship Decks 2004'"]}, {"db_id": "formula_1", "question": "What was the average time in milliseconds Lewis Hamilton spent at a pit stop during Formula_1 races?", "evidence": "average time in milliseconds spent at pit stop refers to AVG(milliseconds)", "SQL": "SELECT AVG(milliseconds) FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'", "question_toks": ["What", "was", "the", "average", "time", "in", "milliseconds", "Lewis", "Hamilton", "spent", "at", "a", "pit", "stop", "during", "Formula_1", "races", "?"], "SQL_toks": ["SELECT", "AVG", "(", "milliseconds", ")", "FROM", "pitStops", "AS", "T1", "INNER", "JOIN", "drivers", "AS", "T2", "on", "T1.driverId", "=", "T2.driverId", "WHERE", "T2.forename", "=", "'Lewis", "'", "AND", "T2.surname", "=", "'Hamilton", "'"], "evidence_toks": ["average", "time", "in", "milliseconds", "spent", "at", "pit", "stop", "refers", "to", "AVG", "(", "milliseconds", ")"], "difficulty": "simple", "templatized_domain_statements": ["'Simplified Chinese translation' refers to set_translations.language = 'Chinese Simplified'", "'of the name of the set \"Mirrodin\"' refers to sets.name = 'Mirrodin'"]}, {"db_id": "formula_1", "question": "What is the average lap time in milliseconds of all the lap records set on the various circuits in Italy?", "evidence": "average = AVG(milliseconds)", "SQL": "SELECT CAST(SUM(T1.milliseconds) AS REAL) / COUNT(T1.lap) FROM lapTimes AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'", "question_toks": ["What", "is", "the", "average", "lap", "time", "in", "milliseconds", "of", "all", "the", "lap", "records", "set", "on", "the", "various", "circuits", "in", "Italy", "?"], "SQL_toks": ["SELECT", "CAST", "(", "SUM", "(", "T1.milliseconds", ")", "AS", "REAL", ")", "/", "COUNT", "(", "T1.lap", ")", "FROM", "lapTimes", "AS", "T1", "INNER", "JOIN", "races", "AS", "T2", "on", "T1.raceId", "=", "T2.raceId", "INNER", "JOIN", "circuits", "AS", "T3", "on", "T2.circuitId", "=", "T3.circuitId", "WHERE", "T3.country", "=", "'Italy", "'"], "evidence_toks": ["average", "=", "AVG", "(", "milliseconds", ")"], "difficulty": "moderate", "templatized_domain_statements": ["'has Japanese translation' refers to set_translations.language = 'Japanese'", "'available in non-foil' refers to sets.isNonFoilOnly = 1", "'percentage of them are only available in non-foil' refers to CAST(SUM(CASE WHEN sets.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(sets.id)"]}]